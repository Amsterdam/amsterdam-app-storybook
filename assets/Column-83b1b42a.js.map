{"version":3,"file":"Column-83b1b42a.js","sources":["../../src/components/ui/layout/Column.tsx"],"sourcesContent":["import {ReactNode} from 'react'\nimport {FlexStyle, StyleSheet, View} from 'react-native'\nimport {\n  CrossAxisAlignment,\n  MainAxisAlignment,\n} from '@/components/ui/layout/types'\nimport {mapCrossAxisAlignment} from '@/components/ui/layout/utils/mapCrossAxisAlignment'\nimport {mapMainAxisAlignment} from '@/components/ui/layout/utils/mapMainAxisAlignment'\nimport {Theme} from '@/themes/themes'\nimport {SpacingTokens} from '@/themes/tokens/size'\nimport {useThemable} from '@/themes/useThemable'\n\nexport type ColumnProps = {\n  /** The vertical alignment of the items in the column. */\n  align?: MainAxisAlignment\n  /** The content of the column. */\n  children: ReactNode\n  /** Whether the column should grow to fill the available space. */\n  grow?: boolean\n  /** The amount of vertical spacing between the items in the column. */\n  gutter?: keyof SpacingTokens\n  /** The horizontal alignment of the items in the column. */\n  halign?: CrossAxisAlignment\n  /** Whether the items in the column should be reversed. */\n  reverse?: boolean\n} & Pick<FlexStyle, 'flex'>\n\n/**\n * Lays out its children vertically.\n *\n * Allows specifying the amount of spacing between the items, alignment of the items in the column, whether\n * the column should grow to fill the available space, and whether the items should be displayed in reverse order.\n *\n * @example <Column gutter=\"md\" flex={1}>â€¦</Column>\n */\nexport const Column = ({\n  align,\n  children,\n  flex,\n  grow,\n  gutter,\n  halign,\n  reverse,\n}: ColumnProps) => {\n  const styles = useThemable(\n    createStyles({align, flex, grow, gutter, halign, reverse}),\n  )\n\n  return <View style={styles.column}>{children}</View>\n}\n\nconst createStyles =\n  ({align, flex, grow, gutter, halign, reverse}: Partial<ColumnProps>) =>\n  ({size}: Theme) =>\n    StyleSheet.create({\n      column: {\n        flexDirection: reverse ? 'column-reverse' : 'column',\n        alignItems: mapCrossAxisAlignment(halign),\n        flex,\n        flexGrow: grow ? 1 : undefined,\n        flexShrink: 1,\n        justifyContent: mapMainAxisAlignment(align),\n        rowGap: gutter && size.spacing[gutter],\n      },\n    })\n"],"names":["Column","align","children","flex","grow","gutter","halign","reverse","styles","useThemable","createStyles","jsx","View","size","StyleSheet","mapCrossAxisAlignment","mapMainAxisAlignment"],"mappings":"kKAmCA,MAAAA,EAAA,CAAA,CACA,MAAAC,EACA,SAAAC,EACA,KAAAC,EACA,KAAAC,EACA,OAAAC,EACA,OAAAC,EACA,QAAAC,CACA,IAAA,CACA,MAAAC,EAAAC,EACAC,EAAA,CAAA,MAAAT,EAAA,KAAAE,EAAA,KAAAC,EAAA,OAAAC,EAAA,OAAAC,EAAA,QAAAC,EAAA,CAAA,EAGA,OAAAI,EAAAC,EAAA,CAAA,MAAAJ,EAAA,OAAA,SAAAN,CAAA,CAAA,CACA,EAEAQ,EACA,CAAA,CAAA,MAAAT,EAAA,KAAAE,EAAA,KAAAC,EAAA,OAAAC,EAAA,OAAAC,EAAA,QAAAC,KACA,CAAA,CAAA,KAAAM,CAAA,IACAC,EAAA,OAAA,CACA,OAAA,CACA,cAAAP,EAAA,iBAAA,SACA,WAAAQ,EAAAT,CAAA,EACA,KAAAH,EACA,SAAAC,EAAA,EAAA,OACA,WAAA,EACA,eAAAY,EAAAf,CAAA,EACA,OAAAI,GAAAQ,EAAA,QAAAR,CAAA,CACA,CACA,CAAA;;;;;"}