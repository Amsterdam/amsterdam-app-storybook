import{j as x}from"./jsx-runtime-BbjHj44Y.js";import{r as g}from"./index-C6mWTJJr.js";import{l as h}from"./layoutStyles-CtIJ01mY.js";import{u as y}from"./useThemable-PLjH4_iL.js";import{V as b}from"./index-DlZxTruE.js";import{s as V}from"./index-AX8Ze_yw.js";const p=g.memo(({borderColor:a,borderStyle:i,borderWidth:r,children:o,distinct:l,grow:u,inset:t="md",insetHorizontal:n,insetVertical:d,insetTop:m,insetBottom:v,shrink:s,variant:e,...c})=>{const f=y(q({borderColor:a,borderStyle:i,borderWidth:r,distinct:l,inset:t,insetHorizontal:n,insetTop:m,insetVertical:d,insetBottom:v,shrink:s,variant:e}));return x.jsx(b,{style:[f.box,u&&h.grow],...c,children:o})}),q=({borderColor:a,borderStyle:i,borderWidth:r,inset:o,insetHorizontal:l,insetTop:u,insetVertical:t,insetBottom:n,shrink:d,variant:m="default"})=>({border:v,color:s,size:e})=>V.create({box:{flexShrink:d,backgroundColor:s.box.background[m],borderColor:a?s.box.border[a]:void 0,borderStyle:i,borderWidth:r?v.width[r]:void 0,padding:o&&!l&&!u&&!n&&!t?e.spacing[o]:0,paddingHorizontal:l&&e.spacing[l],paddingTop:u&&e.spacing[u],paddingBottom:n&&e.spacing[n],paddingVertical:t&&e.spacing[t]}});try{p.displayName="Box",p.__docgenInfo={description:`Visually groups its content.
Allows to set insets and a background colour.`,displayName:"Box",props:{borderColor:{defaultValue:null,description:"",name:"borderColor",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"distinct"'},{value:'"onGrey"'},{value:'"cityPass"'}]}},borderStyle:{defaultValue:null,description:"",name:"borderStyle",required:!1,type:{name:"enum",value:[{value:'"dashed"'},{value:'"dotted"'},{value:'"solid"'}]}},borderWidth:{defaultValue:null,description:"",name:"borderWidth",required:!1,type:{name:"enum",value:[{value:'"sm"'},{value:'"md"'},{value:'"lg"'},{value:'"xl"'}]}},distinct:{defaultValue:null,description:"",name:"distinct",required:!1,type:{name:"undefined"}},grow:{defaultValue:null,description:"Whether the box grows to fill its parent container.",name:"grow",required:!1,type:{name:"boolean"}},inset:{defaultValue:null,description:"The amount of inner spacing.",name:"inset",required:!1,type:{name:"enum",value:[{value:'"no"'},{value:'"sm"'},{value:'"md"'},{value:'"lg"'},{value:'"xl"'},{value:'"xxs"'},{value:'"xs"'},{value:'"smd"'},{value:'"xxl"'}]}},insetBottom:{defaultValue:null,description:"The amount of inner spacing at the end of ltr",name:"insetBottom",required:!1,type:{name:"enum",value:[{value:'"no"'},{value:'"sm"'},{value:'"md"'},{value:'"lg"'},{value:'"xl"'},{value:'"xxs"'},{value:'"xs"'},{value:'"smd"'},{value:'"xxl"'}]}},insetHorizontal:{defaultValue:null,description:"The amount of inner spacing at the left and right.",name:"insetHorizontal",required:!1,type:{name:"enum",value:[{value:'"no"'},{value:'"sm"'},{value:'"md"'},{value:'"lg"'},{value:'"xl"'},{value:'"xxs"'},{value:'"xs"'},{value:'"smd"'},{value:'"xxl"'}]}},insetTop:{defaultValue:null,description:"The amount of inner spacing at the start of ltr",name:"insetTop",required:!1,type:{name:"enum",value:[{value:'"no"'},{value:'"sm"'},{value:'"md"'},{value:'"lg"'},{value:'"xl"'},{value:'"xxs"'},{value:'"xs"'},{value:'"smd"'},{value:'"xxl"'}]}},insetVertical:{defaultValue:null,description:"The amount of inner spacing at the top and bottom.",name:"insetVertical",required:!1,type:{name:"enum",value:[{value:'"no"'},{value:'"sm"'},{value:'"md"'},{value:'"lg"'},{value:'"xl"'},{value:'"xxs"'},{value:'"xs"'},{value:'"smd"'},{value:'"xxl"'}]}},shrink:{defaultValue:null,description:"",name:"shrink",required:!1,type:{name:"number"}},variant:{defaultValue:{value:"default"},description:`Whether the box has a background color, setting it apart from its surroundings.
default: full transparent
distinct: In light mode, it is white. Only to be used when the box covers another color, like on light grey (settings) screens or in the navigation header.
cityPass: for use in city-pass module
primary: for primary color boxes`,name:"variant",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"primary"'},{value:'"distinct"'},{value:'"cityPass"'}]}}}}}catch{}export{p as B};
