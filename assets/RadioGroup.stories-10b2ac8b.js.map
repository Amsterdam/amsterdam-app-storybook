{"version":3,"file":"RadioGroup.stories-10b2ac8b.js","sources":["../../src/components/ui/forms/Radio.tsx","../../src/components/ui/forms/RadioGroup.tsx"],"sourcesContent":["import {Pressable, PressableProps} from 'react-native'\nimport {Circle, Svg} from 'react-native-svg'\nimport {Row} from '@/components/ui/layout/Row'\nimport {Phrase} from '@/components/ui/text/Phrase'\nimport {useTheme} from '@/themes/useTheme'\n\ntype RadioProps = {\n  isSelected: boolean\n  label: string\n  onPress: () => void\n} & PressableProps\n\ntype RadioIndicatorProps = {\n  checked: boolean\n}\n\nconst RadioIndicator = ({checked}: RadioIndicatorProps) => {\n  const {color} = useTheme()\n\n  return (\n    <Svg\n      height={24}\n      viewBox=\"0 0 24 24\"\n      width={24}>\n      <Circle\n        cx={12}\n        cy={12}\n        fill={color.control.default.background}\n        r={11}\n        stroke={color.control.checked.border}\n        strokeWidth={2}\n      />\n      {!!checked && (\n        <Circle\n          cx={12}\n          cy={12}\n          fill={color.control.checked.border}\n          r={8}\n        />\n      )}\n    </Svg>\n  )\n}\n\nexport const Radio = ({\n  label,\n  isSelected,\n  onPress,\n  ...pressableProps\n}: RadioProps) => (\n  <Pressable\n    {...pressableProps}\n    accessibilityState={{selected: isSelected}}\n    onPress={onPress}>\n    <Row\n      gutter=\"sm\"\n      valign=\"center\">\n      <RadioIndicator checked={isSelected} />\n      <Phrase>{label}</Phrase>\n    </Row>\n  </Pressable>\n)\n","import {Radio} from '@/components/ui/forms/Radio'\nimport {Column} from '@/components/ui/layout/Column'\nimport {TestProps} from '@/components/ui/types'\n\nexport type RadioGroupOption<T> = {\n  label: string\n  value: T\n}\n\ntype RadioGroupProps<T> = {\n  onChange: (value: T) => void\n  options: RadioGroupOption<T>[]\n  value?: T\n} & TestProps\n\ntype RadioValue = string | number | boolean\n\nexport const RadioGroup = <T extends RadioValue>({\n  options = [],\n  onChange,\n  testID,\n  value,\n}: RadioGroupProps<T>) => (\n  <Column gutter=\"md\">\n    {options.map(({label, value: optionValue}) => (\n      <Radio\n        isSelected={value === optionValue}\n        key={label}\n        label={label}\n        onPress={() => onChange(optionValue)}\n        testID={\n          testID ? `${testID}${optionValue.toString()}RadioButton` : undefined\n        }\n      />\n    ))}\n  </Column>\n)\n"],"names":["RadioIndicator","checked","color","useTheme","jsxs","Svg","jsx","Circle","Radio","label","isSelected","onPress","pressableProps","Pressable","Row","Phrase","RadioGroup","options","onChange","testID","value","Column","optionValue"],"mappings":"2iBAgBA,MAAAA,EAAA,CAAA,CAAA,QAAAC,KAAA,CACA,KAAA,CAAA,MAAAC,GAAAC,IAGA,OAAAC,EAAAC,EAAA,CACA,OAAA,GACA,QAAA,YACA,MAAA,GACA,SAAA,CAAAC,EAAAC,EAAA,CACA,GAAA,GACA,GAAA,GACA,KAAAL,EAAA,QAAA,QAAA,WACA,EAAA,GACA,OAAAA,EAAA,QAAA,QAAA,OACA,YAAA,CAAA,CACA,EACA,CAAA,CAAAD,GACAK,EAAAC,EAAA,CACA,GAAA,GACA,GAAA,GACA,KAAAL,EAAA,QAAA,QAAA,OACA,EAAA,CAAA,CACA,CAAA,CAAA,CAAA,CAIA,EAEAM,EAAA,CAAA,CACA,MAAAC,EACA,WAAAC,EACA,QAAAC,EACA,GAAAC,CACA,IACAN,EAAAO,EAAA,CACA,GAAAD,EACA,mBAAA,CAAA,SAAAF,CAAA,EACA,QAAAC,EACA,SAAAP,EAAAU,EAAA,CACA,OAAA,KACA,OAAA,SACA,SAAA,CAAAR,EAAAN,EAAA,CAAA,QAAAU,CAAA,CAAA,EACAJ,EAAAS,GAAA,SAAAN,CAAA,CAAA,CAAA,CAAA,CACA,CAAA,CACA,iVC3CA,MAAAO,EAAA,CAAA,CACA,QAAAC,EAAA,CAAA,EACA,SAAAC,EACA,OAAAC,EACA,MAAAC,CACA,IACAd,EAAAe,EAAA,CAAA,OAAA,KACA,SAAAJ,EAAA,IAAA,CAAA,CAAA,MAAAR,EAAA,MAAAa,CACA,IAAAhB,EAAAE,EAAA,CACA,WAAAY,IAAAE,EAEA,MAAAb,EACA,QAAA,IAAAS,EAAAI,CAAA,EACA,OACAH,EAAA,GAAAA,CAAA,GAAAG,EAAA,SAAA,CAAA,cAAA,MAAA,EAJAb,CAMA,CACA,CACA,CAAA;;;;;;;;"}