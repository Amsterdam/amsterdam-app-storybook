{"version":3,"file":"Checkbox.stories-86748584.js","sources":["../../src/components/ui/forms/Checkbox.tsx"],"sourcesContent":["import {ReactNode} from 'react'\nimport {\n  AccessibilityProps,\n  StyleSheet,\n  TouchableHighlight,\n  TouchableHighlightProps,\n  View,\n} from 'react-native'\nimport {FormField} from '@/components/ui/forms/FormField'\nimport {MainAxisPosition} from '@/components/ui/layout/types'\nimport {Icon} from '@/components/ui/media/Icon'\nimport {TestProps} from '@/components/ui/types'\nimport {Theme} from '@/themes/themes'\nimport {useThemable} from '@/themes/useThemable'\n\ntype Props = {\n  label: ReactNode\n  labelPosition?: MainAxisPosition\n  onValueChange: () => void\n  value: boolean\n} & Required<TestProps> &\n  Pick<AccessibilityProps, 'accessibilityLabel'>\n\nexport const Checkbox = ({\n  accessibilityLabel,\n  label,\n  labelPosition = 'end',\n  onValueChange,\n  testID,\n  value,\n}: Props) => {\n  const styles = useThemable(createStyles)\n  const touchableProps = useThemable(createTouchableProps)\n\n  return (\n    <TouchableHighlight\n      accessibilityLabel={accessibilityLabel}\n      accessibilityLanguage=\"nl-NL\"\n      accessibilityRole=\"checkbox\"\n      accessibilityState={{selected: value}}\n      onPress={onValueChange}\n      testID={testID}\n      {...touchableProps}>\n      <FormField\n        label={label}\n        labelPosition={labelPosition}>\n        <View style={[styles.checkbox, value && styles.checked]}>\n          {!!value && (\n            <Icon\n              color=\"inverse\"\n              name=\"checkmark\"\n            />\n          )}\n        </View>\n      </FormField>\n    </TouchableHighlight>\n  )\n}\n\nconst createStyles = ({color}: Theme) =>\n  StyleSheet.create({\n    checkbox: {\n      width: 24,\n      aspectRatio: 1,\n      padding: 2,\n      borderWidth: 2,\n      borderColor: color.control.checked.background,\n      backgroundColor: color.control.default.background,\n    },\n    checked: {\n      backgroundColor: color.control.checked.background,\n    },\n  })\n\nconst createTouchableProps = ({color}: Theme): TouchableHighlightProps => ({\n  underlayColor: color.box.background.white,\n})\n"],"names":["Checkbox","accessibilityLabel","label","labelPosition","onValueChange","testID","value","styles","useThemable","createStyles","touchableProps","createTouchableProps","jsx","TouchableHighlight","FormField","View","Icon","color","StyleSheet"],"mappings":"k8BAuBO,MAAAA,EAAA,CAAA,CAAkB,mBAAAC,EACvB,MAAAC,EACA,cAAAC,EAAA,MACgB,cAAAC,EAChB,OAAAC,EACA,MAAAC,CAEF,IAAA,CACE,MAAAC,EAAAC,EAAAC,CAAA,EACAC,EAAAF,EAAAG,CAAA,EAEA,OAAAC,EACEC,EAAC,CAAA,mBAAAZ,EACC,sBAAA,QACsB,kBAAA,WACJ,mBAAA,CAAA,SAAAK,CAAA,EACkB,QAAAF,EAC3B,OAAAC,EACT,GAAAK,EACI,SAAAE,EACJE,EAAC,CAAA,MAAAZ,EACC,cAAAC,EACA,SAAAS,EAAAG,EAAA,CAAA,MAAA,CAAAR,EAAA,SAAAD,GAAAC,EAAA,OAAA,EAAA,SAAA,CAAA,CAAAD,GAAAM,EAGII,EAAC,CAAA,MAAA,UACO,KAAA,WACD,CAAA,EAAA,CAGX,CAAA,CACF,CAAA,CAGN,EAEAP,EAAA,CAAA,CAAA,MAAAQ,KAAAC,EAAA,OAAA,CACoB,SAAA,CACN,MAAA,GACD,YAAA,EACM,QAAA,EACJ,YAAA,EACI,YAAAD,EAAA,QAAA,QAAA,WACsB,gBAAAA,EAAA,QAAA,QAAA,UACI,EACzC,QAAA,CACS,gBAAAA,EAAA,QAAA,QAAA,UACgC,CAE3C,CAAA,EAEFN,EAAA,CAAA,CAAA,MAAAM,MAAA,CAA2E,cAAAA,EAAA,IAAA,WAAA,KAE3E;;;;;;"}