{"version":3,"file":"Tooltip.stories-2c82e109.js","sources":["../../src/components/ui/utils/mapPlacementToDirection.ts","../../src/components/ui/feedback/Tooltip.tsx"],"sourcesContent":["import {Direction, Placement} from '@/components/ui/types'\n\nexport const mapPlacementToDirection = (placement: Placement): Direction => {\n  const mapping: Record<Placement, Direction> = {\n    [Placement.above]: Direction.down,\n    [Placement.below]: Direction.up,\n    [Placement.before]: Direction.right,\n    [Placement.after]: Direction.left,\n  }\n\n  return mapping[placement]\n}\n","import {\n  ElementRef,\n  forwardRef,\n  useImperativeHandle,\n  useState,\n  useEffect,\n} from 'react'\nimport {AccessibilityProps, StyleSheet} from 'react-native'\nimport {Pressable} from '@/components/ui/buttons/Pressable'\nimport {SingleSelectable} from '@/components/ui/containers/SingleSelectable'\nimport {Triangle} from '@/components/ui/feedback/Triangle'\nimport {Column} from '@/components/ui/layout/Column'\nimport {Row} from '@/components/ui/layout/Row'\nimport {Paragraph} from '@/components/ui/text/Paragraph'\nimport {Placement, TestProps} from '@/components/ui/types'\nimport {mapPlacementToDirection} from '@/components/ui/utils/mapPlacementToDirection'\nimport {useAccessibilityFocus} from '@/hooks/accessibility/useAccessibilityFocus'\nimport {Theme} from '@/themes/themes'\nimport {useThemable} from '@/themes/useThemable'\n\ntype Props = {\n  onChange: (isOpen: boolean) => void\n  placement: Placement\n  text: string | string[]\n} & Pick<AccessibilityProps, 'accessibilityLabel' | 'accessibilityLanguage'> &\n  TestProps\n\nconst TooltipContent = ({\n  accessibilityLabel,\n  accessibilityLanguage = 'nl-NL',\n  testID,\n  text,\n}: Pick<\n  Props,\n  'accessibilityLabel' | 'accessibilityLanguage' | 'testID' | 'text'\n>) => {\n  const styles = useThemable(createStyles)\n  const paragraphs = typeof text === 'string' ? [text] : text\n\n  return (\n    <SingleSelectable\n      accessibilityLabel={accessibilityLabel}\n      accessibilityLanguage={accessibilityLanguage}\n      accessibilityRole=\"text\"\n      accessible={true}\n      style={styles.tooltip}\n      testID={testID}>\n      <Column gutter=\"sm\">\n        {paragraphs.map((paragraph, index) => (\n          <Paragraph\n            color=\"inverse\"\n            key={paragraph}\n            testID={testID && index === 0 ? `${testID}Paragraph` : undefined}\n            variant=\"small\">\n            {paragraph}\n          </Paragraph>\n        ))}\n      </Column>\n    </SingleSelectable>\n  )\n}\n\ntype TooltipRefProps = {\n  isOpen: boolean\n  onClose: () => void\n  onOpen: () => void\n  onToggle: () => void\n}\n\nexport const Tooltip = forwardRef<TooltipRefProps, Props>(\n  (\n    {\n      accessibilityLabel,\n      accessibilityLanguage = 'nl-NL',\n      placement,\n      testID,\n      text,\n      onChange,\n    },\n    ref,\n  ) => {\n    const props = {direction: mapPlacementToDirection(placement)}\n    const [isOpen, setIsOpen] = useState<boolean>(false)\n    const setAccessibilityFocus = useAccessibilityFocus()\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        onOpen: () => setIsOpen(true),\n        onToggle: () => setIsOpen(prev => !prev),\n        onClose: () => setIsOpen(false),\n        isOpen,\n      }),\n      [isOpen],\n    )\n\n    useEffect(() => {\n      onChange(isOpen)\n    }, [isOpen, onChange])\n\n    return (\n      isOpen && (\n        <Pressable\n          insetHorizontal=\"lg\"\n          onPress={() => setIsOpen(false)}\n          ref={setAccessibilityFocus}>\n          <Row>\n            {placement === Placement.after && <Triangle {...props} />}\n            <Column>\n              {placement === Placement.below && <Triangle {...props} />}\n              <TooltipContent\n                accessibilityLabel={accessibilityLabel}\n                accessibilityLanguage={accessibilityLanguage}\n                testID={testID}\n                text={text}\n              />\n              {placement === Placement.above && <Triangle {...props} />}\n            </Column>\n            {placement === Placement.before && <Triangle {...props} />}\n          </Row>\n        </Pressable>\n      )\n    )\n  },\n)\n\nconst createStyles = ({color, size}: Theme) =>\n  StyleSheet.create({\n    tooltip: {\n      padding: size.spacing.md,\n      backgroundColor: color.background.inverse,\n    },\n  })\n\nexport type Tooltip = ElementRef<typeof Tooltip>\n"],"names":["mapPlacementToDirection","placement","Placement","Direction","TooltipContent","accessibilityLabel","accessibilityLanguage","testID","text","styles","useThemable","createStyles","paragraphs","jsx","SingleSelectable","Column","paragraph","index","Paragraph","Tooltip","forwardRef","onChange","ref","props","isOpen","setIsOpen","useState","setAccessibilityFocus","useAccessibilityFocus","useImperativeHandle","prev","useEffect","Pressable","jsxs","Row","Triangle","color","size","StyleSheet"],"mappings":"kkCAEa,MAAAA,EAA2BC,IACQ,CAC5C,CAACC,EAAU,KAAK,EAAGC,EAAU,KAC7B,CAACD,EAAU,KAAK,EAAGC,EAAU,GAC7B,CAACD,EAAU,MAAM,EAAGC,EAAU,MAC9B,CAACD,EAAU,KAAK,EAAGC,EAAU,IAAA,GAGhBF,CAAS,ECiB1BG,EAAA,CAAA,CAAwB,mBAAAC,EACtB,sBAAAC,EAAA,QACwB,OAAAC,EACxB,KAAAC,CAEF,IAAA,CAIE,MAAAC,EAAAC,EAAAC,CAAA,EACAC,EAAA,OAAAJ,GAAA,SAAA,CAAAA,CAAA,EAAAA,EAEA,OAAAK,EACEC,EAAC,CAAA,mBAAAT,EACC,sBAAAC,EACA,kBAAA,OACkB,WAAA,GACN,MAAAG,EAAA,QACE,OAAAF,EACd,SAAAM,EAAAE,EAAA,CAAA,OAAA,KAAA,SAAAH,EAAA,IAAA,CAAAI,EAAAC,IAAAJ,EAGIK,EAAC,CAAA,MAAA,UACO,OAAAX,GAAAU,IAAA,EAAA,GAAAV,CAAA,YAAA,OAEiD,QAAA,QAC/C,SAAAS,CACP,EAAAA,CAHI,CAAA,EAAA,CAMX,CAAA,CAGN,EASOG,EAAAC,EAAA,WAAgB,CAAA,CAEnB,mBAAAf,EACE,sBAAAC,EAAA,QACwB,UAAAL,EACxB,OAAAM,EACA,KAAAC,EACA,SAAAa,CACA,EAAAC,IAAA,CAIF,MAAAC,EAAA,CAAA,UAAAvB,EAAAC,CAAA,CAAA,EACA,CAAAuB,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EACAC,EAAAC,IAEAC,OAAAA,EAAA,oBAAAP,EACE,KAAA,CACO,OAAA,IAAAG,EAAA,EAAA,EACuB,SAAA,IAAAA,EAAAK,GAAA,CAAAA,CAAA,EACW,QAAA,IAAAL,EAAA,EAAA,EACT,OAAAD,CAC9B,GACF,CAAAA,CAAA,CACO,EAGTO,EAAAA,UAAA,IAAA,CACEV,EAAAG,CAAA,CAAe,EAAA,CAAAA,EAAAH,CAAA,CAAA,EAGjBG,GAAAX,EAEImB,EAAC,CAAA,gBAAA,KACiB,QAAA,IAAAP,EAAA,EAAA,EACc,IAAAE,EACzB,SAAAM,EAAAC,EAAA,CAAA,SAAA,CAEFjC,IAAAC,EAAA,OAAAW,EAAAsB,EAAA,CAAA,GAAAZ,EAAA,EAAsDU,EAAAlB,EAAA,CAAA,SAAA,CAEpDd,IAAAC,EAAA,OAAAW,EAAAsB,EAAA,CAAA,GAAAZ,EAAA,EAAsDV,EACvDT,EAAC,CAAA,mBAAAC,EACC,sBAAAC,EACA,OAAAC,EACA,KAAAC,CACA,CAAA,EACFP,IAAAC,EAAA,OAAAW,EAAAsB,EAAA,CAAA,GAAAZ,EAAA,CACuD,EAAA,EACzDtB,IAAAC,EAAA,QAAAW,EAAAsB,EAAA,CAAA,GAAAZ,EAAA,CACwD,EAAA,CAC1D,CAAA,CACF,CAIR,EAEAZ,EAAA,CAAA,CAAA,MAAAyB,EAAA,KAAAC,CAAA,IAAAC,EAAA,OAAA,CACoB,QAAA,CACP,QAAAD,EAAA,QAAA,GACe,gBAAAD,EAAA,WAAA,OACY,CAEtC,CAAA;;;;;;;;;;"}