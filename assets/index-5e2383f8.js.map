{"version":3,"file":"index-5e2383f8.js","sources":["../../node_modules/react-native-web/dist/exports/useWindowDimensions/index.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n\n'use strict';\n\nimport Dimensions from '../Dimensions';\nimport { useEffect, useState } from 'react';\nexport default function useWindowDimensions() {\n  var _useState = useState(() => Dimensions.get('window')),\n    dims = _useState[0],\n    setDims = _useState[1];\n  useEffect(() => {\n    function handleChange(_ref) {\n      var window = _ref.window;\n      if (window != null) {\n        setDims(window);\n      }\n    }\n    Dimensions.addEventListener('change', handleChange);\n    // We might have missed an update between calling `get` in render and\n    // `addEventListener` in this handler, so we set it here. If there was\n    // no change, React will filter out this update as a no-op.\n    setDims(Dimensions.get('window'));\n    return () => {\n      Dimensions.removeEventListener('change', handleChange);\n    };\n  }, []);\n  return dims;\n}"],"names":["useWindowDimensions","_useState","useState","Dimensions","dims","setDims","useEffect","handleChange","_ref","window"],"mappings":"gFAce,SAASA,GAAsB,CAC5C,IAAIC,EAAYC,EAAAA,SAAS,IAAMC,EAAW,IAAI,QAAQ,CAAC,EACrDC,EAAOH,EAAU,CAAC,EAClBI,EAAUJ,EAAU,CAAC,EACvBK,OAAAA,EAAAA,UAAU,IAAM,CACd,SAASC,EAAaC,EAAM,CAC1B,IAAIC,EAASD,EAAK,OACdC,GAAU,MACZJ,EAAQI,CAAM,CAEjB,CACD,OAAAN,EAAW,iBAAiB,SAAUI,CAAY,EAIlDF,EAAQF,EAAW,IAAI,QAAQ,CAAC,EACzB,IAAM,CACXA,EAAW,oBAAoB,SAAUI,CAAY,CAC3D,CACG,EAAE,CAAE,CAAA,EACEH,CACT","x_google_ignoreList":[0]}