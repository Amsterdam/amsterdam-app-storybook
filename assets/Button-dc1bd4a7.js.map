{"version":3,"file":"Button-dc1bd4a7.js","sources":["../../src/components/ui/buttons/Button.tsx"],"sourcesContent":["import {useCallback, useState} from 'react'\nimport {\n  GestureResponderEvent,\n  Pressable,\n  PressableProps,\n  StyleSheet,\n  Text,\n} from 'react-native'\nimport {config} from '@/components/ui/config'\nimport {Row} from '@/components/ui/layout/Row'\nimport {Icon} from '@/components/ui/media/Icon'\nimport {IconName} from '@/components/ui/media/iconPaths'\nimport {Theme} from '@/themes/themes'\nimport {useThemable} from '@/themes/useThemable'\n\nexport type ButtonVariant = 'primary' | 'secondary' | 'tertiary'\n\nexport type ButtonProps = {\n  ellipsizeMode?: 'head' | 'tail' | 'middle' | 'clip'\n  iconName?: IconName\n  label?: string\n  numberOfLines?: number\n  small?: boolean\n  variant?: ButtonVariant\n} & Omit<PressableProps, 'style'>\n\nexport const Button = ({\n  ellipsizeMode,\n  iconName,\n  label,\n  numberOfLines,\n  small,\n  testID,\n  variant = 'primary',\n  ...pressableProps\n}: ButtonProps) => {\n  const [isPressed, setIsPressed] = useState(false)\n  const styles = useThemable(createStyles({small, variant}, isPressed))\n  const {onPressIn, onPressOut} = pressableProps\n\n  const mergeOnPressIn = useCallback(\n    (e: GestureResponderEvent) => {\n      setIsPressed(true)\n      onPressIn?.(e)\n    },\n    [onPressIn],\n  )\n\n  const mergeOnPressOut = useCallback(\n    (e: GestureResponderEvent) => {\n      setIsPressed(false)\n      onPressOut?.(e)\n    },\n    [onPressOut],\n  )\n\n  return (\n    <Pressable\n      accessibilityRole=\"button\"\n      onPressIn={mergeOnPressIn}\n      onPressOut={mergeOnPressOut}\n      style={styles.button}\n      testID={testID}\n      {...pressableProps}>\n      <Row\n        gutter=\"sm\"\n        valign=\"center\">\n        {!!iconName && (\n          <Icon\n            color={variant === 'primary' ? 'inverse' : 'link'}\n            name={iconName}\n            size=\"lg\"\n            testID={testID ? `${testID}Icon` : undefined}\n          />\n        )}\n        {!!label && (\n          <Text\n            ellipsizeMode={ellipsizeMode}\n            numberOfLines={numberOfLines}\n            style={styles.label}\n            testID={testID ? `${testID}Label` : undefined}>\n            {label}\n          </Text>\n        )}\n      </Row>\n    </Pressable>\n  )\n}\n\nconst getBorderColor = (\n  color: Theme['color'],\n  pressed: boolean,\n  variant: ButtonProps['variant'],\n) => {\n  if (variant === 'primary') {\n    return 'transparent'\n  }\n\n  if (variant === 'secondary') {\n    return pressed\n      ? color.pressable.primary.highlight\n      : color.pressable.primary.default\n  }\n\n  if (variant === 'tertiary') {\n    return pressed ? color.pressable.pressed.background : 'transparent'\n  }\n}\n\nconst getLabelColor = (\n  color: Theme['color'],\n  pressed: boolean,\n  variant: ButtonProps['variant'],\n) => {\n  if (variant === 'primary') {\n    return color.text.inverse\n  }\n\n  return pressed\n    ? color.pressable.primary.highlight\n    : color.pressable.primary.default\n}\n\nconst getBackgroundColor = (\n  color: Theme['color'],\n  pressed: boolean,\n  variant: ButtonProps['variant'],\n) => {\n  if (variant === 'primary') {\n    return pressed\n      ? color.pressable.primary.highlight\n      : color.pressable.primary.default\n  }\n\n  return color.box.background.white\n}\n\n// TODO Improve color tokens\nconst createStyles =\n  ({small, variant}: Partial<ButtonProps>, pressed: boolean) =>\n  ({border, color, text, size}: Theme) => {\n    const buttonHeight = config.buttonHeight\n    const borderWidth =\n      border.width[variant === 'secondary' && pressed ? 'lg' : 'md']\n    const labelFontSize = text.fontSize[small ? 'small' : 'body']\n    const labelLineHeight = text.lineHeight[small ? 'small' : 'body']\n\n    const paddingHorizontal =\n      size.spacing.md + 2 + border.width.md - borderWidth\n\n    const paddingVertical =\n      (buttonHeight - labelLineHeight - 2 * borderWidth) / 2\n\n    return StyleSheet.create({\n      button: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        flexShrink: 1,\n        paddingHorizontal,\n        paddingVertical,\n        backgroundColor: getBackgroundColor(color, pressed, variant),\n        borderColor: getBorderColor(color, pressed, variant),\n        borderStyle: 'solid',\n        borderWidth,\n      },\n      // TODO Use `Phrase` instead, after merging line height branch\n      label: {\n        flexShrink: 1,\n        color: getLabelColor(color, pressed, variant),\n        fontFamily: text.fontFamily.regular,\n        fontSize: labelFontSize,\n        lineHeight: labelLineHeight,\n      },\n    })\n  }\n"],"names":["Button","ellipsizeMode","iconName","label","numberOfLines","small","testID","variant","pressableProps","isPressed","setIsPressed","useState","styles","useThemable","createStyles","onPressIn","onPressOut","mergeOnPressIn","useCallback","e","mergeOnPressOut","jsx","Pressable","jsxs","Row","Icon","Text","getBorderColor","color","pressed","getLabelColor","getBackgroundColor","border","text","size","buttonHeight","config","borderWidth","labelFontSize","labelLineHeight","paddingHorizontal","paddingVertical","StyleSheet"],"mappings":"iTA0BA,MAAAA,EAAA,CAAA,CACA,cAAAC,EACA,SAAAC,EACA,MAAAC,EACA,cAAAC,EACA,MAAAC,EACA,OAAAC,EACA,QAAAC,EAAA,UACA,GAAAC,CACA,IAAA,CACA,KAAA,CAAAC,EAAAC,CAAA,EAAAC,WAAA,EAAA,EACAC,EAAAC,EAAAC,EAAA,CAAA,MAAAT,EAAA,QAAAE,CAAA,EAAAE,CAAA,CAAA,EACA,CAAA,UAAAM,EAAA,WAAAC,CAAA,EAAAR,EAEAS,EAAAC,EAAA,YACAC,GAAA,CACAT,EAAA,EAAA,EACAK,GAAA,MAAAA,EAAAI,EACA,EACA,CAAAJ,CAAA,CAAA,EAGAK,EAAAF,EAAA,YACAC,GAAA,CACAT,EAAA,EAAA,EACAM,GAAA,MAAAA,EAAAG,EACA,EACA,CAAAH,CAAA,CAAA,EAIA,OAAAK,EAAAC,EAAA,CACA,kBAAA,SACA,UAAAL,EACA,WAAAG,EACA,MAAAR,EAAA,OACA,OAAAN,EACA,GAAAE,EACA,SAAAe,EAAAC,EAAA,CACA,OAAA,KACA,OAAA,SACA,SAAA,CAAA,CAAA,CAAAtB,GACAmB,EAAAI,EAAA,CACA,MAAAlB,IAAA,UAAA,UAAA,OACA,KAAAL,EACA,KAAA,KACA,OAAAI,EAAA,GAAAA,CAAA,OAAA,MAAA,CACA,EAEA,CAAA,CAAAH,GACAkB,EAAAK,EAAA,CACA,cAAAzB,EACA,cAAAG,EACA,MAAAQ,EAAA,MACA,OAAAN,EAAA,GAAAA,CAAA,QAAA,OACA,SAAAH,CAAA,CACA,CAAA,CAAA,CAEA,CAAA,CAAA,CAGA,EAEAwB,EAAA,CACAC,EACAC,EACAtB,IACA,CACA,GAAAA,IAAA,UACA,MAAA,cAGA,GAAAA,IAAA,YACA,OAAAsB,EACAD,EAAA,UAAA,QAAA,UACAA,EAAA,UAAA,QAAA,QAGA,GAAArB,IAAA,WACA,OAAAsB,EAAAD,EAAA,UAAA,QAAA,WAAA,aAEA,EAEAE,EAAA,CACAF,EACAC,EACAtB,IAEAA,IAAA,UACAqB,EAAA,KAAA,QAGAC,EACAD,EAAA,UAAA,QAAA,UACAA,EAAA,UAAA,QAAA,QAGAG,EAAA,CACAH,EACAC,EACAtB,IAEAA,IAAA,UACAsB,EACAD,EAAA,UAAA,QAAA,UACAA,EAAA,UAAA,QAAA,QAGAA,EAAA,IAAA,WAAA,MAIAd,EACA,CAAA,CAAA,MAAAT,EAAA,QAAAE,GAAAsB,IACA,CAAA,CAAA,OAAAG,EAAA,MAAAJ,EAAA,KAAAK,EAAA,KAAAC,KAAA,CACA,MAAAC,EAAAC,EAAA,aACAC,EACAL,EAAA,MAAAzB,IAAA,aAAAsB,EAAA,KAAA,IAAA,EACAS,EAAAL,EAAA,SAAA5B,EAAA,QAAA,MAAA,EACAkC,EAAAN,EAAA,WAAA5B,EAAA,QAAA,MAAA,EAEAmC,EACAN,EAAA,QAAA,GAAA,EAAAF,EAAA,MAAA,GAAAK,EAEAI,GACAN,EAAAI,EAAA,EAAAF,GAAA,EAEA,OAAAK,EAAA,OAAA,CACA,OAAA,CACA,cAAA,MACA,eAAA,SACA,WAAA,EACA,kBAAAF,EACA,gBAAAC,EACA,gBAAAV,EAAAH,EAAAC,EAAAtB,CAAA,EACA,YAAAoB,EAAAC,EAAAC,EAAAtB,CAAA,EACA,YAAA,QACA,YAAA8B,CACA,EAEA,MAAA,CACA,WAAA,EACA,MAAAP,EAAAF,EAAAC,EAAAtB,CAAA,EACA,WAAA0B,EAAA,WAAA,QACA,SAAAK,EACA,WAAAC,CACA,CAAA,CACA,CACA"}