import{j as s}from"./jsx-runtime-DNHyKP0h.js";import{T as u}from"./TextInputField-CS-9M-wc.js";const t=({defaultValue:e,label:a,inputInstructions:n,testID:l,...r})=>s.jsx(u,{autoCapitalize:"characters",autoComplete:"off",autoCorrect:!1,defaultValue:e,hasClearButton:!1,inputInstructions:n,label:a,name:"vehicle_id",rules:{required:"Vul een kenteken in",pattern:{value:/^[a-zA-Z0-9]*$/,message:"Alleen cijfers en letters zijn toegestaan"}},testID:l,textTransform:i=>i.replace(/[^a-zA-Z0-9]/g,""),...r});try{t.displayName="ParkingVehicleIdTextInput",t.__docgenInfo={description:"",displayName:"ParkingVehicleIdTextInput",props:{defaultValue:{defaultValue:null,description:`Provides an initial value that will change when the user starts typing.
Useful for simple use-cases where you don't want to deal with listening to events
and updating the value prop to keep the controlled state in sync.`,name:"defaultValue",required:!1,type:{name:"string"}},inputInstructions:{defaultValue:null,description:"",name:"inputInstructions",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}}}}}catch{}export{t as P};
