{"version":3,"file":"useIsScreenReaderEnabled-a5d05830.js","sources":["../../src/hooks/useIsScreenReaderEnabled.ts"],"sourcesContent":["import {useEffect, useState} from 'react'\nimport {AccessibilityInfo} from 'react-native'\nimport {useSentry} from '@/hooks/sentry/useSentry'\n\nexport const useIsScreenReaderEnabled = () => {\n  const [enabled, setEnabled] = useState(false)\n  const {sendSentryErrorLog} = useSentry()\n\n  useEffect(() => {\n    AccessibilityInfo.isScreenReaderEnabled()\n      .then(setEnabled)\n      .catch((error: unknown) => {\n        sendSentryErrorLog(\n          'isScreenReaderEnabled check failed',\n          'useIsScreenReaderEnabled.ts',\n          {error},\n        )\n      })\n\n    const listener = AccessibilityInfo.addEventListener(\n      'screenReaderChanged',\n      setEnabled,\n    )\n\n    return () => listener.remove()\n  }, [sendSentryErrorLog])\n\n  return enabled\n}\n"],"names":["useIsScreenReaderEnabled","enabled","setEnabled","useState","sendSentryErrorLog","useSentry","useEffect","AccessibilityInfo","error","listener"],"mappings":"4HAIO,MAAMA,EAA2B,IAAM,CAC5C,KAAM,CAACC,EAASC,CAAU,EAAIC,WAAS,EAAK,EACtC,CAAC,mBAAAC,GAAsBC,IAE7BC,OAAAA,EAAAA,UAAU,IAAM,CACdC,EAAkB,wBACf,KAAKL,CAAU,EACf,MAAOM,GAAmB,CACzBJ,EACE,qCACA,8BACA,CAAC,MAAAI,CAAK,CAAA,CACR,CACD,EAEH,MAAMC,EAAWF,EAAkB,iBACjC,sBACAL,CAAA,EAGK,MAAA,IAAMO,EAAS,QAAO,EAC5B,CAACL,CAAkB,CAAC,EAEhBH,CACT"}