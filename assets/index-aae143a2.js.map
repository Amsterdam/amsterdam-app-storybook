{"version":3,"file":"index-aae143a2.js","sources":["../../node_modules/react-native-web/dist/exports/Alert/index.js","../../node_modules/react-native-web/dist/exports/Linking/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nclass Alert {\n  static alert() {}\n}\nexport default Alert;","/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport invariant from 'fbjs/lib/invariant';\nimport canUseDOM from '../../modules/canUseDom';\nvar initialURL = canUseDOM ? window.location.href : '';\nclass Linking {\n  constructor() {\n    this._eventCallbacks = {};\n  }\n  _dispatchEvent(event) {\n    for (var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      data[_key - 1] = arguments[_key];\n    }\n    var listeners = this._eventCallbacks[event];\n    if (listeners != null && Array.isArray(listeners)) {\n      listeners.map(listener => {\n        listener(...data);\n      });\n    }\n  }\n\n  /**\n   * Adds a event listener for the specified event. The callback will be called when the\n   * said event is dispatched.\n   */\n  addEventListener(eventType, callback) {\n    var _this = this;\n    if (!_this._eventCallbacks[eventType]) {\n      _this._eventCallbacks[eventType] = [callback];\n    }\n    _this._eventCallbacks[eventType].push(callback);\n    return {\n      remove() {\n        var callbacks = _this._eventCallbacks[eventType];\n        var filteredCallbacks = callbacks.filter(c => c.toString() !== callback.toString());\n        _this._eventCallbacks[eventType] = filteredCallbacks;\n      }\n    };\n  }\n\n  /**\n   * Removes a previously added event listener for the specified event. The callback must\n   * be the same object as the one passed to `addEventListener`.\n   */\n  removeEventListener(eventType, callback) {\n    console.error(\"Linking.removeEventListener('\" + eventType + \"', ...): Method has been \" + 'deprecated. Please instead use `remove()` on the subscription ' + 'returned by `Linking.addEventListener`.');\n    var callbacks = this._eventCallbacks[eventType];\n    var filteredCallbacks = callbacks.filter(c => c.toString() !== callback.toString());\n    this._eventCallbacks[eventType] = filteredCallbacks;\n  }\n  canOpenURL() {\n    return Promise.resolve(true);\n  }\n  getInitialURL() {\n    return Promise.resolve(initialURL);\n  }\n\n  /**\n   * Try to open the given url in a secure fashion. The method returns a Promise object.\n   * If a target is passed (including undefined) that target will be used, otherwise '_blank'.\n   * If the url opens, the promise is resolved. If not, the promise is rejected.\n   * Dispatches the `onOpen` event if `url` is opened successfully.\n   */\n  openURL(url, target) {\n    if (arguments.length === 1) {\n      target = '_blank';\n    }\n    try {\n      open(url, target);\n      this._dispatchEvent('onOpen', url);\n      return Promise.resolve();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n  _validateURL(url) {\n    invariant(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);\n    invariant(url, 'Invalid URL: cannot be empty');\n  }\n}\nvar open = (url, target) => {\n  if (canUseDOM) {\n    var urlToOpen = new URL(url, window.location).toString();\n    if (urlToOpen.indexOf('tel:') === 0) {\n      window.location = urlToOpen;\n    } else {\n      window.open(urlToOpen, target, 'noopener');\n    }\n  }\n};\nexport default new Linking();"],"names":["Alert","Alert$1","initialURL","canUseDOM","Linking","event","_len","data","_key","listeners","listener","eventType","callback","_this","callbacks","filteredCallbacks","c","url","target","open","e","invariant","urlToOpen","Linking$1"],"mappings":"0FASA,MAAMA,CAAM,CACV,OAAO,OAAQ,CAAE,CACnB,CACA,MAAAC,EAAeD,ECAf,IAAIE,EAAaC,EAAY,OAAO,SAAS,KAAO,GACpD,MAAMC,CAAQ,CACZ,aAAc,CACZ,KAAK,gBAAkB,EACxB,CACD,eAAeC,EAAO,CACpB,QAASC,EAAO,UAAU,OAAQC,EAAO,IAAI,MAAMD,EAAO,EAAIA,EAAO,EAAI,CAAC,EAAGE,EAAO,EAAGA,EAAOF,EAAME,IAClGD,EAAKC,EAAO,CAAC,EAAI,UAAUA,CAAI,EAEjC,IAAIC,EAAY,KAAK,gBAAgBJ,CAAK,EACtCI,GAAa,MAAQ,MAAM,QAAQA,CAAS,GAC9CA,EAAU,IAAIC,GAAY,CACxBA,EAAS,GAAGH,CAAI,CACxB,CAAO,CAEJ,CAMD,iBAAiBI,EAAWC,EAAU,CACpC,IAAIC,EAAQ,KACZ,OAAKA,EAAM,gBAAgBF,CAAS,IAClCE,EAAM,gBAAgBF,CAAS,EAAI,CAACC,CAAQ,GAE9CC,EAAM,gBAAgBF,CAAS,EAAE,KAAKC,CAAQ,EACvC,CACL,QAAS,CACP,IAAIE,EAAYD,EAAM,gBAAgBF,CAAS,EAC3CI,EAAoBD,EAAU,OAAOE,GAAKA,EAAE,aAAeJ,EAAS,SAAQ,CAAE,EAClFC,EAAM,gBAAgBF,CAAS,EAAII,CACpC,CACP,CACG,CAMD,oBAAoBJ,EAAWC,EAAU,CACvC,QAAQ,MAAM,gCAAkCD,EAAY,gIAA0I,EACtM,IAAIG,EAAY,KAAK,gBAAgBH,CAAS,EAC1CI,EAAoBD,EAAU,OAAOE,GAAKA,EAAE,aAAeJ,EAAS,SAAQ,CAAE,EAClF,KAAK,gBAAgBD,CAAS,EAAII,CACnC,CACD,YAAa,CACX,OAAO,QAAQ,QAAQ,EAAI,CAC5B,CACD,eAAgB,CACd,OAAO,QAAQ,QAAQb,CAAU,CAClC,CAQD,QAAQe,EAAKC,EAAQ,CACf,UAAU,SAAW,IACvBA,EAAS,UAEX,GAAI,CACF,OAAAC,EAAKF,EAAKC,CAAM,EAChB,KAAK,eAAe,SAAUD,CAAG,EAC1B,QAAQ,SAChB,OAAQG,EAAG,CACV,OAAO,QAAQ,OAAOA,CAAC,CACxB,CACF,CACD,aAAaH,EAAK,CAChBI,EAAU,OAAOJ,GAAQ,SAAU,yCAA2CA,CAAG,EACjFI,EAAUJ,EAAK,8BAA8B,CAC9C,CACH,CACA,IAAIE,EAAO,CAACF,EAAKC,IAAW,CAC1B,GAAIf,EAAW,CACb,IAAImB,EAAY,IAAI,IAAIL,EAAK,OAAO,QAAQ,EAAE,WAC1CK,EAAU,QAAQ,MAAM,IAAM,EAChC,OAAO,SAAWA,EAElB,OAAO,KAAKA,EAAWJ,EAAQ,UAAU,CAE5C,CACH,EACA,MAAeK,EAAA,IAAInB","x_google_ignoreList":[0,1]}