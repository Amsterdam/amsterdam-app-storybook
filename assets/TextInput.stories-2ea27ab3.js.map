{"version":3,"file":"TextInput.stories-2ea27ab3.js","sources":["../../src/components/ui/forms/TextInput.tsx"],"sourcesContent":["import {forwardRef, useEffect, useState} from 'react'\nimport {\n  Platform,\n  StyleSheet,\n  TextInput as TextInputRN,\n  TextInputProps,\n  TextInputProps as TextInputRNProps,\n  View,\n} from 'react-native'\nimport {IconButton} from '@/components/ui/buttons/IconButton'\nimport {Label} from '@/components/ui/forms/Label'\nimport {Column} from '@/components/ui/layout/Column'\nimport {Icon} from '@/components/ui/media/Icon'\nimport {Theme} from '@/themes/themes'\nimport {useThemable} from '@/themes/useThemable'\n\ntype Props = {\n  label: string\n  numberOfLines?: number\n  onChangeText?: (event: string) => void\n  onFocus?: () => void\n  placeholder?: string\n  warning?: boolean\n} & TextInputRNProps\n\nexport const TextInput = forwardRef<TextInputRN, Props>(\n  (\n    {\n      label,\n      numberOfLines,\n      onChangeText,\n      onFocus,\n      placeholder = '',\n      warning,\n      value: valueProp = '',\n      testID = '',\n      ...textInputProps\n    }: Props,\n    ref,\n  ) => {\n    const [hasFocus, setHasFocus] = useState(false)\n    const [value, setValue] = useState(valueProp)\n\n    const styles = useThemable(createStyles({hasFocus, numberOfLines, warning}))\n    const themedTextInputProps = useThemable(createTextInputProps)\n\n    useEffect(() => {\n      setValue(valueProp)\n    }, [valueProp])\n\n    const handleBlur = () => setHasFocus(false)\n\n    const handleChangeText = (text: string) => {\n      setValue(text)\n      onChangeText?.(text)\n    }\n\n    const handleClearText = () => {\n      setValue('')\n      onChangeText?.('')\n    }\n\n    const handleFocus = () => {\n      setHasFocus(true)\n      onFocus?.()\n    }\n\n    return (\n      <Column gutter=\"sm\">\n        <Label\n          isAccessible={!textInputProps.accessibilityLabel}\n          text={label}\n        />\n        <View style={styles.frame}>\n          <TextInputRN\n            {...textInputProps}\n            {...themedTextInputProps}\n            numberOfLines={Platform.OS === 'ios' ? undefined : numberOfLines}\n            onBlur={handleBlur}\n            onChangeText={handleChangeText}\n            onFocus={handleFocus}\n            placeholder={placeholder}\n            ref={ref}\n            style={styles.textInput}\n            testID={testID}\n            textAlignVertical=\"top\"\n            value={value}\n          />\n          {value ? (\n            <View>\n              <IconButton\n                accessibilityHint=\"Maak dit tekstveld leeg\"\n                icon={\n                  <Icon\n                    name=\"close\"\n                    size=\"lg\"\n                  />\n                }\n                onPress={handleClearText}\n                testID={`${testID}ClearButton`}\n              />\n            </View>\n          ) : null}\n        </View>\n      </Column>\n    )\n  },\n)\n\nconst createStyles =\n  ({hasFocus, numberOfLines, warning}: {hasFocus: boolean} & Partial<Props>) =>\n  ({color, size, text}: Theme) => {\n    const borderWidth = hasFocus || warning ? 2 : 1\n    const paddingHorizontal = size.spacing.md - (borderWidth - 1)\n    const paddingVertical = size.spacing.sm - (borderWidth - 1)\n\n    return StyleSheet.create({\n      frame: {\n        flexDirection: 'row',\n        paddingHorizontal,\n        paddingVertical,\n        backgroundColor: color.box.background.white,\n        borderStyle: 'solid',\n        borderColor: warning\n          ? color.control.warning.border\n          : hasFocus\n          ? color.control.focus.border\n          : color.control.default.border,\n        borderWidth,\n      },\n      textInput: {\n        minHeight:\n          Platform.OS === 'ios' && numberOfLines\n            ? numberOfLines * text.lineHeight.body + 2 * paddingVertical\n            : 'auto',\n        flex: 1,\n        padding: 0, // Override an Android default\n        paddingTop: 0,\n        color: color.text.default,\n        fontFamily: text.fontFamily.regular,\n        fontSize: text.fontSize.body,\n      },\n    })\n  }\n\nconst createTextInputProps = ({color}: Theme): TextInputProps => ({\n  placeholderTextColor: color.text.secondary,\n})\n"],"names":["TextInput","forwardRef","label","numberOfLines","onChangeText","onFocus","placeholder","warning","valueProp","testID","textInputProps","ref","hasFocus","setHasFocus","useState","value","setValue","styles","useThemable","createStyles","themedTextInputProps","createTextInputProps","useEffect","handleBlur","handleChangeText","text","handleClearText","handleFocus","jsxs","Column","jsx","Label","View","TextInputRN","Platform","IconButton","Icon","color","size","borderWidth","paddingHorizontal","paddingVertical","StyleSheet"],"mappings":"g7BAyBA,MAAAA,EAAAC,EAAA,WACA,CACA,CACA,MAAAC,EACA,cAAAC,EACA,aAAAC,EACA,QAAAC,EACA,YAAAC,EAAA,GACA,QAAAC,EACA,MAAAC,EAAA,GACA,OAAAC,EAAA,GACA,GAAAC,GAEAC,IACA,CACA,KAAA,CAAAC,EAAAC,CAAA,EAAAC,WAAA,EAAA,EACA,CAAAC,EAAAC,CAAA,EAAAF,WAAAN,CAAA,EAEAS,EAAAC,EAAAC,EAAA,CAAA,SAAAP,EAAA,cAAAT,EAAA,QAAAI,CAAA,CAAA,CAAA,EACAa,EAAAF,EAAAG,CAAA,EAEAC,EAAAA,UAAA,IAAA,CACAN,EAAAR,CAAA,CAAA,EACA,CAAAA,CAAA,CAAA,EAEA,MAAAe,EAAA,IAAAV,EAAA,EAAA,EAEAW,EAAAC,GAAA,CACAT,EAAAS,CAAA,EACArB,GAAA,MAAAA,EAAAqB,EAAA,EAGAC,EAAA,IAAA,CACAV,EAAA,EAAA,EACAZ,GAAA,MAAAA,EAAA,GAAA,EAGAuB,EAAA,IAAA,CACAd,EAAA,EAAA,EACAR,GAAA,MAAAA,GAAA,EAIA,OAAAuB,EAAAC,EAAA,CAAA,OAAA,KACA,SAAA,CAAAC,EAAAC,EAAA,CACA,aAAA,CAAArB,EAAA,mBACA,KAAAR,CAAA,CACA,EACA0B,EAAAI,EAAA,CAAA,MAAAf,EAAA,MACA,SAAA,CAAAa,EAAAG,EAAA,CACA,GAAAvB,EACA,GAAAU,EACA,cAAAc,EAAA,KAAA,MAAA,OAAA/B,EACA,OAAAoB,EACA,aAAAC,EACA,QAAAG,EACA,YAAArB,EACA,IAAAK,EACA,MAAAM,EAAA,UACA,OAAAR,EACA,kBAAA,MACA,MAAAM,CAAA,CACA,EACAA,IACAiB,EACA,CAAA,SAAAF,EAAAK,EAAA,CACA,kBAAA,0BACA,KACAL,EAAAM,EAAA,CACA,KAAA,QACA,KAAA,IAAA,CACA,EAEA,QAAAV,EACA,OAAA,GAAAjB,CAAA,aAAA,GAEA,EACA,IAAA,EACA,CACA,CAAA,CAAA,CAEA,CACA,EAEAU,EACA,CAAA,CAAA,SAAAP,EAAA,cAAAT,EAAA,QAAAI,KACA,CAAA,CAAA,MAAA8B,EAAA,KAAAC,EAAA,KAAAb,KAAA,CACA,MAAAc,EAAA3B,GAAAL,EAAA,EAAA,EACAiC,EAAAF,EAAA,QAAA,IAAAC,EAAA,GACAE,EAAAH,EAAA,QAAA,IAAAC,EAAA,GAEA,OAAAG,EAAA,OAAA,CACA,MAAA,CACA,cAAA,MACA,kBAAAF,EACA,gBAAAC,EACA,gBAAAJ,EAAA,IAAA,WAAA,MACA,YAAA,QACA,YAAA9B,EACA8B,EAAA,QAAA,QAAA,OACAzB,EACAyB,EAAA,QAAA,MAAA,OACAA,EAAA,QAAA,QAAA,OACA,YAAAE,CACA,EACA,UAAA,CACA,UACAL,EAAA,KAAA,OAAA/B,EACAA,EAAAsB,EAAA,WAAA,KAAA,EAAAgB,EACA,OACA,KAAA,EACA,QAAA,EACA,WAAA,EACA,MAAAJ,EAAA,KAAA,QACA,WAAAZ,EAAA,WAAA,QACA,SAAAA,EAAA,SAAA,IACA,CAAA,CACA,CACA,EAEAJ,EAAA,CAAA,CAAA,MAAAgB,MAAA,CACA,qBAAAA,EAAA,KAAA,SACA;;;;;;;;;;;;;;"}