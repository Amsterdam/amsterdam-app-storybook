{"version":3,"file":"setFocusDelay-de6200fd.js","sources":["../../src/types/duration.ts","../../src/utils/accessibility/setFocusDelay.ts"],"sourcesContent":["/** Duration in milliseconds */\nexport enum Duration {\n  Short = 100,\n  Normal = 500,\n  Long = 1000,\n}\n","import {InteractionManager} from 'react-native'\nimport {DelayDurations, FocusDelay} from '@/hooks/accessibility/types'\nimport {Duration} from '@/types/duration'\n\nconst focusDelay: Record<DelayDurations, number> = {\n  /** No delay. */\n  none: 0,\n\n  /** Short delay, typically used for brief transitions. */\n  short: Duration.Short,\n\n  /** Normal delay, typically used for most transitions. */\n  normal: Duration.Normal,\n\n  /** Wait until after initial focus is set. */\n  afterInitialFocus: Duration.Normal + Duration.Short,\n\n  /** Long delay, used for longer waiting periods before focusing. */\n  long: Duration.Long,\n}\n\nexport const setFocusDelay = (\n  callback: () => void,\n  delay: FocusDelay = 'normal',\n) => {\n  if (delay === 'afterAnimations') {\n    void InteractionManager.runAfterInteractions(callback)\n\n    return\n  }\n\n  return setTimeout(callback, focusDelay[delay])\n}\n"],"names":["Duration","focusDelay","setFocusDelay","callback","delay","InteractionManager"],"mappings":"wCACY,IAAAA,GAAAA,IACVA,EAAAA,EAAA,MAAQ,GAAR,EAAA,QACAA,EAAAA,EAAA,OAAS,GAAT,EAAA,SACAA,EAAAA,EAAA,KAAO,GAAP,EAAA,OAHUA,IAAAA,GAAA,CAAA,CAAA,ECGZ,MAAMC,EAA6C,CAEjD,KAAM,EAGN,MAAOD,EAAS,MAGhB,OAAQA,EAAS,OAGjB,kBAAmBA,EAAS,OAASA,EAAS,MAG9C,KAAMA,EAAS,IACjB,EAEaE,EAAgB,CAC3BC,EACAC,EAAoB,WACjB,CACH,GAAIA,IAAU,kBAAmB,CAC1BC,EAAmB,qBAAqBF,CAAQ,EAErD,MACF,CAEA,OAAO,WAAWA,EAAUF,EAAWG,CAAK,CAAC,CAC/C"}