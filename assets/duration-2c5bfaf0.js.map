{"version":3,"file":"duration-2c5bfaf0.js","sources":["../../src/hooks/useTimeout.ts","../../src/types/duration.ts"],"sourcesContent":["import {useRef, useCallback, useEffect} from 'react'\n\nexport const useTimeout = () => {\n  const timeoutRef = useRef<NodeJS.Timeout | undefined>()\n\n  useEffect(\n    () => () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current)\n      } // Clear the timeout when the hook unmounts\n    },\n    [],\n  )\n\n  return useCallback((callback: () => void, delay: number) => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current)\n    }\n\n    timeoutRef.current = setTimeout(callback, delay)\n  }, [])\n}\n","/** Duration in milliseconds */\nexport enum Duration {\n  none = 0,\n  short = 100,\n  normal = 500,\n  normalPlus = 600,\n  long = 1000,\n}\n"],"names":["useTimeout","timeoutRef","useRef","useEffect","useCallback","callback","delay","Duration"],"mappings":"mCAEO,MAAMA,EAAa,IAAM,CAC9B,MAAMC,EAAaC,EAAAA,SAEnBC,OAAAA,EAAA,UACE,IAAM,IAAM,CACNF,EAAW,SACb,aAAaA,EAAW,OAAO,CAEnC,EACA,CAAC,CAAA,EAGIG,EAAA,YAAY,CAACC,EAAsBC,IAAkB,CACtDL,EAAW,SACb,aAAaA,EAAW,OAAO,EAGtBA,EAAA,QAAU,WAAWI,EAAUC,CAAK,CACjD,EAAG,CAAE,CAAA,CACP,ECpBY,IAAAC,GAAAA,IACVA,EAAAA,EAAA,KAAO,CAAP,EAAA,OACAA,EAAAA,EAAA,MAAQ,GAAR,EAAA,QACAA,EAAAA,EAAA,OAAS,GAAT,EAAA,SACAA,EAAAA,EAAA,WAAa,GAAb,EAAA,aACAA,EAAAA,EAAA,KAAO,GAAP,EAAA,OALUA,IAAAA,GAAA,CAAA,CAAA"}