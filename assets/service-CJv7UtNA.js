import{a as k,c as a}from"./types-DC1xAs5Y.js";import{d as P,a as p,M as r}from"./useTrackException-BmEpfZV4.js";import{g as T,S as u,a as h,b as y,c as v,d as g,e as d,C as l}from"./api-CPLIwqOX.js";const A=async n=>{try{const e=await T(n===k.permitHolder?u.parkingPermitHolder:u.parkingVisitor);return e?JSON.parse(e):void 0}catch(e){return P(e),Promise.reject(e)}},q=async n=>{try{return await h(n.scope===k.permitHolder?u.parkingPermitHolder:u.parkingVisitor,JSON.stringify(n))}catch(e){return e}},E=(n,e,s,o,t)=>{q(n).then(()=>{e(y(n.scope===k.permitHolder?u.parkingPermitHolder:u.parkingVisitor)),P("Token parking account successful refreshed"),s("New token, so old request should fail"),o()},()=>{p("Token parking account save failed"),t(new Error("New token could not be saved"))})},f=(n,e,s)=>new Promise((o,t)=>{if(!n){p("No account type provided"),t(new Error("No account type provided  "));return}A(n).then(c=>{c&&e(S.endpoints[a.login].initiate({pin:c.pin,report_code:c.reportCode})).unwrap().then(({access_token:m})=>E({...c,accessToken:m},e,s,o,t),()=>{p("Token refresh failed, you are now logged out"),s("Session ended"),t(new Error("Token refresh failed"))})})}),i=async({error:n},{dispatch:e,getState:s},o)=>{if((n==null?void 0:n.status)===403){const{currentAccountType:t}=s().parking;return f(t,e,o)}else o("no access")},S=v.injectEndpoints({endpoints:n=>({[a.accountDetails]:n.query({providesTags:["ParkingAccount"],query:e=>({headers:{"SSP-Access-Token":e},method:"GET",slug:r.parking,url:"/account-details",afterError:i})}),[a.addLicensePlate]:n.mutation({invalidatesTags:["ParkingLicensePlates"],query:({accessToken:e,...s})=>({headers:{"SSP-Access-Token":e},body:s,method:"POST",slug:r.parking,url:"/license-plate",afterError:i})}),[a.licensePlates]:n.query({providesTags:["ParkingLicensePlates"],query:({accessToken:e,reportCode:s})=>({headers:{"SSP-Access-Token":e},method:"GET",params:{report_code:s},slug:r.parking,url:"/license-plates",afterError:i})}),[a.login]:n.mutation({query:e=>({body:e,method:"POST",slug:r.parking,url:"/login"})}),[a.parkingSessions]:n.query({providesTags:["ParkingSessions"],query:({accessToken:e,...s})=>({headers:{"SSP-Access-Token":e},method:"GET",params:s,slug:r.parking,url:"/sessions",afterError:i}),keepUnusedDataFor:l.hour}),[a.parkingTransactions]:n.query({providesTags:["ParkingSessions"],query:({accessToken:e,...s})=>({headers:{"SSP-Access-Token":e},method:"GET",params:s,slug:r.parking,url:"/transactions",afterError:i}),keepUnusedDataFor:l.hour}),[a.permits]:n.query({providesTags:["ParkingPermits"],query:({accessToken:e,...s})=>({headers:{"SSP-Access-Token":e},method:"GET",slug:r.parking,url:g({path:"/permits",params:s}),afterError:i})}),[a.sessionReceipt]:n.query({query:({accessToken:e,...s})=>({headers:{"SSP-Access-Token":e},method:"GET",slug:r.parking,url:g({path:"/session/receipt",params:s}),afterError:i})}),[a.startSession]:n.mutation({invalidatesTags:["ParkingSessions"],query:({accessToken:e,...s})=>({headers:{"SSP-Access-Token":e,...d},body:s,method:"POST",slug:r.parking,url:"/session",afterError:i})}),[a.editSession]:n.mutation({invalidatesTags:["ParkingSessions"],query:({accessToken:e,...s})=>({headers:{"SSP-Access-Token":e,...d},body:s,method:"PATCH",slug:r.parking,url:"/session",afterError:i})}),[a.deleteSession]:n.mutation({invalidatesTags:["ParkingSessions"],query:({accessToken:e,...s})=>({headers:{"SSP-Access-Token":e,...d},method:"DELETE",slug:r.parking,url:g({path:"/session",params:s}),afterError:i})}),[a.removeLicensePlate]:n.mutation({invalidatesTags:["ParkingLicensePlates"],query:({accessToken:e,...s})=>({headers:{"SSP-Access-Token":e},method:"DELETE",slug:r.parking,url:g({path:"/license-plate",params:s}),afterError:i})}),[a.increaseBalance]:n.mutation({invalidatesTags:["ParkingAccount"],query:({accessToken:e,...s})=>({headers:{"SSP-Access-Token":e},body:s,method:"POST",slug:r.parking,url:"/balance",afterError:i})}),[a.manageVisitorChangePinCode]:n.mutation({invalidatesTags:["ParkingPermits"],query:({accessToken:e,...s})=>({headers:{"SSP-Access-Token":e},body:s,method:"PUT",slug:r.parking,url:"/visitor/pin-code",afterError:i})})}),overrideExisting:!0}),{useAccountDetailsQuery:C,useAddLicensePlateMutation:H,useLicensePlatesQuery:D,useLoginMutation:N,useParkingSessionsQuery:G,useParkingTransactionsQuery:I,useRemoveLicensePlateMutation:O,usePermitsQuery:Q,useSessionReceiptQuery:U,useStartSessionMutation:V,useEditSessionMutation:x,useDeleteSessionMutation:B,useIncreaseBalanceMutation:F,useManageVisitorChangePinCodeMutation:J}=S;export{H as a,N as b,G as u};
