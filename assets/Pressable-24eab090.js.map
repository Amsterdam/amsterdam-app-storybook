{"version":3,"file":"Pressable-24eab090.js","sources":["../../src/components/ui/buttons/Pressable.tsx"],"sourcesContent":["import {ReactNode} from 'react'\nimport {\n  Pressable as PressableRN,\n  PressableProps as PressableRNProps,\n  StyleSheet,\n} from 'react-native'\nimport {Box, BoxProps} from '@/components/ui/containers/Box'\nimport {Theme} from '@/themes/themes'\nimport {useThemable} from '@/themes/useThemable'\n\ntype PressableVariant = 'primary' | 'tertiary' | 'negative'\n\nexport type PressableProps = {\n  children: ReactNode\n  /**\n   * Whether the button grows to fill its parent container.\n   */\n  grow?: boolean\n  variant?: PressableVariant\n} & Omit<PressableRNProps, 'style'> &\n  Pick<BoxProps, 'inset' | 'insetHorizontal' | 'insetVertical'>\n\n/**\n * Used to build other interactive components, do not use on its own.\n */\nexport const Pressable = ({\n  children,\n  grow,\n  inset = 'no',\n  insetHorizontal,\n  insetVertical,\n  variant = 'tertiary',\n  ...pressableProps\n}: PressableProps) => {\n  const styles = useThemable(createStyles(grow, variant))\n\n  return (\n    <PressableRN\n      accessibilityRole=\"button\"\n      style={({pressed}) => [styles.button, pressed && styles.pressed]}\n      {...pressableProps}>\n      <Box\n        grow\n        inset={inset}\n        insetHorizontal={insetHorizontal}\n        insetVertical={insetVertical}>\n        {children}\n      </Box>\n    </PressableRN>\n  )\n}\n\nconst createStyles =\n  (grow: PressableProps['grow'], variant: PressableVariant) =>\n  ({color}: Theme) =>\n    StyleSheet.create({\n      button: {\n        backgroundColor: color.pressable[variant].default,\n        flex: grow ? 1 : undefined,\n        flexShrink: grow ? 0 : 1,\n      },\n      pressed: {\n        backgroundColor: color.pressable[variant].highlight,\n      },\n    })\n"],"names":["Pressable","children","grow","inset","insetHorizontal","insetVertical","variant","pressableProps","styles","useThemable","createStyles","jsx","PressableRN","pressed","Box","color","StyleSheet"],"mappings":"0IAyBO,MAAAA,EAAA,CAAA,CAAmB,SAAAC,EACxB,KAAAC,EACA,MAAAC,EAAA,KACQ,gBAAAC,EACR,cAAAC,EACA,QAAAC,EAAA,WACU,GAAAC,CAEZ,IAAA,CACE,MAAAC,EAAAC,EAAAC,EAAAR,EAAAI,CAAA,CAAA,EAEA,OAAAK,EACEC,EAAC,CAAA,kBAAA,SACmB,MAAA,CAAA,CAAA,QAAAC,KAAA,CAAAL,EAAA,OAAAK,GAAAL,EAAA,OAAA,EAC6C,GAAAD,EAC3D,SAAAI,EACJG,EAAC,CAAA,KAAA,GACK,MAAAX,EACJ,gBAAAC,EACA,cAAAC,EACA,SAAAJ,CACC,CAAA,CACH,CAAA,CAGN,EAEAS,EAAA,CAAAR,EAAAI,IAAA,CAAA,CAAA,MAAAS,CAAA,IAAAC,EAAA,OAAA,CAGsB,OAAA,CACR,gBAAAD,EAAA,UAAAT,CAAA,EAAA,QACoC,KAAAJ,EAAA,EAAA,OACzB,WAAAA,EAAA,EAAA,CACM,EACzB,QAAA,CACS,gBAAAa,EAAA,UAAAT,CAAA,EAAA,SACmC,CAE9C,CAAA;"}