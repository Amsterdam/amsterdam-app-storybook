{"version":3,"file":"Trait.stories-24f2c727.js","sources":["../../src/components/ui/feedback/Trait.tsx"],"sourcesContent":["import {ReactNode} from 'react'\nimport {TextProps} from 'react-native'\nimport {Row} from '@/components/ui/layout/Row'\nimport {Icon} from '@/components/ui/media/Icon'\nimport {IconName} from '@/components/ui/media/iconPaths'\nimport {Phrase} from '@/components/ui/text/Phrase'\nimport {TestProps} from '@/components/ui/types'\n\ntype Props = {\n  accessibilityLabel?: TextProps['accessibilityLabel']\n  /**\n   * Allows a custom visualization for the trait.\n   * Use a small component here. Not rendered if an icon name is provided.\n   */\n  children?: ReactNode\n  /**\n   * The name of the icon to visually support the trait label.\n   */\n  iconName?: IconName\n  /**\n   * The label identifying the trait.\n   * Should be one or a few words.\n   */\n  label: string\n} & Required<TestProps>\n\nexport const Trait = ({\n  accessibilityLabel,\n  children,\n  iconName,\n  label,\n  testID,\n}: Props) => (\n  <Row\n    gutter=\"sm\"\n    valign=\"center\">\n    {iconName ? (\n      <Icon\n        name={iconName}\n        testID={`${testID}Icon`}\n      />\n    ) : (\n      children\n    )}\n    <Phrase\n      accessibilityLabel={accessibilityLabel}\n      testID={`${testID}Label`}\n      variant=\"small\">\n      {label}\n    </Phrase>\n  </Row>\n)\n"],"names":["Trait","accessibilityLabel","children","iconName","label","testID","jsxs","Row","jsx","Icon","Phrase"],"mappings":"oqBA0BA,MAAAA,EAAA,CAAA,CACA,mBAAAC,EACA,SAAAC,EACA,SAAAC,EACA,MAAAC,EACA,OAAAC,CACA,IACAC,EAAAC,EAAA,CACA,OAAA,KACA,OAAA,SACA,SAAA,CACAJ,EAAAK,EAAAC,EAAA,CACA,KAAAN,EACA,OAAA,GAAAE,CAAA,MAAA,CAAA,EAGAH,EAEAM,EAAAE,EAAA,CACA,mBAAAT,EACA,OAAA,GAAAI,CAAA,QACA,QAAA,QACA,SAAAD,CAAA,CACA,CAAA,CAAA,CACA;;;;;;;"}