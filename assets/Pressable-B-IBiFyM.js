import{j as r}from"./jsx-runtime-DNHyKP0h.js";import{r as m}from"./index-B-xgG2PE.js";import{P as v}from"./PressableBase-Ckv_YgXs.js";import{B as p}from"./Box-BMU6-bxk.js";import{a as g}from"./useThemable-DhqiuDXa.js";import{s as f}from"./index-Cm4QxXoK.js";const n=m.forwardRef(({children:e,inset:a="no",insetHorizontal:l,insetVertical:o,variant:s="tertiary",border:u=!1,...i},d)=>{const t=g(b(s));return r.jsx(v,{accessibilityLanguage:"nl-NL",accessibilityRole:"button",ref:d,style:({pressed:c})=>[t.button,c&&t.pressed,!!u&&t.border],...i,children:r.jsx(p,{inset:a,insetHorizontal:l,insetVertical:o,children:e})})}),b=e=>({color:a,border:l})=>f.create({button:{backgroundColor:e!=="transparent"?a.pressable[e].default.background:void 0},pressed:{backgroundColor:e!=="transparent"?a.pressable[e].pressed.background:void 0},border:{borderWidth:l.width.md,borderColor:a.topTaskButton.border}});try{n.displayName="Pressable",n.__docgenInfo={description:`Used to build other interactive components, do not use on its own.
This is a replacement for the React Native Pressable component, with added Box properties.`,displayName:"Pressable",props:{border:{defaultValue:{value:"false"},description:"",name:"border",required:!1,type:{name:"boolean"}},children:{defaultValue:null,description:`Either children or a render prop that receives a boolean reflecting whether
the component is currently pressed.`,name:"children",required:!1,type:{name:"((string | number | boolean | ReactElement<any, string | JSXElementConstructor<any>> | Iterable<ReactNode> | ReactPortal) & (string | ... 5 more ... | ((state: PressableStateCallbackType) => ReactNode))) | null"}},"logging-label":{defaultValue:null,description:"",name:"logging-label",required:!1,type:{name:"string"}},variant:{defaultValue:{value:"tertiary"},description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"transparent"'},{value:'"tertiary"'},{value:'"primary"'}]}},logAction:{defaultValue:null,description:"",name:"logAction",required:!1,type:{name:"enum",value:[{value:'"accessibilityAction"'},{value:'"accessibilityChange"'},{value:'"addressAdd"'},{value:'"addressChange"'},{value:'"blur"'},{value:'"buttonPress"'},{value:'"deviceInfoChange"'},{value:'"finishedReport"'},{value:'"locationOrAddressSelectionChange"'},{value:'"moduleChange"'},{value:'"pushNotificationDisplay"'},{value:'"pushNotificationTap"'},{value:'"radioChange"'},{value:'"startUp"'},{value:'"swipeOut"'},{value:'"toForeground"'},{value:'"toggle"'}]}},logCategory:{defaultValue:null,description:"",name:"logCategory",required:!1,type:{name:"enum",value:[{value:'"about"'},{value:'"access-code"'},{value:'"address"'},{value:'"chat"'},{value:'"city-pass"'},{value:'"construction-work"'},{value:'"construction-work-editor"'},{value:'"contact"'},{value:'"home"'},{value:'"notification-history"'},{value:'"onboarding"'},{value:'"parking"'},{value:'"redirects"'},{value:'"report-problem"'},{value:'"user"'},{value:'"waste-container"'},{value:'"waste-guide"'},{value:'"general"'}]}},logDimensions:{defaultValue:null,description:"Custom dimensions to log with the event.",name:"logDimensions",required:!1,type:{name:"Partial<Record<CustomDimensionKeys, string>>"}},logName:{defaultValue:null,description:"",name:"logName",required:!1,type:{name:"string"}},logValue:{defaultValue:null,description:"",name:"logValue",required:!1,type:{name:"number"}},inset:{defaultValue:{value:"no"},description:"The amount of inner spacing.",name:"inset",required:!1,type:{name:"enum",value:[{value:'"no"'},{value:'"sm"'},{value:'"md"'},{value:'"lg"'},{value:'"xl"'},{value:'"xxl"'},{value:'"xxs"'},{value:'"xs"'},{value:'"smd"'}]}},insetHorizontal:{defaultValue:null,description:"The amount of inner spacing at the left and right.",name:"insetHorizontal",required:!1,type:{name:"enum",value:[{value:'"no"'},{value:'"sm"'},{value:'"md"'},{value:'"lg"'},{value:'"xl"'},{value:'"xxl"'},{value:'"xxs"'},{value:'"xs"'},{value:'"smd"'}]}},insetVertical:{defaultValue:null,description:"The amount of inner spacing at the top and bottom.",name:"insetVertical",required:!1,type:{name:"enum",value:[{value:'"no"'},{value:'"sm"'},{value:'"md"'},{value:'"lg"'},{value:'"xl"'},{value:'"xxl"'},{value:'"xxs"'},{value:'"xs"'},{value:'"smd"'}]}}}}}catch{}export{n as P};
