{"version":3,"file":"Link.stories-0e09a8b3.js","sources":["../../src/components/ui/text/Link.tsx"],"sourcesContent":["import {Pressable} from '@/components/ui/buttons/Pressable'\nimport {config} from '@/components/ui/config'\nimport {Row} from '@/components/ui/layout/Row'\nimport {Size} from '@/components/ui/layout/Size'\nimport {Icon} from '@/components/ui/media/Icon'\nimport {Phrase} from '@/components/ui/text/Phrase'\nimport {Direction, TestProps} from '@/components/ui/types'\nimport {useTheme} from '@/themes/useTheme'\n\ntype Props = {\n  label: string\n  onPress: () => void\n  variant?: 'backward' | 'default' | 'external' | 'forward'\n} & TestProps\n\ntype LinkIconProps = {\n  direction?: Direction.left | Direction.right\n  external?: boolean\n}\n\nconst LinkIcon = ({direction, external}: LinkIconProps) => {\n  const {text} = useTheme()\n  const iconName = external\n    ? 'external-link'\n    : direction === Direction.left\n    ? 'chevron-left'\n    : 'chevron-right'\n\n  return (\n    <Size height={text.lineHeight.body}>\n      <Icon\n        color=\"link\"\n        name={iconName}\n      />\n    </Size>\n  )\n}\n\nexport const Link = ({label, onPress, testID, variant = 'default'}: Props) => {\n  const {text} = useTheme()\n\n  return (\n    <Pressable\n      accessibilityLabel={\n        variant === 'external' ? label + ', opent in webbrowser' : label\n      }\n      accessibilityRole=\"link\"\n      hitSlop={(config.minTouchSize - text.lineHeight.body) / 2}\n      onPress={onPress}\n      testID={testID}>\n      <Row gutter=\"sm\">\n        {variant === 'external' && <LinkIcon external />}\n        {variant === 'backward' && <LinkIcon direction={Direction.left} />}\n        {variant === 'default' && <LinkIcon direction={Direction.right} />}\n        <Phrase color=\"link\">{label}</Phrase>\n        {variant === 'forward' && <LinkIcon direction={Direction.right} />}\n      </Row>\n    </Pressable>\n  )\n}\n"],"names":["LinkIcon","direction","external","text","useTheme","iconName","Direction","jsx","Size","Icon","Link","label","onPress","testID","variant","Pressable","config","jsxs","Row","Phrase"],"mappings":"q4BAoBA,MAAAA,EAAA,CAAA,CAAA,UAAAC,EAAA,SAAAC,KAAA,CACA,KAAA,CAAA,KAAAC,GAAAC,IACAC,EAAAH,EACA,gBACAD,IAAAK,EAAA,KACA,eACA,gBAEA,OACAC,EAAAC,EAAA,CAAA,OAAAL,EAAA,WAAA,KACA,SAAAI,EAAAE,EAAA,CACA,MAAA,OACA,KAAAJ,CAAA,CAEA,CAAA,CAAA,CAEA,EAEAK,EAAA,CAAA,CAAA,MAAAC,EAAA,QAAAC,EAAA,OAAAC,EAAA,QAAAC,EAAA,aAAA,CACA,KAAA,CAAA,KAAAX,GAAAC,IAGA,OAAAG,EAAAQ,EAAA,CACA,mBACAD,IAAA,WAAAH,EAAA,wBAAAA,EAEA,kBAAA,OACA,SAAAK,EAAA,aAAAb,EAAA,WAAA,MAAA,EACA,QAAAS,EACA,OAAAC,EACA,SAAAI,EAAAC,EAAA,CAAA,OAAA,KACA,SAAA,CAAAJ,IAAA,YAAAP,EAAAP,EAAA,CAAA,SAAA,GAAA,EACAc,IAAA,YAAAP,EAAAP,EAAA,CAAA,UAAAM,EAAA,KAAA,EACAQ,IAAA,WAAAP,EAAAP,EAAA,CAAA,UAAAM,EAAA,MAAA,EACAC,EAAAY,EAAA,CAAA,MAAA,OAAA,SAAAR,EAAA,EACAG,IAAA,WAAAP,EAAAP,EAAA,CAAA,UAAAM,EAAA,MAAA,CAAA,EACA,CAAA,CAAA,CAGA"}