{"version":3,"file":"Checkbox.stories-6fd32e59.js","sources":["../../src/components/ui/forms/Checkbox.tsx"],"sourcesContent":["import {ReactNode} from 'react'\nimport {\n  AccessibilityProps,\n  StyleSheet,\n  TouchableHighlight,\n  TouchableHighlightProps,\n  View,\n} from 'react-native'\nimport {FormField} from '@/components/ui/forms/FormField'\nimport {MainAxisPosition} from '@/components/ui/layout/types'\nimport {Icon} from '@/components/ui/media/Icon'\nimport {TestProps} from '@/components/ui/types'\nimport {Theme} from '@/themes/themes'\nimport {useThemable} from '@/themes/useThemable'\n\ntype Props = {\n  label: ReactNode\n  labelPosition?: MainAxisPosition\n  onValueChange: () => void\n  value: boolean\n} & Required<TestProps> &\n  Pick<AccessibilityProps, 'accessibilityLabel'>\n\nexport const Checkbox = ({\n  accessibilityLabel,\n  label,\n  labelPosition = 'end',\n  onValueChange,\n  testID,\n  value,\n}: Props) => {\n  const styles = useThemable(createStyles)\n  const touchableProps = useThemable(createTouchableProps)\n\n  return (\n    <TouchableHighlight\n      accessibilityLabel={accessibilityLabel}\n      accessibilityRole=\"checkbox\"\n      accessibilityState={{selected: value}}\n      onPress={onValueChange}\n      testID={testID}\n      {...touchableProps}>\n      <FormField\n        label={label}\n        labelPosition={labelPosition}>\n        <View style={[styles.checkbox, value && styles.checked]}>\n          {!!value && (\n            <Icon\n              color=\"inverse\"\n              name=\"checkmark\"\n            />\n          )}\n        </View>\n      </FormField>\n    </TouchableHighlight>\n  )\n}\n\nconst createStyles = ({color}: Theme) =>\n  StyleSheet.create({\n    checkbox: {\n      width: 24,\n      aspectRatio: 1,\n      padding: 2,\n      borderWidth: 2,\n      borderColor: color.control.checked.background,\n      backgroundColor: color.control.default.background,\n    },\n    checked: {\n      backgroundColor: color.control.checked.background,\n    },\n  })\n\nconst createTouchableProps = ({color}: Theme): TouchableHighlightProps => ({\n  underlayColor: color.box.background.white,\n})\n"],"names":["Checkbox","accessibilityLabel","label","labelPosition","onValueChange","testID","value","styles","useThemable","createStyles","touchableProps","createTouchableProps","jsx","TouchableHighlight","FormField","View","Icon","color","StyleSheet"],"mappings":"yvBAuBA,MAAAA,EAAA,CAAA,CACA,mBAAAC,EACA,MAAAC,EACA,cAAAC,EAAA,MACA,cAAAC,EACA,OAAAC,EACA,MAAAC,CACA,IAAA,CACA,MAAAC,EAAAC,EAAAC,CAAA,EACAC,EAAAF,EAAAG,CAAA,EAGA,OAAAC,EAAAC,EAAA,CACA,mBAAAZ,EACA,kBAAA,WACA,mBAAA,CAAA,SAAAK,CAAA,EACA,QAAAF,EACA,OAAAC,EACA,GAAAK,EACA,SAAAE,EAAAE,EAAA,CACA,MAAAZ,EACA,cAAAC,EACA,SAAAS,EAAAG,EAAA,CAAA,MAAA,CAAAR,EAAA,SAAAD,GAAAC,EAAA,OAAA,EACA,SAAA,CAAA,CAAAD,GACAM,EAAAI,EAAA,CACA,MAAA,UACA,KAAA,WAAA,CAAA,EAGA,CAAA,CACA,CAAA,CAAA,CAGA,EAEAP,EAAA,CAAA,CAAA,MAAAQ,KACAC,EAAA,OAAA,CACA,SAAA,CACA,MAAA,GACA,YAAA,EACA,QAAA,EACA,YAAA,EACA,YAAAD,EAAA,QAAA,QAAA,WACA,gBAAAA,EAAA,QAAA,QAAA,UACA,EACA,QAAA,CACA,gBAAAA,EAAA,QAAA,QAAA,UACA,CACA,CAAA,EAEAN,EAAA,CAAA,CAAA,MAAAM,MAAA,CACA,cAAAA,EAAA,IAAA,WAAA,KACA;;;;;;"}