{"version":3,"file":"Pressable-15525d02.js","sources":["../../src/components/ui/buttons/Pressable.tsx"],"sourcesContent":["import {ReactNode, forwardRef} from 'react'\nimport {\n  Pressable as PressableRN,\n  PressableProps as PressableRNProps,\n  View,\n  StyleSheet,\n} from 'react-native'\nimport {Box, BoxProps} from '@/components/ui/containers/Box'\nimport {Theme} from '@/themes/themes'\nimport {useThemable} from '@/themes/useThemable'\n\ntype PressableVariant = 'primary' | 'tertiary' | 'negative'\n\nexport type PressableProps = {\n  children: ReactNode\n  /**\n   * Whether the button grows to fill its parent container.\n   */\n  grow?: boolean\n  variant?: PressableVariant\n} & Omit<PressableRNProps, 'style'> &\n  Pick<BoxProps, 'inset' | 'insetHorizontal' | 'insetVertical'>\n\n/**\n * Used to build other interactive components, do not use on its own.\n */\nexport const Pressable = forwardRef<View, PressableProps>(\n  (\n    {\n      children,\n      grow,\n      inset = 'no',\n      insetHorizontal,\n      insetVertical,\n      variant = 'tertiary',\n      ...pressableProps\n    },\n    ref,\n  ) => {\n    const styles = useThemable(createStyles(grow, variant))\n\n    return (\n      <PressableRN\n        accessibilityRole=\"button\"\n        ref={ref}\n        style={({pressed}) => [styles.button, pressed && styles.pressed]}\n        {...pressableProps}>\n        <Box\n          grow\n          inset={inset}\n          insetHorizontal={insetHorizontal}\n          insetVertical={insetVertical}>\n          {children}\n        </Box>\n      </PressableRN>\n    )\n  },\n)\n\nconst createStyles =\n  (grow: PressableProps['grow'], variant: PressableVariant) =>\n  ({color}: Theme) =>\n    StyleSheet.create({\n      button: {\n        backgroundColor: color.pressable[variant].default,\n        flex: grow ? 1 : undefined,\n        flexShrink: grow ? 0 : 1,\n      },\n      pressed: {\n        backgroundColor: color.pressable[variant].highlight,\n      },\n    })\n"],"names":["Pressable","forwardRef","children","grow","inset","insetHorizontal","insetVertical","variant","pressableProps","ref","styles","useThemable","createStyles","jsx","PressableRN","pressed","Box","color","StyleSheet"],"mappings":"kLA0BO,MAAAA,EAAAC,EAAA,WAAkB,CAAA,CAErB,SAAAC,EACE,KAAAC,EACA,MAAAC,EAAA,KACQ,gBAAAC,EACR,cAAAC,EACA,QAAAC,EAAA,WACU,GAAAC,CACP,EAAAC,IAAA,CAIL,MAAAC,EAAAC,EAAAC,EAAAT,EAAAI,CAAA,CAAA,EAEA,OAAAM,EACEC,EAAC,CAAA,kBAAA,SACmB,IAAAL,EAClB,MAAA,CAAA,CAAA,QAAAM,KAAA,CAAAL,EAAA,OAAAK,GAAAL,EAAA,OAAA,EAC+D,GAAAF,EAC3D,SAAAK,EACJG,EAAC,CAAA,KAAA,GACK,MAAAZ,EACJ,gBAAAC,EACA,cAAAC,EACA,SAAAJ,CACC,CAAA,CACH,CAAA,CACF,CAGN,EAEAU,EAAA,CAAAT,EAAAI,IAAA,CAAA,CAAA,MAAAU,CAAA,IAAAC,EAAA,OAAA,CAGsB,OAAA,CACR,gBAAAD,EAAA,UAAAV,CAAA,EAAA,QACoC,KAAAJ,EAAA,EAAA,OACzB,WAAAA,EAAA,EAAA,CACM,EACzB,QAAA,CACS,gBAAAc,EAAA,UAAAV,CAAA,EAAA,SACmC,CAE9C,CAAA;"}