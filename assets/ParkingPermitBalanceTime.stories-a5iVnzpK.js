import{j as r}from"./jsx-runtime-DNHyKP0h.js";import"./PleaseWait-BQrHyf48.js";import{C as a}from"./Column-C0kL20Zy.js";import{R as s}from"./Row-Cf-uwVPE.js";import{P as n}from"./Phrase-CWQmqNcf.js";import{T as o}from"./Title-pukQiwYK.js";import{u as l}from"./useGetCurrentParkingPermit.web-DBB1Y49K.js";import{f as c}from"./formatDate-t_qfzG4V.js";import{f as u}from"./formatTimeDurationToDisplay-CehsJRgF.js";import"./index-B-xgG2PE.js";import"./_commonjsHelpers-D6-XlEtG.js";import"./Box-BYRd2VKQ.js";import"./layoutStyles-Beptdp9x.js";import"./index-Cm4QxXoK.js";import"./useThemable-CBcG36_i.js";import"./index-DICU_UuR.js";import"./index-CGHx0_JJ.js";import"./index-CnyDuYXe.js";import"./base-color-BCCzFoQm.js";import"./index-DoMT7H_C.js";import"./TextAncestorContext-Z5dgoe9Q.js";import"./Center-Bb_w82DD.js";import"./Icon-DSpuGgoW.js";import"./index-s4hYfBOP.js";import"./index-Chjiymov.js";import"./Animated-DeoFghji.js";import"./index-Ri0BYtkV.js";import"./extends-CF3RwP-h.js";import"./index-BfuYXHyp.js";import"./NativeEventEmitter-BGtqh25e.js";import"./index-CilX169C.js";import"./index-CXGG-aYW.js";import"./types-CttlCamk.js";import"./useDeviceContext-BspZyhLx.js";import"./index-CjMpzYvL.js";import"./index-D23RIuqi.js";import"./useTheme-CHNEq3ik.js";import"./mapCrossAxisAlignment-DpnuLLqj.js";import"./mapMainAxisAlignment-BOa0GzUh.js";import"./AccessibleText-ySoCsV7u.js";import"./permit.mock-DK4hpnVU.js";import"./types-CAd78L4S.js";import"./dayjs-C6sMkNK9.js";import"./formatTimeRangeToDisplay-CggXkYKX.js";import"./index-CqtUk6fw.js";const f=()=>{const{currentPermit:t}=l();return t!=null&&t.time_balance_applicable?r.jsxs(a,{gutter:"xs",children:[r.jsxs(s,{align:"between",children:[r.jsx(o,{level:"h5",testID:"ParkingPermitBalanceTimeTitlePhrase",text:"Tijdsaldo"}),r.jsx(o,{level:"h5",testID:"ParkingPermitBalanceTimeTitlePhrase",text:u(t.time_balance,"seconds",{short:!0})})]}),r.jsx(n,{testID:"ParkingPermitBalanceTimeValidUntilPhrase",children:`Tot ${c(t.time_valid_until)}`})]}):null},et={component:f},i={};var m,e,p;i.parameters={...i.parameters,docs:{...(m=i.parameters)==null?void 0:m.docs,source:{originalSource:"{}",...(p=(e=i.parameters)==null?void 0:e.docs)==null?void 0:p.source}}};const pt=["Default"];export{i as Default,pt as __namedExportsOrder,et as default};
