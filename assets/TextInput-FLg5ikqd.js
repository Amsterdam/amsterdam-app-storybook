import{j as t}from"./jsx-runtime-DNHyKP0h.js";import{r as m}from"./index-B-xgG2PE.js";import{I as F}from"./IconButton-C0Xko2a4.js";import{L as T}from"./Label-B_AB7cXT.js";import{C as q}from"./Column-C_aqm02S.js";import{I as L}from"./Icon-DzuajGrH.js";import{a as w}from"./useThemable-DhqiuDXa.js";import{V as S}from"./index-DoMT7H_C.js";import{T as N}from"./index-shQJSbQb.js";import{s as z}from"./index-Cm4QxXoK.js";import{P as A}from"./index-BiinuClr.js";const C=m.forwardRef(({hasClearButton:n=!0,inputInstructions:i,label:o,numberOfLines:a,onChangeText:e,onFocus:r,placeholder:u="",warning:f,value:l="",testID:h="",textTransform:y,accessibilityLanguage:g="nl-NL",...x},d)=>{const p=m.createRef(),[_,I]=m.useState(!1),[V,b]=m.useState(l),v=w($({hasFocus:_,numberOfLines:a,warning:f})),k=w(D);m.useEffect(()=>{b(l)},[l]);const B=()=>I(!1),H=s=>{const c=y?y(s):s;b(c),e==null||e(c)},E=()=>{var s,c;b(""),e==null||e(""),typeof d!="function"&&((c=(s=(d==null?void 0:d.current)??(p==null?void 0:p.current))==null?void 0:s.focus)==null||c.call(s),j())},j=()=>{I(!0),r==null||r()};return t.jsxs(q,{gutter:"sm",children:[t.jsxs(q,{gutter:"xs",children:[!!o&&t.jsx(T,{isAccessible:!x.accessibilityLabel,text:o}),!!i&&t.jsx(T,{emphasis:"default",isAccessible:!x.accessibilityHint,text:i})]}),t.jsxs(S,{style:v.frame,children:[t.jsx(N,{...x,...k,accessibilityLanguage:g,numberOfLines:A.OS==="ios"?void 0:a,onBlur:B,onChangeText:H,onFocus:j,placeholder:u,ref:d??p,style:v.textInput,testID:h,textAlignVertical:"top",value:V}),V&&n?t.jsx(S,{children:t.jsx(F,{accessibilityHint:"Maak dit tekstveld leeg",accessibilityLanguage:g,icon:t.jsx(L,{name:"close",size:"lg",testID:`${h}ClearIcon`}),onPress:E,testID:`${h}ClearButton`})}):null]})]})}),$=({hasFocus:n,numberOfLines:i,warning:o})=>({color:a,size:e,text:r})=>{const u=n||o?2:1,f=e.spacing.md-(u-1),l=e.spacing.sm-(u-1);return z.create({frame:{flexDirection:"row",paddingHorizontal:f,paddingVertical:l,backgroundColor:a.textInput.container.background,borderStyle:"solid",borderColor:o?a.control.warning.border:n?a.control.focus.border:a.control.default.border,borderWidth:u},textInput:{minHeight:i?i*r.lineHeight.body+2*l:"auto",flex:1,padding:0,paddingTop:0,color:a.text.default,fontFamily:r.fontFamily.regular,fontSize:r.fontSize.body}})},D=({color:n})=>({placeholderTextColor:n.text.secondary});try{C.displayName="TextInput",C.__docgenInfo={description:"",displayName:"TextInput",props:{onChangeText:{defaultValue:null,description:`Callback that is called when the text input's text changes.
Changed text is passed as an argument to the callback handler.`,name:"onChangeText",required:!1,type:{name:"(((event: string) => void) & ((text: string) => void))"}},onFocus:{defaultValue:null,description:"Callback that is called when the text input is focused",name:"onFocus",required:!1,type:{name:"((() => void) & ((e: NativeSyntheticEvent<TextInputFocusEventData>) => void))"}},warning:{defaultValue:null,description:"",name:"warning",required:!1,type:{name:"boolean"}},hasClearButton:{defaultValue:{value:"true"},description:"",name:"hasClearButton",required:!1,type:{name:"boolean"}},inputInstructions:{defaultValue:null,description:"",name:"inputInstructions",required:!1,type:{name:"string"}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},numberOfLines:{defaultValue:null,description:`Sets the number of lines for a TextInput.
Use it with multiline set to true to be able to fill the lines.`,name:"numberOfLines",required:!1,type:{name:"number"}},placeholder:{defaultValue:{value:""},description:"The string that will be rendered before text input has been entered",name:"placeholder",required:!1,type:{name:"string"}},textTransform:{defaultValue:null,description:"",name:"textTransform",required:!1,type:{name:"((text: string) => string)"}}}}}catch{}export{C as T};
