import{u as a,j as m,S as h}from"./useThemable-f6bacdce.js";import{a as c,m as u}from"./mapMainAxisAlignment-e13c2957.js";import{V as p}from"./index-179922ce.js";const d=({align:t,children:n,flex:i,grow:e,gutter:o,halign:s,reverse:l})=>{const r=a(f({align:t,flex:i,grow:e,gutter:o,halign:s,reverse:l}));return m(p,{style:r.column,children:n})},f=({align:t,flex:n,grow:i,gutter:e,halign:o,reverse:s})=>({size:l})=>h.create({column:{flexDirection:s?"column-reverse":"column",alignItems:c(o),flex:n,flexGrow:i?1:void 0,flexShrink:1,justifyContent:u(t),rowGap:e&&l.spacing[e]}});d.__docgenInfo={description:`Lays out its children vertically.

Allows specifying the amount of spacing between the items, alignment of the items in the column, whether
the column should grow to fill the available space, and whether the items should be displayed in reverse order.

@example <Column gutter="md" flex={1}>â€¦</Column>`,methods:[],displayName:"Column",props:{align:{required:!1,tsType:{name:"MainAxisAlignment"},description:"The vertical alignment of the items in the column."},children:{required:!0,tsType:{name:"ReactNode"},description:"The content of the column."},grow:{required:!1,tsType:{name:"boolean"},description:"Whether the column should grow to fill the available space."},gutter:{required:!1,tsType:{name:"SpacingTokens"},description:"The amount of vertical spacing between the items in the column."},halign:{required:!1,tsType:{name:"CrossAxisAlignment"},description:"The horizontal alignment of the items in the column."},reverse:{required:!1,tsType:{name:"boolean"},description:"Whether the items in the column should be reversed."}}};export{d as C};
//# sourceMappingURL=Column-83b1b42a.js.map
