import{j as i}from"./jsx-runtime-ffb262ed.js";import{r as m}from"./index-76fb7be0.js";import{I as W}from"./IconButton-3a5fd32d.js";import{L as B}from"./Label-ec88978e.js";import{C as D}from"./Column-bd0a783f.js";import{I as F}from"./Icon-78a5ef06.js";import{C as v}from"./useThemable-dabb7424.js";import{V as I}from"./index-2bdd647f.js";import{T as z}from"./index-89fd73e2.js";import{P as k}from"./index-ac976766.js";import{S as M}from"./index-f819f4d6.js";import"./_commonjsHelpers-de833af9.js";import"./Pressable-9a0282a2.js";import"./PressableBase-cab79413.js";import"./usePiwikTrackCustomEventFromProps-e4307c50.js";import"./version-ba873cb0.js";import"./index-a464b0de.js";import"./NativeEventEmitter-723dff5d.js";import"./development-f8096310.js";import"./index-e8e5dbb3.js";import"./useTrackException-bb6f0470.js";import"./index-3ba17d29.js";import"./callBound-0c193d85.js";import"./___vite-browser-external_commonjs-proxy-698e55bb.js";import"./index-9ddf3bb5.js";import"./extends-4c19d496.js";import"./TextAncestorContext-dcad3dbc.js";import"./Box-9d8a37fe.js";import"./layoutStyles-718959f0.js";import"./config-55b2a55c.js";import"./Badge-24e0c96f.js";import"./Row-7c1d2ebc.js";import"./mapCrossAxisAlignment-5d37f109.js";import"./mapMainAxisAlignment-c48b5fa8.js";import"./useDeviceContext-91140f6c.js";import"./index-fbb44dd0.js";import"./index-d1c3279d.js";import"./types-65ac26c5.js";import"./Paragraph-b83e36fa.js";import"./index-953b234c.js";import"./index-9d475cdf.js";import"./Animated-7a7ece98.js";import"./index-26b34527.js";import"./useTheme-7da6666b.js";import"./index-d3ea75b5.js";import"./base-color-0322ee5e.js";const f=m.forwardRef(({label:r,numberOfLines:a,onChangeText:e,onFocus:t,placeholder:p="",warning:n,value:o="",testID:l="",accessibilityLanguage:s="nl-NL",...b},C)=>{const[q,h]=m.useState(!1),[x,u]=m.useState(o),g=v(R({hasFocus:q,numberOfLines:a,warning:n})),E=v(A);m.useEffect(()=>{u(o)},[o]);const L=()=>h(!1),O=y=>{u(y),e==null||e(y)},H=()=>{u(""),e==null||e("")},N=()=>{h(!0),t==null||t()};return i.jsxs(D,{gutter:"sm",children:[i.jsx(B,{isAccessible:!b.accessibilityLabel,text:r}),i.jsxs(I,{style:g.frame,children:[i.jsx(z,{...b,...E,accessibilityLanguage:s,numberOfLines:k.OS==="ios"?void 0:a,onBlur:L,onChangeText:O,onFocus:N,placeholder:p,ref:C,style:g.textInput,testID:l,textAlignVertical:"top",value:x}),x?i.jsx(I,{children:i.jsx(W,{accessibilityHint:"Maak dit tekstveld leeg",accessibilityLanguage:s,icon:i.jsx(F,{name:"close",size:"lg",testID:`${l}ClearIcon`}),onPress:H,testID:`${l}ClearButton`})}):null]})]})}),R=({hasFocus:r,numberOfLines:a,warning:e})=>({color:t,size:p,text:n})=>{const o=r||e?2:1,l=p.spacing.md-(o-1),s=p.spacing.sm-(o-1);return M.create({frame:{flexDirection:"row",paddingHorizontal:l,paddingVertical:s,backgroundColor:t.box.background.white,borderStyle:"solid",borderColor:e?t.control.warning.border:r?t.control.focus.border:t.control.default.border,borderWidth:o},textInput:{minHeight:k.OS==="ios"&&a?a*n.lineHeight.body+2*s:"auto",flex:1,padding:0,paddingTop:0,color:t.text.default,fontFamily:n.fontFamily.regular,fontSize:n.fontSize.body}})},A=({color:r})=>({placeholderTextColor:r.text.secondary});try{f.displayName="TextInput",f.__docgenInfo={description:"",displayName:"TextInput",props:{label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string"}},numberOfLines:{defaultValue:null,description:`Sets the number of lines for a TextInput.
Use it with multiline set to true to be able to fill the lines.`,name:"numberOfLines",required:!1,type:{name:"number"}},onChangeText:{defaultValue:null,description:`Callback that is called when the text input's text changes.
Changed text is passed as an argument to the callback handler.`,name:"onChangeText",required:!1,type:{name:"(((event: string) => void) & ((text: string) => void))"}},onFocus:{defaultValue:null,description:"Callback that is called when the text input is focused",name:"onFocus",required:!1,type:{name:"((() => void) & ((e: NativeSyntheticEvent<TextInputFocusEventData>) => void))"}},placeholder:{defaultValue:{value:""},description:"The string that will be rendered before text input has been entered",name:"placeholder",required:!1,type:{name:"string"}},warning:{defaultValue:null,description:"",name:"warning",required:!1,type:{name:"boolean"}}}}}catch{}const We={component:f},d={args:{label:"Wat is de titel van je bericht?",placeholder:"Voer een titel in...",value:""}},c={args:{label:"Wat is de titel van je bericht?",multiline:!0,numberOfLines:5,placeholder:"Voer een titel in...",value:""}};var S,V,j;d.parameters={...d.parameters,docs:{...(S=d.parameters)==null?void 0:S.docs,source:{originalSource:`{
  args: {
    label: 'Wat is de titel van je bericht?',
    placeholder: 'Voer een titel in...',
    value: ''
  }
}`,...(j=(V=d.parameters)==null?void 0:V.docs)==null?void 0:j.source}}};var _,w,T;c.parameters={...c.parameters,docs:{...(_=c.parameters)==null?void 0:_.docs,source:{originalSource:`{
  args: {
    label: 'Wat is de titel van je bericht?',
    multiline: true,
    numberOfLines: 5,
    placeholder: 'Voer een titel in...',
    value: ''
  }
}`,...(T=(w=c.parameters)==null?void 0:w.docs)==null?void 0:T.source}}};const Be=["Default","Multiline"];export{d as Default,c as Multiline,Be as __namedExportsOrder,We as default};
