{"version":3,"file":"Box-eba54918.js","sources":["../../src/components/ui/containers/Box.tsx"],"sourcesContent":["import {ReactNode} from 'react'\nimport {StyleSheet, View, ViewProps} from 'react-native'\nimport {layoutStyles} from '@/styles/layoutStyles'\nimport {Theme} from '@/themes/themes'\nimport {SpacingTokens} from '@/themes/tokens/size'\nimport {useThemable} from '@/themes/useThemable'\n\nexport type BoxProps = {\n  borderColor?: keyof Theme['color']['border']\n  borderStyle?: 'dashed' | 'dotted' | 'solid'\n  children: ReactNode\n  /**\n   * Whether the box has a background color, setting it apart from its surroundings. In light mode, it is white.\n   * Only to be used when the box covers another color, like on light grey (settings) screens or in the navigation header.\n   */\n  distinct?: boolean\n  /**\n   * Whether the box grows to fill its parent container.\n   */\n  grow?: boolean\n  /**\n   * The amount of inner spacing.\n   */\n  inset?: keyof SpacingTokens\n  /**\n   * The amount of inner spacing at the left and right.\n   */\n  insetHorizontal?: keyof SpacingTokens\n  /**\n   * The amount of inner spacing at the start of ltr\n   */\n  insetTop?: keyof SpacingTokens\n  /**\n   * The amount of inner spacing at the top and bottom.\n   */\n  insetVertical?: keyof SpacingTokens\n} & Omit<ViewProps, 'style'>\n\n/**\n * Visually groups its content.\n * Allows to set insets and a background colour.\n */\nexport const Box = ({\n  borderColor,\n  borderStyle,\n  children,\n  distinct,\n  grow,\n  inset = 'md',\n  insetHorizontal,\n  insetTop,\n  insetVertical,\n  ...viewProps\n}: BoxProps) => {\n  const styles = useThemable(\n    createStyles({\n      borderColor,\n      borderStyle,\n      distinct: distinct,\n      inset,\n      insetHorizontal,\n      insetTop,\n      insetVertical,\n    }),\n  )\n\n  return (\n    <View\n      style={[styles.box, grow && layoutStyles.grow]}\n      {...viewProps}>\n      {children}\n    </View>\n  )\n}\n\nconst createStyles =\n  ({\n    borderColor,\n    borderStyle,\n    distinct,\n    inset,\n    insetHorizontal,\n    insetTop,\n    insetVertical,\n  }: Partial<BoxProps>) =>\n  ({color, size}: Theme) =>\n    StyleSheet.create({\n      box: {\n        backgroundColor: distinct ? color.box.background.white : undefined,\n        borderColor: borderColor ? color.border[borderColor] : undefined,\n        borderStyle: borderStyle,\n        borderWidth: borderStyle ? 1 : undefined,\n        padding:\n          inset && !insetHorizontal && !insetTop && !insetVertical\n            ? size.spacing[inset]\n            : 0,\n        paddingHorizontal: insetHorizontal && size.spacing[insetHorizontal],\n        paddingTop: insetTop && size.spacing[insetTop],\n        paddingVertical: insetVertical && size.spacing[insetVertical],\n      },\n    })\n"],"names":["Box","borderColor","borderStyle","children","distinct","grow","inset","insetHorizontal","insetTop","insetVertical","viewProps","styles","useThemable","createStyles","jsx","View","layoutStyles","color","size","StyleSheet"],"mappings":"mJA0CO,MAAAA,EAAA,CAAA,CAAa,YAAAC,EAClB,YAAAC,EACA,SAAAC,EACA,SAAAC,EACA,KAAAC,EACA,MAAAC,EAAA,KACQ,gBAAAC,EACR,SAAAC,EACA,cAAAC,EACA,GAAAC,CAEF,IAAA,CACE,MAAAC,EAAAC,EAAeC,EAAA,CACA,YAAAZ,EACX,YAAAC,EACA,SAAAE,EACA,MAAAE,EACA,gBAAAC,EACA,SAAAC,EACA,cAAAC,CACA,CAAA,CACD,EAGH,OAAAK,EACEC,EAAC,CAAA,MAAA,CAAAJ,EAAA,IAAAN,GAAAW,EAAA,IAAA,EAC8C,GAAAN,EACzC,SAAAP,CACH,CAAA,CAGP,EAEAU,EAAA,CAAA,CACG,YAAAZ,EACC,YAAAC,EACA,SAAAE,EACA,MAAAE,EACA,gBAAAC,EACA,SAAAC,EACA,cAAAC,CAEF,IAAA,CAAA,CAAA,MAAAQ,EAAA,KAAAC,CAAA,IAAAC,EAAA,OAAA,CAEoB,IAAA,CACX,gBAAAf,EAAAa,EAAA,IAAA,WAAA,MAAA,OACsD,YAAAhB,EAAAgB,EAAA,OAAAhB,CAAA,EAAA,OACF,YAAAC,EACvD,YAAAA,EAAA,EAAA,OAC+B,QAAAI,GAAA,CAAAC,GAAA,CAAAC,GAAA,CAAAC,EAAAS,EAAA,QAAAZ,CAAA,EAAA,EAIzB,kBAAAC,GAAAW,EAAA,QAAAX,CAAA,EAC4D,WAAAC,GAAAU,EAAA,QAAAV,CAAA,EACrB,gBAAAC,GAAAS,EAAA,QAAAT,CAAA,CACe,CAEhE,CAAA;;"}