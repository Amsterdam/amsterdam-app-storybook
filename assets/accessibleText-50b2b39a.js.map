{"version":3,"file":"accessibleText-50b2b39a.js","sources":["../../src/utils/accessibility/injectCommas.ts","../../src/utils/accessibility/replaceAbbreviations.ts","../../src/utils/accessibility/accessibleText.ts"],"sourcesContent":["/**\n * Injects commas between text fragments to induce a pause of breath when reading aloud.\n */\nexport const injectCommas = (...fragments: (string | undefined)[]) =>\n  fragments.filter(fragment => fragment).join(', ')\n","const dictionary: Record<string, string> = {\n  'gfe/t': 'gÃ©-ef-e-tee',\n  't/m': 'tot en met',\n}\n\n/**\n * Makes a word lowercase and removes all of the following characters: ()\n */\nexport const wordCleanup = (text: string) =>\n  text.toLowerCase().replaceAll(/[()]/g, '')\n\nexport const replaceAbbreviations = (text: string) =>\n  text\n    .split(' ')\n    .map((word: string) => dictionary[wordCleanup(word)] || word)\n    .join(' ')\n","import {injectCommas} from '@/utils/accessibility/injectCommas'\nimport {replaceAbbreviations} from '@/utils/accessibility/replaceAbbreviations'\n\nexport const accessibleText = (...fragments: (string | undefined)[]) =>\n  replaceAbbreviations(injectCommas(...fragments))\n"],"names":["injectCommas","fragments","fragment","dictionary","wordCleanup","text","replaceAbbreviations","word","accessibleText"],"mappings":"AAGa,MAAAA,EAAe,IAAIC,IAC9BA,EAAU,OAAmBC,GAAAA,CAAQ,EAAE,KAAK,IAAI,ECJ5CC,EAAqC,CACzC,QAAS,cACT,MAAO,YACT,EAKaC,EAAeC,GAC1BA,EAAK,YAAc,EAAA,WAAW,QAAS,EAAE,EAE9BC,EAAwBD,GACnCA,EACG,MAAM,GAAG,EACT,IAAKE,GAAiBJ,EAAWC,EAAYG,CAAI,CAAC,GAAKA,CAAI,EAC3D,KAAK,GAAG,ECZAC,EAAiB,IAAIP,IAChCK,EAAqBN,EAAa,GAAGC,CAAS,CAAC"}