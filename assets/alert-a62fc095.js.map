{"version":3,"file":"alert-a62fc095.js","sources":["../../src/hooks/useAppState.ts","../../src/hooks/useIsReduceMotionEnabled.ts","../../src/store/slices/alert.ts"],"sourcesContent":["import {useEffect, useState} from 'react'\nimport {AppState, AppStateStatus} from 'react-native'\n\ntype AppStateHandlers = {\n  onBackground?: () => void\n  onChange?: (nextAppState: AppStateStatus) => void\n  onForeground?: () => void\n  onInactive?: () => void\n}\n\nexport const useAppState = ({\n  onChange,\n  onForeground,\n  onBackground,\n  onInactive,\n}: AppStateHandlers = {}): AppStateStatus => {\n  const [appState, setAppState] = useState<AppStateStatus>(\n    AppState.currentState,\n  )\n\n  useEffect(() => {\n    const handleAppStateChange = (nextAppState: AppStateStatus): void => {\n      if (appState !== 'active' && nextAppState === 'active') {\n        onForeground?.()\n      } else if (appState !== 'inactive' && nextAppState === 'inactive') {\n        onInactive?.()\n      } else if (appState !== 'background' && nextAppState === 'background') {\n        onBackground?.()\n      }\n\n      onChange?.(nextAppState)\n      setAppState(nextAppState)\n    }\n    const listener = AppState.addEventListener('change', handleAppStateChange)\n\n    return () => listener.remove()\n  }, [onChange, onForeground, onBackground, onInactive, appState])\n\n  return appState\n}\n","import {DependencyList, useEffect} from 'react'\nimport {AccessibilityInfo} from 'react-native'\nimport {useAppState} from '@/hooks/useAppState'\n\ntype Options = {\n  callback?: (isReduceMotionEnabled: boolean) => void\n  callbackAfterAppStateChange?: boolean\n}\n\nexport let isReduceMotionEnabled: boolean | undefined\n\nexport const useIsReduceMotionEnabled = (\n  {callback, callbackAfterAppStateChange = true}: Options = {},\n  deps: DependencyList | undefined = [],\n) => {\n  useAppState({\n    onForeground: () => {\n      void AccessibilityInfo.isReduceMotionEnabled().then(value => {\n        isReduceMotionEnabled = value\n\n        if (callbackAfterAppStateChange) {\n          callback?.(value)\n        }\n      })\n    },\n  })\n\n  useEffect(() => {\n    void AccessibilityInfo.isReduceMotionEnabled().then(value => {\n      isReduceMotionEnabled = value\n      callback?.(value)\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps)\n\n  return isReduceMotionEnabled\n}\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit'\nimport {LayoutAnimation} from 'react-native'\nimport {\n  AlertCloseType,\n  AlertVariant,\n} from '@/components/ui/feedback/Alert.types'\nimport {TestProps} from '@/components/ui/types'\nimport {isReduceMotionEnabled} from '@/hooks/useIsReduceMotionEnabled'\nimport {ReduxKey} from '@/store/types/reduxKey'\nimport {RootState} from '@/store/types/rootState'\n\nexport type Content =\n  | {\n      text: string\n      title?: string\n    }\n  | undefined\n\nexport type AlertState = {\n  closeType: AlertCloseType\n  content: Content\n  variant: AlertVariant\n  withIcon: boolean\n} & TestProps\n\nconst initialState = {} as AlertState\n\nexport const alertSlice = createSlice({\n  name: ReduxKey.alert,\n  initialState,\n  reducers: {\n    resetAlert: () => initialState,\n    setAlert: (_state, {payload}: PayloadAction<AlertState>) => {\n      if (!isReduceMotionEnabled) {\n        LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut)\n      }\n\n      return payload\n    },\n  },\n})\n\nexport const {resetAlert, setAlert} = alertSlice.actions\n\nexport const selectAlert = (state: RootState) => state[ReduxKey.alert]\n"],"names":["useAppState","onChange","onForeground","onBackground","onInactive","appState","setAppState","useState","AppState","useEffect","handleAppStateChange","nextAppState","listener","isReduceMotionEnabled","useIsReduceMotionEnabled","callback","callbackAfterAppStateChange","deps","AccessibilityInfo","value","initialState","alertSlice","createSlice","ReduxKey","_state","payload","LayoutAnimation","resetAlert","setAlert","selectAlert","state"],"mappings":"oLAUO,MAAMA,EAAc,CAAC,CAC1B,SAAAC,EACA,aAAAC,EACA,aAAAC,EACA,WAAAC,CACF,EAAsB,KAAuB,CACrC,KAAA,CAACC,EAAUC,CAAW,EAAIC,EAAA,SAC9BC,EAAS,YAAA,EAGXC,OAAAA,EAAAA,UAAU,IAAM,CACR,MAAAC,EAAwBC,GAAuC,CAC/DN,IAAa,UAAYM,IAAiB,SAC7BT,GAAA,MAAAA,IACNG,IAAa,YAAcM,IAAiB,WACxCP,GAAA,MAAAA,IACJC,IAAa,cAAgBM,IAAiB,eACxCR,GAAA,MAAAA,KAGjBF,GAAA,MAAAA,EAAWU,GACXL,EAAYK,CAAY,CAAA,EAEpBC,EAAWJ,EAAS,iBAAiB,SAAUE,CAAoB,EAElE,MAAA,IAAME,EAAS,QAAO,EAC5B,CAACX,EAAUC,EAAcC,EAAcC,EAAYC,CAAQ,CAAC,EAExDA,CACT,EC9BW,IAAAQ,EAEE,MAAAC,EAA2B,CACtC,CAAC,SAAAC,EAAU,4BAAAC,EAA8B,EAAI,EAAa,CAAC,EAC3DC,EAAmC,MAEvBjB,EAAA,CACV,aAAc,IAAM,CACbkB,EAAkB,sBAAA,EAAwB,KAAcC,GAAA,CACnCN,EAAAM,EAEpBH,IACFD,GAAA,MAAAA,EAAWI,GACb,CACD,CACH,CAAA,CACD,EAEDV,EAAAA,UAAU,IAAM,CACTS,EAAkB,sBAAA,EAAwB,KAAcC,GAAA,CACnCN,EAAAM,EACxBJ,GAAA,MAAAA,EAAWI,EAAK,CACjB,GAEAF,CAAI,EAEAJ,GCVHO,EAAe,CAAA,EAERC,EAAaC,EAAY,CACpC,KAAMC,EAAS,MACf,aAAAH,EACA,SAAU,CACR,WAAY,IAAMA,EAClB,SAAU,CAACI,EAAQ,CAAC,QAAAC,MACbZ,GACaa,EAAA,cAAcA,EAAgB,QAAQ,aAAa,EAG9DD,EAEX,CACF,CAAC,EAEY,CAAC,WAAAE,EAAY,SAAAC,GAAYP,EAAW,QAEpCQ,EAAeC,GAAqBA,EAAMP,EAAS,KAAK"}