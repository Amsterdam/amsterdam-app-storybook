{"version":3,"file":"Paragraph-5fb95601.js","sources":["../../src/components/ui/text/Paragraph.tsx"],"sourcesContent":["import {ReactNode, useMemo} from 'react'\nimport {StyleSheet, Text, TextProps, TextStyle} from 'react-native'\nimport {Theme} from '@/themes/themes'\nimport {ColorTokens} from '@/themes/tokens/color-light'\nimport {ParagraphVariants} from '@/themes/tokens/text'\nimport {useThemable} from '@/themes/useThemable'\n\ntype Props = {\n  children: ReactNode\n  /**\n   * Provides an inverse text color to allow a paragraph on a dark background.\n   */\n  color?: keyof ColorTokens['text']\n  /**\n   * Defines the alignment of the text. Maps with the textAlign style prop options.\n   */\n  textAlign?: TextStyle['textAlign']\n  /**\n   * Which variation of a paragraph to display.\n   */\n  variant?: ParagraphVariants\n} & Omit<TextProps, 'style'>\n\nexport const Paragraph = ({\n  children,\n  color = 'default',\n  textAlign = 'left',\n  variant = 'body',\n  ...textProps\n}: Props) => {\n  const createdStyles = useMemo(\n    () => createStyles({color, textAlign, variant}),\n    [color, textAlign, variant],\n  )\n  const styles = useThemable(createdStyles)\n\n  return (\n    <Text\n      accessibilityLanguage=\"nl-NL\"\n      accessibilityRole={color === 'warning' ? 'alert' : 'none'}\n      style={styles.text}\n      {...textProps}>\n      {children}\n    </Text>\n  )\n}\n\nconst createStyles =\n  ({\n    color: textColor,\n    textAlign,\n    variant,\n  }: Required<Pick<Props, 'color' | 'textAlign' | 'variant'>>) =>\n  ({color, text}: Theme) =>\n    StyleSheet.create({\n      text: {\n        flexShrink: 1,\n        color: color.text[textColor],\n        fontFamily: text.fontFamily[variant === 'quote' ? 'bold' : 'regular'],\n        fontSize: text.fontSize[variant],\n        lineHeight: text.lineHeight[variant],\n        textAlign,\n      },\n    })\n"],"names":["Paragraph","children","color","textAlign","variant","textProps","createdStyles","useMemo","createStyles","styles","useThemable","jsx","Text","textColor","text","StyleSheet"],"mappings":"4IAuBO,MAAAA,EAAA,CAAA,CAAmB,SAAAC,EACxB,MAAAC,EAAA,UACQ,UAAAC,EAAA,OACI,QAAAC,EAAA,OACF,GAAAC,CAEZ,IAAA,CACE,MAAAC,EAAAC,EAAA,QAAsB,IAAAC,EAAA,CAAA,MAAAN,EAAA,UAAAC,EAAA,QAAAC,CAAA,CAAA,EAC0B,CAAAF,EAAAC,EAAAC,CAAA,CACpB,EAE5BK,EAAAC,EAAAJ,CAAA,EAEA,OAAAK,EACEC,EAAC,CAAA,sBAAA,QACuB,kBAAAV,IAAA,UAAA,QAAA,OAC6B,MAAAO,EAAA,KACrC,GAAAJ,EACV,SAAAJ,CACH,CAAA,CAGP,EAEAO,EAAA,CAAA,CACG,MAAAK,EACQ,UAAAV,EACP,QAAAC,CAEF,IAAA,CAAA,CAAA,MAAAF,EAAA,KAAAY,CAAA,IAAAC,EAAA,OAAA,CAEoB,KAAA,CACV,WAAA,EACQ,MAAAb,EAAA,KAAAW,CAAA,EACe,WAAAC,EAAA,WAAAV,IAAA,QAAA,OAAA,SAAA,EACyC,SAAAU,EAAA,SAAAV,CAAA,EACrC,WAAAU,EAAA,WAAAV,CAAA,EACI,UAAAD,CACnC,CAEJ,CAAA"}