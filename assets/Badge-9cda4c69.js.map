{"version":3,"file":"Badge-9cda4c69.js","sources":["../../src/utils/formatNumber.ts","../../src/components/ui/feedback/Badge.tsx"],"sourcesContent":["export const formatNumber = (number = 0) => number.toLocaleString('nl-NL')\n","import {AccessibilityProps, StyleSheet, Text, View} from 'react-native'\nimport {Row} from '@/components/ui/layout/Row'\nimport {TestProps} from '@/components/ui/types'\nimport {useDeviceContext} from '@/hooks/useDeviceContext'\nimport {Device} from '@/providers/device.provider'\nimport {Theme} from '@/themes/themes'\nimport {useThemable} from '@/themes/useThemable'\nimport {OmitUndefined} from '@/types/undefined'\nimport {formatNumber} from '@/utils/formatNumber'\n\nexport type BadgeProps = {\n  /**\n   * The value to display in the badge.\n   */\n  value: number\n  /**\n   * Which variant of the badge to display.\n   */\n  variant?: 'default' | 'on-icon' | 'small'\n} & Pick<AccessibilityProps, 'accessibilityLabel' | 'accessibilityLanguage'> &\n  TestProps\n\nexport const Badge = ({\n  accessibilityLabel,\n  accessibilityLanguage = 'nl-NL',\n  testID,\n  value,\n  variant = 'default',\n}: BadgeProps) => {\n  const {fontScale} = useDeviceContext()\n  const styles = useThemable(createStyles(fontScale, variant))\n\n  return (\n    <Row align=\"start\">\n      <View style={styles.circle}>\n        <Text\n          accessibilityLabel={accessibilityLabel}\n          accessibilityLanguage={accessibilityLanguage}\n          accessible={!!variantConfig[variant]}\n          numberOfLines={1}\n          style={styles.text}\n          testID={testID}>\n          {formatNumber(value)}\n        </Text>\n      </View>\n    </Row>\n  )\n}\n\ntype VariantConfig = {\n  [v in OmitUndefined<BadgeProps['variant']>]: {\n    accessible?: boolean\n    diameter: number\n    text: number\n  }\n}\n\nconst variantConfig: VariantConfig = {\n  default: {\n    diameter: 22,\n    text: 14,\n  },\n  'on-icon': {\n    accessible: false,\n    diameter: 16,\n    text: 12,\n  },\n  small: {\n    diameter: 16,\n    text: 12,\n  },\n}\n\nconst createStyles =\n  (\n    fontScale: Device['fontScale'],\n    variant: OmitUndefined<BadgeProps['variant']>,\n  ) =>\n  ({color, size, text}: Theme) => {\n    const {diameter, text: textSize} = variantConfig[variant]\n    const scalesWithFont = variant !== 'on-icon'\n    const scaleFactor = scalesWithFont ? fontScale : 1\n\n    const scaledDiameter = diameter * scaleFactor\n    const scaledTextSize = textSize * scaleFactor\n\n    return StyleSheet.create({\n      circle: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        minWidth: scaledDiameter, // Prevent the circle becoming a vertical oval\n        paddingStart: size.spacing.xs + 0.5, // Nudge center-alignment because of even width\n        paddingEnd: size.spacing.xs,\n        borderRadius: scaledDiameter / 2,\n        backgroundColor: color.pressable.secondary.background,\n      },\n      text: {\n        fontFamily: text.fontFamily.bold,\n        fontSize: scaledTextSize,\n        lineHeight: scaledDiameter,\n        color: color.text.inverse,\n      },\n    })\n  }\n"],"names":["formatNumber","number","Badge","accessibilityLabel","accessibilityLanguage","testID","value","variant","fontScale","useDeviceContext","styles","useThemable","createStyles","jsx","Row","View","Text","variantConfig","color","size","text","diameter","textSize","scaleFactor","scaledDiameter","scaledTextSize","StyleSheet"],"mappings":"qOAAO,MAAMA,EAAe,CAACC,EAAS,IAAMA,EAAO,eAAe,OAAO,ECsBlEC,EAAA,CAAA,CAAe,mBAAAC,EACpB,sBAAAC,EAAA,QACwB,OAAAC,EACxB,MAAAC,EACA,QAAAC,EAAA,SAEF,IAAA,CACE,KAAA,CAAA,UAAAC,GAAAC,IACAC,EAAAC,EAAAC,EAAAJ,EAAAD,CAAA,CAAA,EAEA,OAAAM,EAAAC,EAAA,CAAA,MAAA,QAAA,SAAAD,EAAAE,EAAA,CAAA,MAAAL,EAAA,OAAA,SAAAG,EAGMG,EAAC,CAAA,mBAAAb,EACC,sBAAAC,EACA,WAAA,CAAA,CAAAa,EAAAV,CAAA,EACmC,cAAA,EACpB,MAAAG,EAAA,KACD,OAAAL,EACd,SAAAL,EAAAM,CAAA,CACmB,CAAA,CAAA,CAAA,CAAA,CAAA,CAK7B,EAUAW,EAAA,CAAqC,QAAA,CAC1B,SAAA,GACG,KAAA,EACJ,EACR,UAAA,CACW,WAAA,GACG,SAAA,GACF,KAAA,EACJ,EACR,MAAA,CACO,SAAA,GACK,KAAA,EACJ,CAEV,EAEAL,EAAA,CAAAJ,EAAAD,IAAA,CAAA,CAAA,MAAAW,EAAA,KAAAC,EAAA,KAAAC,KAAA,CAMI,KAAA,CAAA,SAAAC,EAAA,KAAAC,CAAA,EAAAL,EAAAV,CAAA,EAEAgB,EADAhB,IAAA,UACAC,EAAA,EAEAgB,EAAAH,EAAAE,EACAE,EAAAH,EAAAC,EAEA,OAAAG,EAAA,OAAA,CAAyB,OAAA,CACf,cAAA,MACS,eAAA,SACC,SAAAF,EACN,aAAAL,EAAA,QAAA,GAAA,GACsB,WAAAA,EAAA,QAAA,GACP,aAAAK,EAAA,EACM,gBAAAN,EAAA,UAAA,UAAA,UACY,EAC7C,KAAA,CACM,WAAAE,EAAA,WAAA,KACwB,SAAAK,EAClB,WAAAD,EACE,MAAAN,EAAA,KAAA,OACM,CACpB,CAAA,CAEJ"}