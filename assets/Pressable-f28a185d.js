import{j as t}from"./jsx-runtime-ffb262ed.js";import{r as c}from"./index-76fb7be0.js";import{P as m}from"./PressableBase-943e0133.js";import{B as v}from"./Box-c4a692d7.js";import{d as p}from"./useThemable-21958500.js";import{S as g}from"./index-a802de3b.js";const n=c.forwardRef(({children:e,inset:a="no",insetHorizontal:r,insetVertical:u,variant:o="tertiary",...s},i)=>{const l=p(f(o));return t.jsx(m,{accessibilityLanguage:"nl-NL",accessibilityRole:"button",ref:i,style:({pressed:d})=>[l.button,d&&l.pressed],...s,children:t.jsx(v,{inset:a,insetHorizontal:r,insetVertical:u,children:e})})}),f=e=>({color:a})=>g.create({button:{backgroundColor:e!=="transparent"?a.pressable[e].default:void 0},pressed:{backgroundColor:e!=="transparent"?a.pressable[e].highlight:void 0}});try{n.displayName="Pressable",n.__docgenInfo={description:`Used to build other interactive components, do not use on its own.
This is a replacement for the React Native Pressable component, with added Box properties.`,displayName:"Pressable",props:{children:{defaultValue:null,description:`Either children or a render prop that receives a boolean reflecting whether
the component is currently pressed.`,name:"children",required:!1,type:{name:"((string | number | boolean | ReactElement<any, string | JSXElementConstructor<any>> | Iterable<ReactNode> | ReactPortal) & (string | ... 5 more ... | ((state: PressableStateCallbackType) => ReactNode))) | null"}},"logging-label":{defaultValue:null,description:"",name:"logging-label",required:!1,type:{name:"string"}},variant:{defaultValue:{value:"tertiary"},description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"tertiary"'},{value:'"negative"'},{value:'"transparent"'}]}},logAction:{defaultValue:null,description:"",name:"logAction",required:!1,type:{name:"enum",value:[{value:'"accessibilityAction"'},{value:'"accessibilityChange"'},{value:'"addressAdd"'},{value:'"addressChange"'},{value:'"blur"'},{value:'"buttonPress"'},{value:'"deviceInfoChange"'},{value:'"finishedReport"'},{value:'"locationOrAddressSelectionChange"'},{value:'"moduleChange"'},{value:'"pushNotificationDisplay"'},{value:'"pushNotificationTap"'},{value:'"radioChange"'},{value:'"startUp"'},{value:'"swipeOut"'},{value:'"toForeground"'},{value:'"toggle"'}]}},logCategory:{defaultValue:null,description:"",name:"logCategory",required:!1,type:{name:"enum",value:[{value:'"about"'},{value:'"address"'},{value:'"city-pass"'},{value:'"construction-work"'},{value:'"construction-work-editor"'},{value:'"contact"'},{value:'"home"'},{value:'"onboarding"'},{value:'"open-waste-container"'},{value:'"redirects"'},{value:'"report-problem"'},{value:'"user"'},{value:'"waste-guide"'},{value:'"general"'}]}},logDimensions:{defaultValue:null,description:"",name:"logDimensions",required:!1,type:{name:"Partial<Record<CustomDimensionKeys, string>>"}},logName:{defaultValue:null,description:"",name:"logName",required:!1,type:{name:"string"}},logValue:{defaultValue:null,description:"",name:"logValue",required:!1,type:{name:"number"}},inset:{defaultValue:{value:"no"},description:"The amount of inner spacing.",name:"inset",required:!1,type:{name:"enum",value:[{value:'"no"'},{value:'"xs"'},{value:'"sm"'},{value:'"md"'},{value:'"lg"'},{value:'"xl"'},{value:'"xxl"'},{value:'"xxxl"'}]}},insetHorizontal:{defaultValue:null,description:"The amount of inner spacing at the left and right.",name:"insetHorizontal",required:!1,type:{name:"enum",value:[{value:'"no"'},{value:'"xs"'},{value:'"sm"'},{value:'"md"'},{value:'"lg"'},{value:'"xl"'},{value:'"xxl"'},{value:'"xxxl"'}]}},insetVertical:{defaultValue:null,description:"The amount of inner spacing at the top and bottom.",name:"insetVertical",required:!1,type:{name:"enum",value:[{value:'"no"'},{value:'"xs"'},{value:'"sm"'},{value:'"md"'},{value:'"lg"'},{value:'"xl"'},{value:'"xxl"'},{value:'"xxxl"'}]}}}}}catch{}export{n as P};
