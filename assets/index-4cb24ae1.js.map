{"version":3,"file":"index-4cb24ae1.js","sources":["../../node_modules/react-native-web/dist/modules/addEventListener/index.js","../../node_modules/react-native-web/dist/modules/modality/index.js","../../node_modules/react-native-web/dist/modules/useEvent/index.js","../../node_modules/react-native-web/dist/modules/useHover/index.js","../../node_modules/react-native-web/dist/exports/Pressable/index.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n'use strict';\n\nimport canUseDOM from '../canUseDom';\nvar emptyFunction = () => {};\nfunction supportsPassiveEvents() {\n  var supported = false;\n  // Check if browser supports event with passive listeners\n  // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n  if (canUseDOM) {\n    try {\n      var options = {};\n      Object.defineProperty(options, 'passive', {\n        get() {\n          supported = true;\n          return false;\n        }\n      });\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    } catch (e) {}\n  }\n  return supported;\n}\nvar canUsePassiveEvents = supportsPassiveEvents();\nfunction getOptions(options) {\n  if (options == null) {\n    return false;\n  }\n  return canUsePassiveEvents ? options : Boolean(options.capture);\n}\n\n/**\n * Shim generic API compatibility with ReactDOM's synthetic events, without needing the\n * large amount of code ReactDOM uses to do this. Ideally we wouldn't use a synthetic\n * event wrapper at all.\n */\nfunction isPropagationStopped() {\n  return this.cancelBubble;\n}\nfunction isDefaultPrevented() {\n  return this.defaultPrevented;\n}\nfunction normalizeEvent(event) {\n  event.nativeEvent = event;\n  event.persist = emptyFunction;\n  event.isDefaultPrevented = isDefaultPrevented;\n  event.isPropagationStopped = isPropagationStopped;\n  return event;\n}\n\n/**\n *\n */\nexport function addEventListener(target, type, listener, options) {\n  var opts = getOptions(options);\n  var compatListener = e => listener(normalizeEvent(e));\n  target.addEventListener(type, compatListener, opts);\n  return function removeEventListener() {\n    if (target != null) {\n      target.removeEventListener(type, compatListener, opts);\n    }\n  };\n}","/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport { addEventListener } from '../addEventListener';\nimport canUseDOM from '../canUseDom';\nvar supportsPointerEvent = () => !!(typeof window !== 'undefined' && window.PointerEvent != null);\nvar activeModality = 'keyboard';\nvar modality = 'keyboard';\nvar previousModality;\nvar previousActiveModality;\nvar isEmulatingMouseEvents = false;\nvar listeners = new Set();\nvar KEYBOARD = 'keyboard';\nvar MOUSE = 'mouse';\nvar TOUCH = 'touch';\nvar BLUR = 'blur';\nvar CONTEXTMENU = 'contextmenu';\nvar FOCUS = 'focus';\nvar KEYDOWN = 'keydown';\nvar MOUSEDOWN = 'mousedown';\nvar MOUSEMOVE = 'mousemove';\nvar MOUSEUP = 'mouseup';\nvar POINTERDOWN = 'pointerdown';\nvar POINTERMOVE = 'pointermove';\nvar SCROLL = 'scroll';\nvar SELECTIONCHANGE = 'selectionchange';\nvar TOUCHCANCEL = 'touchcancel';\nvar TOUCHMOVE = 'touchmove';\nvar TOUCHSTART = 'touchstart';\nvar VISIBILITYCHANGE = 'visibilitychange';\nvar bubbleOptions = {\n  passive: true\n};\nvar captureOptions = {\n  capture: true,\n  passive: true\n};\nfunction restoreModality() {\n  if (previousModality != null || previousActiveModality != null) {\n    if (previousModality != null) {\n      modality = previousModality;\n      previousModality = null;\n    }\n    if (previousActiveModality != null) {\n      activeModality = previousActiveModality;\n      previousActiveModality = null;\n    }\n    callListeners();\n  }\n}\nfunction onBlurWindow() {\n  previousModality = modality;\n  previousActiveModality = activeModality;\n  activeModality = KEYBOARD;\n  modality = KEYBOARD;\n  callListeners();\n  // for fallback events\n  isEmulatingMouseEvents = false;\n}\nfunction onFocusWindow() {\n  restoreModality();\n}\nfunction onKeyDown(event) {\n  if (event.metaKey || event.altKey || event.ctrlKey) {\n    return;\n  }\n  if (modality !== KEYBOARD) {\n    modality = KEYBOARD;\n    activeModality = KEYBOARD;\n    callListeners();\n  }\n}\nfunction onVisibilityChange() {\n  if (document.visibilityState !== 'hidden') {\n    restoreModality();\n  }\n}\nfunction onPointerish(event) {\n  var eventType = event.type;\n  if (supportsPointerEvent()) {\n    if (eventType === POINTERDOWN) {\n      if (activeModality !== event.pointerType) {\n        modality = event.pointerType;\n        activeModality = event.pointerType;\n        callListeners();\n      }\n      return;\n    }\n    if (eventType === POINTERMOVE) {\n      if (modality !== event.pointerType) {\n        modality = event.pointerType;\n        callListeners();\n      }\n      return;\n    }\n  }\n  // Fallback for non-PointerEvent environment\n  else {\n    if (!isEmulatingMouseEvents) {\n      if (eventType === MOUSEDOWN) {\n        if (activeModality !== MOUSE) {\n          modality = MOUSE;\n          activeModality = MOUSE;\n          callListeners();\n        }\n      }\n      if (eventType === MOUSEMOVE) {\n        if (modality !== MOUSE) {\n          modality = MOUSE;\n          callListeners();\n        }\n      }\n    }\n\n    // Flag when browser may produce emulated events\n    if (eventType === TOUCHSTART) {\n      isEmulatingMouseEvents = true;\n      if (event.touches && event.touches.length > 1) {\n        isEmulatingMouseEvents = false;\n      }\n      if (activeModality !== TOUCH) {\n        modality = TOUCH;\n        activeModality = TOUCH;\n        callListeners();\n      }\n      return;\n    }\n\n    // Remove flag after emulated events are finished or cancelled, and if an\n    // event occurs that cuts short a touch event sequence.\n    if (eventType === CONTEXTMENU || eventType === MOUSEUP || eventType === SELECTIONCHANGE || eventType === SCROLL || eventType === TOUCHCANCEL || eventType === TOUCHMOVE) {\n      isEmulatingMouseEvents = false;\n    }\n  }\n}\nif (canUseDOM) {\n  // Window events\n  addEventListener(window, BLUR, onBlurWindow, bubbleOptions);\n  addEventListener(window, FOCUS, onFocusWindow, bubbleOptions);\n  // Must be capture phase because 'stopPropagation' might prevent these\n  // events bubbling to the document.\n  addEventListener(document, KEYDOWN, onKeyDown, captureOptions);\n  addEventListener(document, VISIBILITYCHANGE, onVisibilityChange, captureOptions);\n  addEventListener(document, POINTERDOWN, onPointerish, captureOptions);\n  addEventListener(document, POINTERMOVE, onPointerish, captureOptions);\n  // Fallback events\n  addEventListener(document, CONTEXTMENU, onPointerish, captureOptions);\n  addEventListener(document, MOUSEDOWN, onPointerish, captureOptions);\n  addEventListener(document, MOUSEMOVE, onPointerish, captureOptions);\n  addEventListener(document, MOUSEUP, onPointerish, captureOptions);\n  addEventListener(document, TOUCHCANCEL, onPointerish, captureOptions);\n  addEventListener(document, TOUCHMOVE, onPointerish, captureOptions);\n  addEventListener(document, TOUCHSTART, onPointerish, captureOptions);\n  addEventListener(document, SELECTIONCHANGE, onPointerish, captureOptions);\n  addEventListener(document, SCROLL, onPointerish, captureOptions);\n}\nfunction callListeners() {\n  var value = {\n    activeModality,\n    modality\n  };\n  listeners.forEach(listener => {\n    listener(value);\n  });\n}\nexport function getActiveModality() {\n  return activeModality;\n}\nexport function getModality() {\n  return modality;\n}\nexport function addModalityListener(listener) {\n  listeners.add(listener);\n  return () => {\n    listeners.delete(listener);\n  };\n}\nexport function testOnly_resetActiveModality() {\n  isEmulatingMouseEvents = false;\n  activeModality = KEYBOARD;\n  modality = KEYBOARD;\n}","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport { addEventListener } from '../addEventListener';\nimport useLayoutEffect from '../useLayoutEffect';\nimport useStable from '../useStable';\n/**\n * This can be used with any event type include custom events.\n *\n * const click = useEvent('click', options);\n * useEffect(() => {\n *   click.setListener(target, onClick);\n *   return () => click.clear();\n * }).\n */\nexport default function useEvent(eventType, options) {\n  var targetListeners = useStable(() => new Map());\n  var addListener = useStable(() => {\n    return (target, callback) => {\n      var removeTargetListener = targetListeners.get(target);\n      if (removeTargetListener != null) {\n        removeTargetListener();\n      }\n      if (callback == null) {\n        targetListeners.delete(target);\n        callback = () => {};\n      }\n      var removeEventListener = addEventListener(target, eventType, callback, options);\n      targetListeners.set(target, removeEventListener);\n      return removeEventListener;\n    };\n  });\n  useLayoutEffect(() => {\n    return () => {\n      targetListeners.forEach(removeListener => {\n        removeListener();\n      });\n      targetListeners.clear();\n    };\n  }, [targetListeners]);\n  return addListener;\n}","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport { getModality } from '../modality';\nimport useEvent from '../useEvent';\nimport useLayoutEffect from '../useLayoutEffect';\n\n/**\n * Types\n */\n\n/**\n * Implementation\n */\n\nvar emptyObject = {};\nvar opts = {\n  passive: true\n};\nvar lockEventType = 'react-gui:hover:lock';\nvar unlockEventType = 'react-gui:hover:unlock';\nvar supportsPointerEvent = () => !!(typeof window !== 'undefined' && window.PointerEvent != null);\nfunction dispatchCustomEvent(target, type, payload) {\n  var event = document.createEvent('CustomEvent');\n  var _ref = payload || emptyObject,\n    _ref$bubbles = _ref.bubbles,\n    bubbles = _ref$bubbles === void 0 ? true : _ref$bubbles,\n    _ref$cancelable = _ref.cancelable,\n    cancelable = _ref$cancelable === void 0 ? true : _ref$cancelable,\n    detail = _ref.detail;\n  event.initCustomEvent(type, bubbles, cancelable, detail);\n  target.dispatchEvent(event);\n}\n\n// This accounts for the non-PointerEvent fallback events.\nfunction getPointerType(event) {\n  var pointerType = event.pointerType;\n  return pointerType != null ? pointerType : getModality();\n}\nexport default function useHover(targetRef, config) {\n  var contain = config.contain,\n    disabled = config.disabled,\n    onHoverStart = config.onHoverStart,\n    onHoverChange = config.onHoverChange,\n    onHoverUpdate = config.onHoverUpdate,\n    onHoverEnd = config.onHoverEnd;\n  var canUsePE = supportsPointerEvent();\n  var addMoveListener = useEvent(canUsePE ? 'pointermove' : 'mousemove', opts);\n  var addEnterListener = useEvent(canUsePE ? 'pointerenter' : 'mouseenter', opts);\n  var addLeaveListener = useEvent(canUsePE ? 'pointerleave' : 'mouseleave', opts);\n  // These custom events are used to implement the \"contain\" prop.\n  var addLockListener = useEvent(lockEventType, opts);\n  var addUnlockListener = useEvent(unlockEventType, opts);\n  useLayoutEffect(() => {\n    var target = targetRef.current;\n    if (target !== null) {\n      /**\n       * End the hover gesture\n       */\n      var hoverEnd = function hoverEnd(e) {\n        if (onHoverEnd != null) {\n          onHoverEnd(e);\n        }\n        if (onHoverChange != null) {\n          onHoverChange(false);\n        }\n        // Remove the listeners once finished.\n        addMoveListener(target, null);\n        addLeaveListener(target, null);\n      };\n\n      /**\n       * Leave element\n       */\n      var leaveListener = function leaveListener(e) {\n        var target = targetRef.current;\n        if (target != null && getPointerType(e) !== 'touch') {\n          if (contain) {\n            dispatchCustomEvent(target, unlockEventType);\n          }\n          hoverEnd(e);\n        }\n      };\n\n      /**\n       * Move within element\n       */\n      var moveListener = function moveListener(e) {\n        if (getPointerType(e) !== 'touch') {\n          if (onHoverUpdate != null) {\n            // Not all browsers have these properties\n            if (e.x == null) {\n              e.x = e.clientX;\n            }\n            if (e.y == null) {\n              e.y = e.clientY;\n            }\n            onHoverUpdate(e);\n          }\n        }\n      };\n\n      /**\n       * Start the hover gesture\n       */\n      var hoverStart = function hoverStart(e) {\n        if (onHoverStart != null) {\n          onHoverStart(e);\n        }\n        if (onHoverChange != null) {\n          onHoverChange(true);\n        }\n        // Set the listeners needed for the rest of the hover gesture.\n        if (onHoverUpdate != null) {\n          addMoveListener(target, !disabled ? moveListener : null);\n        }\n        addLeaveListener(target, !disabled ? leaveListener : null);\n      };\n\n      /**\n       * Enter element\n       */\n      var enterListener = function enterListener(e) {\n        var target = targetRef.current;\n        if (target != null && getPointerType(e) !== 'touch') {\n          if (contain) {\n            dispatchCustomEvent(target, lockEventType);\n          }\n          hoverStart(e);\n          var lockListener = function lockListener(lockEvent) {\n            if (lockEvent.target !== target) {\n              hoverEnd(e);\n            }\n          };\n          var unlockListener = function unlockListener(lockEvent) {\n            if (lockEvent.target !== target) {\n              hoverStart(e);\n            }\n          };\n          addLockListener(target, !disabled ? lockListener : null);\n          addUnlockListener(target, !disabled ? unlockListener : null);\n        }\n      };\n      addEnterListener(target, !disabled ? enterListener : null);\n    }\n  }, [addEnterListener, addMoveListener, addLeaveListener, addLockListener, addUnlockListener, contain, disabled, onHoverStart, onHoverChange, onHoverUpdate, onHoverEnd, targetRef]);\n}","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n'use strict';\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"delayLongPress\", \"delayPressIn\", \"delayPressOut\", \"disabled\", \"onBlur\", \"onContextMenu\", \"onFocus\", \"onHoverIn\", \"onHoverOut\", \"onKeyDown\", \"onLongPress\", \"onPress\", \"onPressMove\", \"onPressIn\", \"onPressOut\", \"style\", \"tabIndex\", \"testOnly_hovered\", \"testOnly_pressed\"];\nimport * as React from 'react';\nimport { forwardRef, memo, useMemo, useState, useRef } from 'react';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport useHover from '../../modules/useHover';\nimport usePressEvents from '../../modules/usePressEvents';\nimport StyleSheet from '../StyleSheet';\nimport View from '../View';\n/**\n * Component used to build display components that should respond to whether the\n * component is currently pressed or not.\n */\nfunction Pressable(props, forwardedRef) {\n  var children = props.children,\n    delayLongPress = props.delayLongPress,\n    delayPressIn = props.delayPressIn,\n    delayPressOut = props.delayPressOut,\n    disabled = props.disabled,\n    onBlur = props.onBlur,\n    onContextMenu = props.onContextMenu,\n    onFocus = props.onFocus,\n    onHoverIn = props.onHoverIn,\n    onHoverOut = props.onHoverOut,\n    onKeyDown = props.onKeyDown,\n    onLongPress = props.onLongPress,\n    onPress = props.onPress,\n    onPressMove = props.onPressMove,\n    onPressIn = props.onPressIn,\n    onPressOut = props.onPressOut,\n    style = props.style,\n    tabIndex = props.tabIndex,\n    testOnly_hovered = props.testOnly_hovered,\n    testOnly_pressed = props.testOnly_pressed,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useForceableState = useForceableState(testOnly_hovered === true),\n    hovered = _useForceableState[0],\n    setHovered = _useForceableState[1];\n  var _useForceableState2 = useForceableState(false),\n    focused = _useForceableState2[0],\n    setFocused = _useForceableState2[1];\n  var _useForceableState3 = useForceableState(testOnly_pressed === true),\n    pressed = _useForceableState3[0],\n    setPressed = _useForceableState3[1];\n  var hostRef = useRef(null);\n  var setRef = useMergeRefs(forwardedRef, hostRef);\n  var pressConfig = useMemo(() => ({\n    delayLongPress,\n    delayPressStart: delayPressIn,\n    delayPressEnd: delayPressOut,\n    disabled,\n    onLongPress,\n    onPress,\n    onPressChange: setPressed,\n    onPressStart: onPressIn,\n    onPressMove,\n    onPressEnd: onPressOut\n  }), [delayLongPress, delayPressIn, delayPressOut, disabled, onLongPress, onPress, onPressIn, onPressMove, onPressOut, setPressed]);\n  var pressEventHandlers = usePressEvents(hostRef, pressConfig);\n  var onContextMenuPress = pressEventHandlers.onContextMenu,\n    onKeyDownPress = pressEventHandlers.onKeyDown;\n  useHover(hostRef, {\n    contain: true,\n    disabled,\n    onHoverChange: setHovered,\n    onHoverStart: onHoverIn,\n    onHoverEnd: onHoverOut\n  });\n  var interactionState = {\n    hovered,\n    focused,\n    pressed\n  };\n  var blurHandler = React.useCallback(e => {\n    if (e.nativeEvent.target === hostRef.current) {\n      setFocused(false);\n      if (onBlur != null) {\n        onBlur(e);\n      }\n    }\n  }, [hostRef, setFocused, onBlur]);\n  var focusHandler = React.useCallback(e => {\n    if (e.nativeEvent.target === hostRef.current) {\n      setFocused(true);\n      if (onFocus != null) {\n        onFocus(e);\n      }\n    }\n  }, [hostRef, setFocused, onFocus]);\n  var contextMenuHandler = React.useCallback(e => {\n    if (onContextMenuPress != null) {\n      onContextMenuPress(e);\n    }\n    if (onContextMenu != null) {\n      onContextMenu(e);\n    }\n  }, [onContextMenu, onContextMenuPress]);\n  var keyDownHandler = React.useCallback(e => {\n    if (onKeyDownPress != null) {\n      onKeyDownPress(e);\n    }\n    if (onKeyDown != null) {\n      onKeyDown(e);\n    }\n  }, [onKeyDown, onKeyDownPress]);\n  var _tabIndex;\n  if (tabIndex !== undefined) {\n    _tabIndex = tabIndex;\n  } else {\n    _tabIndex = disabled ? -1 : 0;\n  }\n  return /*#__PURE__*/React.createElement(View, _extends({}, rest, pressEventHandlers, {\n    \"aria-disabled\": disabled,\n    onBlur: blurHandler,\n    onContextMenu: contextMenuHandler,\n    onFocus: focusHandler,\n    onKeyDown: keyDownHandler,\n    ref: setRef,\n    style: [disabled ? styles.disabled : styles.active, typeof style === 'function' ? style(interactionState) : style],\n    tabIndex: _tabIndex\n  }), typeof children === 'function' ? children(interactionState) : children);\n}\nfunction useForceableState(forced) {\n  var _useState = useState(false),\n    bool = _useState[0],\n    setBool = _useState[1];\n  return [bool || forced, setBool];\n}\nvar styles = StyleSheet.create({\n  active: {\n    cursor: 'pointer',\n    touchAction: 'manipulation'\n  },\n  disabled: {\n    pointerEvents: 'box-none'\n  }\n});\nvar MemoedPressable = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(Pressable));\nMemoedPressable.displayName = 'Pressable';\nexport default MemoedPressable;"],"names":["emptyFunction","supportsPassiveEvents","supported","canUseDOM","options","canUsePassiveEvents","getOptions","isPropagationStopped","isDefaultPrevented","normalizeEvent","event","addEventListener","target","type","listener","opts","compatListener","e","supportsPointerEvent","activeModality","modality","previousModality","previousActiveModality","isEmulatingMouseEvents","listeners","KEYBOARD","MOUSE","TOUCH","BLUR","CONTEXTMENU","FOCUS","KEYDOWN","MOUSEDOWN","MOUSEMOVE","MOUSEUP","POINTERDOWN","POINTERMOVE","SCROLL","SELECTIONCHANGE","TOUCHCANCEL","TOUCHMOVE","TOUCHSTART","VISIBILITYCHANGE","bubbleOptions","captureOptions","restoreModality","callListeners","onBlurWindow","onFocusWindow","onKeyDown","onVisibilityChange","onPointerish","eventType","value","getModality","useEvent","targetListeners","useStable","addListener","callback","removeTargetListener","removeEventListener","useLayoutEffect","removeListener","emptyObject","lockEventType","unlockEventType","dispatchCustomEvent","payload","_ref","_ref$bubbles","bubbles","_ref$cancelable","cancelable","detail","getPointerType","pointerType","useHover","targetRef","config","contain","disabled","onHoverStart","onHoverChange","onHoverUpdate","onHoverEnd","canUsePE","addMoveListener","addEnterListener","addLeaveListener","addLockListener","addUnlockListener","hoverEnd","leaveListener","moveListener","hoverStart","enterListener","lockListener","lockEvent","unlockListener","_excluded","Pressable","props","forwardedRef","children","delayLongPress","delayPressIn","delayPressOut","onBlur","onContextMenu","onFocus","onHoverIn","onHoverOut","onLongPress","onPress","onPressMove","onPressIn","onPressOut","style","tabIndex","testOnly_hovered","testOnly_pressed","rest","_objectWithoutPropertiesLoose","_useForceableState","useForceableState","hovered","setHovered","_useForceableState2","focused","setFocused","_useForceableState3","pressed","setPressed","hostRef","useRef","setRef","useMergeRefs","pressConfig","useMemo","pressEventHandlers","usePressEvents","onContextMenuPress","onKeyDownPress","interactionState","blurHandler","React.useCallback","focusHandler","contextMenuHandler","keyDownHandler","_tabIndex","React.createElement","View","_extends","styles","forced","_useState","useState","bool","setBool","StyleSheet","MemoedPressable","memo","forwardRef","Pressable$1"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}