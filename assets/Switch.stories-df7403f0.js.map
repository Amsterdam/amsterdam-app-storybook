{"version":3,"file":"Switch.stories-df7403f0.js","sources":["../../src/components/ui/forms/Switch.tsx"],"sourcesContent":["import {ElementType, Fragment, ReactNode} from 'react'\nimport {\n  AccessibilityInfo,\n  Platform,\n  Pressable,\n  Switch as SwitchRN,\n  SwitchProps as SwitchRNProps,\n} from 'react-native'\nimport {FormField} from '@/components/ui/forms/FormField'\nimport {MainAxisPosition} from '@/components/ui/layout/types'\nimport {useTheme} from '@/themes/useTheme'\n\ntype Props = {\n  label: ReactNode\n  labelPosition?: MainAxisPosition\n  onChange?: () => void\n  wrapper?: ElementType\n} & Omit<SwitchRNProps, 'onChange'>\n\n/**\n * Wraps a switch with its label in a row and takes care of accessibility.\n */\nexport const Switch = ({\n  accessibilityLabel = '',\n  disabled = false,\n  label,\n  labelPosition = 'start',\n  onChange,\n  testID,\n  value,\n  wrapper: Wrapper = Fragment,\n  ...switchProps\n}: Props) => {\n  const {color} = useTheme()\n\n  const onPress = () => {\n    onChange?.()\n    setTimeout(\n      // Timeout is needed for iOS to announce the new value\n      () => AccessibilityInfo.announceForAccessibility(value ? 'uit' : 'aan'),\n      100,\n    )\n  }\n\n  return (\n    <Pressable\n      accessibilityLabel={\n        Platform.OS === 'android'\n          ? accessibilityLabel\n          : accessibilityLabel + (value ? ' aan' : ' uit')\n      }\n      accessibilityRole=\"switch\"\n      aria-disabled={disabled}\n      onPress={onPress}\n      testID={testID}>\n      <Wrapper>\n        <FormField\n          label={label}\n          labelPosition={labelPosition}>\n          <SwitchRN\n            accessibilityElementsHidden\n            importantForAccessibility=\"no-hide-descendants\"\n            ios_backgroundColor={color.control.switch.track.background.off}\n            onChange={onPress}\n            thumbColor={\n              color.control.switch.thumb.background[\n                disabled ? 'disabled' : 'enabled'\n              ]\n            }\n            trackColor={{\n              false: color.control.switch.track.background.off,\n              true: color.control.switch.track.background.on,\n            }}\n            value={value}\n            {...switchProps}\n          />\n        </FormField>\n      </Wrapper>\n    </Pressable>\n  )\n}\n"],"names":["Switch","accessibilityLabel","disabled","label","labelPosition","onChange","testID","value","Wrapper","Fragment","switchProps","color","useTheme","onPress","AccessibilityInfo","jsx","Pressable","Platform","FormField","SwitchRN"],"mappings":"0lBAsBA,MAAAA,EAAA,CAAA,CACA,mBAAAC,EAAA,GACA,SAAAC,EAAA,GACA,MAAAC,EACA,cAAAC,EAAA,QACA,SAAAC,EACA,OAAAC,EACA,MAAAC,EACA,QAAAC,EAAAC,EAAA,SACA,GAAAC,CACA,IAAA,CACA,KAAA,CAAA,MAAAC,GAAAC,IAEAC,EAAA,IAAA,CACAR,GAAA,MAAAA,IACA,WAEA,IAAAS,EAAA,yBAAAP,EAAA,MAAA,KAAA,EACA,GAAA,CACA,EAIA,OAAAQ,EAAAC,EAAA,CACA,mBACAC,EAAA,KAAA,UACAhB,EACAA,GAAAM,EAAA,OAAA,QAEA,kBAAA,SACA,gBAAAL,EACA,QAAAW,EACA,OAAAP,EACA,WAAAE,EACA,CAAA,SAAAO,EAAAG,EAAA,CACA,MAAAf,EACA,cAAAC,EACA,SAAAW,EAAAI,EAAA,CACA,4BAAA,GACA,0BAAA,sBACA,oBAAAR,EAAA,QAAA,OAAA,MAAA,WAAA,IACA,SAAAE,EACA,WACAF,EAAA,QAAA,OAAA,MAAA,WACAT,EAAA,WAAA,SACA,EAEA,WAAA,CACA,MAAAS,EAAA,QAAA,OAAA,MAAA,WAAA,IACA,KAAAA,EAAA,QAAA,OAAA,MAAA,WAAA,EACA,EACA,MAAAJ,EACA,GAAAG,CAAA,CACA,CAAA,CAAA,EAEA,CAAA,CAAA,CAGA;;;;;;"}