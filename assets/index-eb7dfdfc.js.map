{"version":3,"file":"index-eb7dfdfc.js","sources":["../../node_modules/react-native-web/dist/exports/AccessibilityInfo/index.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport canUseDOM from '../../modules/canUseDom';\nfunction isScreenReaderEnabled() {\n  return new Promise((resolve, reject) => {\n    resolve(true);\n  });\n}\nvar prefersReducedMotionMedia = canUseDOM && typeof window.matchMedia === 'function' ? window.matchMedia('(prefers-reduced-motion: reduce)') : null;\nfunction isReduceMotionEnabled() {\n  return new Promise((resolve, reject) => {\n    resolve(prefersReducedMotionMedia ? prefersReducedMotionMedia.matches : true);\n  });\n}\nfunction addChangeListener(fn) {\n  if (prefersReducedMotionMedia != null) {\n    prefersReducedMotionMedia.addEventListener != null ? prefersReducedMotionMedia.addEventListener('change', fn) : prefersReducedMotionMedia.addListener(fn);\n  }\n}\nfunction removeChangeListener(fn) {\n  if (prefersReducedMotionMedia != null) {\n    prefersReducedMotionMedia.removeEventListener != null ? prefersReducedMotionMedia.removeEventListener('change', fn) : prefersReducedMotionMedia.removeListener(fn);\n  }\n}\nvar handlers = {};\nvar AccessibilityInfo = {\n  /**\n   * Query whether a screen reader is currently enabled.\n   *\n   * Returns a promise which resolves to a boolean.\n   * The result is `true` when a screen reader is enabled and `false` otherwise.\n   */\n  isScreenReaderEnabled,\n  /**\n   * Query whether the user prefers reduced motion.\n   *\n   * Returns a promise which resolves to a boolean.\n   * The result is `true` when a screen reader is enabled and `false` otherwise.\n   */\n  isReduceMotionEnabled,\n  /**\n   * Deprecated\n   */\n  fetch: isScreenReaderEnabled,\n  /**\n   * Add an event handler. Supported events: reduceMotionChanged\n   */\n  addEventListener: function addEventListener(eventName, handler) {\n    if (eventName === 'reduceMotionChanged') {\n      if (!prefersReducedMotionMedia) {\n        return;\n      }\n      var listener = event => {\n        handler(event.matches);\n      };\n      addChangeListener(listener);\n      handlers[handler] = listener;\n    }\n    return {\n      remove: () => AccessibilityInfo.removeEventListener(eventName, handler)\n    };\n  },\n  /**\n   * Set accessibility focus to a react component.\n   */\n  setAccessibilityFocus: function setAccessibilityFocus(reactTag) {},\n  /**\n   * Post a string to be announced by the screen reader.\n   */\n  announceForAccessibility: function announceForAccessibility(announcement) {},\n  /**\n   * Remove an event handler.\n   */\n  removeEventListener: function removeEventListener(eventName, handler) {\n    if (eventName === 'reduceMotionChanged') {\n      var listener = handlers[handler];\n      if (!listener || !prefersReducedMotionMedia) {\n        return;\n      }\n      removeChangeListener(listener);\n    }\n    return;\n  }\n};\nexport default AccessibilityInfo;"],"names":["isScreenReaderEnabled","resolve","reject","prefersReducedMotionMedia","canUseDOM","isReduceMotionEnabled","addChangeListener","fn","removeChangeListener","handlers","AccessibilityInfo","eventName","handler","listener","event","reactTag","announcement","AccessibilityInfo$1"],"mappings":"8CASA,SAASA,GAAwB,CAC/B,OAAO,IAAI,QAAQ,CAACC,EAASC,IAAW,CACtCD,EAAQ,EAAI,CAChB,CAAG,CACH,CACA,IAAIE,EAA4BC,GAAa,OAAO,OAAO,YAAe,WAAa,OAAO,WAAW,kCAAkC,EAAI,KAC/I,SAASC,GAAwB,CAC/B,OAAO,IAAI,QAAQ,CAACJ,EAASC,IAAW,CACtCD,EAAQE,EAA4BA,EAA0B,QAAU,EAAI,CAChF,CAAG,CACH,CACA,SAASG,EAAkBC,EAAI,CACzBJ,GAA6B,OAC/BA,EAA0B,kBAAoB,KAAOA,EAA0B,iBAAiB,SAAUI,CAAE,EAAIJ,EAA0B,YAAYI,CAAE,EAE5J,CACA,SAASC,EAAqBD,EAAI,CAC5BJ,GAA6B,OAC/BA,EAA0B,qBAAuB,KAAOA,EAA0B,oBAAoB,SAAUI,CAAE,EAAIJ,EAA0B,eAAeI,CAAE,EAErK,CACA,IAAIE,EAAW,CAAA,EACXC,EAAoB,CAOtB,sBAAAV,EAOA,sBAAAK,EAIA,MAAOL,EAIP,iBAAkB,SAA0BW,EAAWC,EAAS,CAC9D,GAAID,IAAc,sBAAuB,CACvC,GAAI,CAACR,EACH,OAEF,IAAIU,EAAWC,GAAS,CACtBF,EAAQE,EAAM,OAAO,CAC7B,EACMR,EAAkBO,CAAQ,EAC1BJ,EAASG,CAAO,EAAIC,CACrB,CACD,MAAO,CACL,OAAQ,IAAMH,EAAkB,oBAAoBC,EAAWC,CAAO,CAC5E,CACG,EAID,sBAAuB,SAA+BG,EAAU,CAAE,EAIlE,yBAA0B,SAAkCC,EAAc,CAAE,EAI5E,oBAAqB,SAA6BL,EAAWC,EAAS,CACpE,GAAID,IAAc,sBAAuB,CACvC,IAAIE,EAAWJ,EAASG,CAAO,EAC/B,GAAI,CAACC,GAAY,CAACV,EAChB,OAEFK,EAAqBK,CAAQ,CAC9B,CAEF,CACH,EACA,MAAAI,EAAeP","x_google_ignoreList":[0]}