{"version":3,"file":"index-bea11cd4.js","sources":["../../node_modules/react-native-web/dist/exports/NativeModules/index.js","../../node_modules/fbjs/lib/invariant.js","../../node_modules/react-native-web/dist/exports/Dimensions/index.js","../../node_modules/react-native-web/dist/exports/useWindowDimensions/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport UIManager from '../UIManager';\n\n// NativeModules shim\nvar NativeModules = {\n  UIManager\n};\nexport default NativeModules;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n'use strict';\n\nvar validateFormat = process.env.NODE_ENV !== \"production\" ? function (format) {\n  if (format === undefined) {\n    throw new Error('invariant(...): Second argument must be a string.');\n  }\n} : function (format) {};\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments to provide\n * information about what broke and what you were expecting.\n *\n * The invariant message will be stripped in production, but the invariant will\n * remain to ensure logic does not differ in production.\n */\n\nfunction invariant(condition, format) {\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return String(args[argIndex++]);\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // Skip invariant's own stack frame.\n\n    throw error;\n  }\n}\n\nmodule.exports = invariant;","/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport invariant from 'fbjs/lib/invariant';\nimport canUseDOM from '../../modules/canUseDom';\nvar dimensions = {\n  window: {\n    fontScale: 1,\n    height: 0,\n    scale: 1,\n    width: 0\n  },\n  screen: {\n    fontScale: 1,\n    height: 0,\n    scale: 1,\n    width: 0\n  }\n};\nvar listeners = {};\nvar shouldInit = canUseDOM;\nfunction update() {\n  if (!canUseDOM) {\n    return;\n  }\n  var win = window;\n  var height;\n  var width;\n\n  /**\n   * iOS does not update viewport dimensions on keyboard open/close.\n   * window.visualViewport(https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport)\n   * is used instead of document.documentElement.clientHeight (which remains as a fallback)\n   */\n  if (win.visualViewport) {\n    var visualViewport = win.visualViewport;\n    /**\n     * We are multiplying by scale because height and width from visual viewport\n     * also react to pinch zoom, and become smaller when zoomed. But it is not desired\n     * behaviour, since originally documentElement client height and width were used,\n     * and they do not react to pinch zoom.\n     */\n    height = Math.round(visualViewport.height * visualViewport.scale);\n    width = Math.round(visualViewport.width * visualViewport.scale);\n  } else {\n    var docEl = win.document.documentElement;\n    height = docEl.clientHeight;\n    width = docEl.clientWidth;\n  }\n  dimensions.window = {\n    fontScale: 1,\n    height,\n    scale: win.devicePixelRatio || 1,\n    width\n  };\n  dimensions.screen = {\n    fontScale: 1,\n    height: win.screen.height,\n    scale: win.devicePixelRatio || 1,\n    width: win.screen.width\n  };\n}\nfunction handleResize() {\n  update();\n  if (Array.isArray(listeners['change'])) {\n    listeners['change'].forEach(handler => handler(dimensions));\n  }\n}\nexport default class Dimensions {\n  static get(dimension) {\n    if (shouldInit) {\n      shouldInit = false;\n      update();\n    }\n    invariant(dimensions[dimension], \"No dimension set for key \" + dimension);\n    return dimensions[dimension];\n  }\n  static set(initialDimensions) {\n    if (initialDimensions) {\n      if (canUseDOM) {\n        invariant(false, 'Dimensions cannot be set in the browser');\n      } else {\n        if (initialDimensions.screen != null) {\n          dimensions.screen = initialDimensions.screen;\n        }\n        if (initialDimensions.window != null) {\n          dimensions.window = initialDimensions.window;\n        }\n      }\n    }\n  }\n  static addEventListener(type, handler) {\n    listeners[type] = listeners[type] || [];\n    listeners[type].push(handler);\n    return {\n      remove: () => {\n        this.removeEventListener(type, handler);\n      }\n    };\n  }\n  static removeEventListener(type, handler) {\n    if (Array.isArray(listeners[type])) {\n      listeners[type] = listeners[type].filter(_handler => _handler !== handler);\n    }\n  }\n}\nif (canUseDOM) {\n  if (window.visualViewport) {\n    window.visualViewport.addEventListener('resize', handleResize, false);\n  } else {\n    window.addEventListener('resize', handleResize, false);\n  }\n}","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n\n'use strict';\n\nimport Dimensions from '../Dimensions';\nimport { useEffect, useState } from 'react';\nexport default function useWindowDimensions() {\n  var _useState = useState(() => Dimensions.get('window')),\n    dims = _useState[0],\n    setDims = _useState[1];\n  useEffect(() => {\n    function handleChange(_ref) {\n      var window = _ref.window;\n      if (window != null) {\n        setDims(window);\n      }\n    }\n    Dimensions.addEventListener('change', handleChange);\n    // We might have missed an update between calling `get` in render and\n    // `addEventListener` in this handler, so we set it here. If there was\n    // no change, React will filter out this update as a no-op.\n    setDims(Dimensions.get('window'));\n    return () => {\n      Dimensions.removeEventListener('change', handleChange);\n    };\n  }, []);\n  return dims;\n}"],"names":["NativeModules","UIManager","NativeModules$1","invariant","condition","format","_len","args","_key","error","argIndex","invariant_1","dimensions","listeners","shouldInit","canUseDOM","update","win","height","width","visualViewport","docEl","handleResize","handler","Dimensions","dimension","initialDimensions","type","_handler","useWindowDimensions","_useState","useState","dims","setDims","useEffect","handleChange","_ref","window"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}