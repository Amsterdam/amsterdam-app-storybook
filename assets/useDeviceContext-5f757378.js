import{r as d}from"./index-76fb7be0.js";import{j as x}from"./index-1401012c.js";import{N as m}from"./NativeEventEmitter-abc7829a.js";import{N as g}from"./index-d983c834.js";import{a as _}from"./_commonjsHelpers-de833af9.js";import{P as i}from"./index-0f55ce69.js";import{u as B}from"./index-290feef2.js";new m(g.RNDeviceInfo);const f=new m(g.RNDeviceInfo);let v=!1,h=-1,u={};const p=e=>{const{level:t,charging:o,chargingtime:n,dischargingtime:r}=e;return{batteryLevel:t,lowPowerMode:!1,batteryState:t===1?"full":o?"charging":"unplugged",chargingtime:n,dischargingtime:r}},S=()=>window.performance&&window.performance.memory?window.performance.memory.jsHeapSizeLimit:-1,P=()=>document.referrer,D=()=>!!navigator.onLine,I=()=>window.navigator.userAgent,b=()=>!!navigator.geolocation,M=()=>navigator.deviceMemory?navigator.deviceMemory*1e9:-1,N=()=>window.performance&&window.performance.memory?window.performance.memory.usedJSHeapSize:-1,R=()=>{typeof navigator>"u"||!navigator.getBattery||navigator.getBattery().then(e=>{v=e.charging,e.addEventListener("chargingchange",()=>{const{charging:t}=e;v=t,u=p(e),f.emit("RNDeviceInfo_powerStateDidChange",u)}),e.addEventListener("levelchange",()=>{const{level:t}=e;h=t,u=p(e),f.emit("RNDeviceInfo_batteryLevelDidChange",t),t<.2&&f.emit("RNDeviceInfo_batteryLevelIsLow",t)})})},T=()=>{const e=window.navigator.userAgent,t=window.navigator.platform,o=["Macintosh","MacIntel","MacPPC","Mac68K"],n=["Win32","Win64","Windows","WinCE"],r=["iPhone","iPad","iPod"];let a=t;return o.indexOf(t)!==-1?a="Mac OS":r.indexOf(t)!==-1?a="iOS":n.indexOf(t)!==-1?a="Windows":/Android/.test(e)?a="Android":!a&&/Linux/.test(t)&&(a="Linux"),a};R();const k=async()=>P(),E=async()=>I(),A=async()=>navigator.getBattery?navigator.getBattery().then(e=>e.charging):!1,U=()=>v,V=async()=>navigator.mediaDevices&&navigator.mediaDevices.enumerateDevices?navigator.mediaDevices.enumerateDevices().then(e=>!!e.find(t=>t.kind==="videoinput")):!1,F=()=>(console.log("[react-native-device-info] isCameraPresentSync not supported - please use isCameraPresent"),!1),j=async()=>navigator.getBattery?navigator.getBattery().then(e=>e.level):-1,q=()=>h,W=async()=>b(),z=async()=>D(),$=async()=>T(),G=async()=>navigator.storage&&navigator.storage.estimate?navigator.storage.estimate().then(({quota:e})=>e):-1,H=()=>(console.log("[react-native-device-info] getTotalDiskCapacitySync not supported - please use getTotalDiskCapacity"),-1),J=async()=>navigator.storage&&navigator.storage.estimate?navigator.storage.estimate().then(({quota:e,usage:t})=>e-t):-1,X=()=>(console.log("[react-native-device-info] getFreeDiskStorageSync not supported - please use getFreeDiskStorage"),-1),Y=async()=>S(),Q=async()=>N(),Z=async()=>M(),K=async()=>navigator.getBattery?navigator.getBattery().then(e=>p(e)):{},ee=()=>u,te=Object.freeze(Object.defineProperty({__proto__:null,getBaseOs:$,getBatteryLevel:j,getBatteryLevelSync:q,getFreeDiskStorage:J,getFreeDiskStorageSync:X,getInstallReferrer:k,getInstallReferrerSync:P,getMaxMemory:Y,getMaxMemorySync:S,getPowerState:K,getPowerStateSync:ee,getTotalDiskCapacity:G,getTotalDiskCapacitySync:H,getTotalMemory:Z,getTotalMemorySync:M,getUsedMemory:Q,getUsedMemorySync:N,getUserAgent:E,getUserAgentSync:I,isAirplaneMode:z,isAirplaneModeSync:D,isBatteryCharging:A,isBatteryChargingSync:U,isCameraPresent:V,isCameraPresentSync:F,isLocationEnabled:W,isLocationEnabledSync:b},Symbol.toStringTag,{value:"Module"})),ne=_(te);let y=g.RNDeviceInfo;(i.OS==="web"||i.OS==="dom")&&(y=ne);if(!y&&(i.OS==="android"||i.OS==="ios"||i.OS==="web"||i.OS==="dom"))throw new Error("react-native-device-info: NativeModule.RNDeviceInfo is null. To fix this issue try these steps:\n  • For react-native <= 0.59: Run `react-native link react-native-device-info` in the project root.\n  • Rebuild and re-run the app.\n  • If you are using CocoaPods on iOS, run `pod install` in the `ios` directory and then rebuild and re-run the app. You may also need to re-open Xcode to get the new pods.\n  If none of these fix the issue, please open an issue on the Github repository: https://github.com/react-native-device-info/react-native-device-info");const c=y;let s={};function C(e,t,o){let n={};return e.filter(r=>i.OS==r).forEach(r=>n[r]=t),i.select({...n,default:o})}function l({getter:e,supportedPlatforms:t,defaultValue:o,memoKey:n}){if(n&&s[n]!=null)return s[n];{const r=C(t,e,()=>o)();return n&&(s[n]=r),r}}async function re({getter:e,supportedPlatforms:t,defaultValue:o,memoKey:n}){if(n&&s[n]!=null)return s[n];{const r=await C(t,e,()=>Promise.resolve(o))();return n&&(s[n]=r),r}}function oe({syncGetter:e,...t}){return[()=>re(t),()=>l({...t,getter:e})]}const[fe,ve]=oe({memoKey:"uniqueId",supportedPlatforms:["android","ios","windows"],getter:()=>c.getUniqueId(),syncGetter:()=>c.getUniqueIdSync(),defaultValue:"unknown"}),pe=()=>l({memoKey:"buildNumber",supportedPlatforms:["android","ios","windows"],getter:()=>c.buildNumber,defaultValue:"unknown"}),me=()=>l({memoKey:"version",defaultValue:"unknown",supportedPlatforms:["android","ios","windows"],getter:()=>c.appVersion}),ie=()=>l({defaultValue:!1,supportedPlatforms:["android","ios","windows"],memoKey:"tablet",getter:()=>c.isTablet});new m(g.RNDeviceInfo);const L={fontScale:1,height:640,isLandscape:!1,isPortrait:!0,isTablet:!1,isTallPhone:!0,scale:1,width:360},O=d.createContext(L),w=({children:e})=>{const[t,o]=d.useState(L),n=B();return d.useEffect(()=>{o({isLandscape:n.height<n.width,isPortrait:n.height>=n.width,isTablet:ie(),isTallPhone:n.height/n.width>2,...n})},[n]),x(O.Provider,{value:t,children:e})};try{w.displayName="DeviceProvider",w.__docgenInfo={description:"",displayName:"DeviceProvider",props:{}}}catch{}const ye=()=>d.useContext(O);export{w as D,pe as a,me as b,ve as g,ye as u};
