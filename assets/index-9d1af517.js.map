{"version":3,"file":"index-9d1af517.js","sources":["../../node_modules/react-native-web/dist/exports/Text/index.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"hrefAttrs\", \"numberOfLines\", \"onClick\", \"onLayout\", \"onPress\", \"onMoveShouldSetResponder\", \"onMoveShouldSetResponderCapture\", \"onResponderEnd\", \"onResponderGrant\", \"onResponderMove\", \"onResponderReject\", \"onResponderRelease\", \"onResponderStart\", \"onResponderTerminate\", \"onResponderTerminationRequest\", \"onScrollShouldSetResponder\", \"onScrollShouldSetResponderCapture\", \"onSelectionChangeShouldSetResponder\", \"onSelectionChangeShouldSetResponderCapture\", \"onStartShouldSetResponder\", \"onStartShouldSetResponderCapture\", \"selectable\"];\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport * as React from 'react';\nimport createElement from '../createElement';\nimport * as forwardedProps from '../../modules/forwardedProps';\nimport pick from '../../modules/pick';\nimport useElementLayout from '../../modules/useElementLayout';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport usePlatformMethods from '../../modules/usePlatformMethods';\nimport useResponderEvents from '../../modules/useResponderEvents';\nimport StyleSheet from '../StyleSheet';\nimport TextAncestorContext from './TextAncestorContext';\nimport { useLocaleContext, getLocaleDirection } from '../../modules/useLocale';\nimport { warnOnce } from '../../modules/warnOnce';\nvar forwardPropsList = Object.assign({}, forwardedProps.defaultProps, forwardedProps.accessibilityProps, forwardedProps.clickProps, forwardedProps.focusProps, forwardedProps.keyboardProps, forwardedProps.mouseProps, forwardedProps.touchProps, forwardedProps.styleProps, {\n  href: true,\n  lang: true,\n  pointerEvents: true\n});\nvar pickProps = props => pick(props, forwardPropsList);\nvar Text = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  var hrefAttrs = props.hrefAttrs,\n    numberOfLines = props.numberOfLines,\n    onClick = props.onClick,\n    onLayout = props.onLayout,\n    onPress = props.onPress,\n    onMoveShouldSetResponder = props.onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture = props.onMoveShouldSetResponderCapture,\n    onResponderEnd = props.onResponderEnd,\n    onResponderGrant = props.onResponderGrant,\n    onResponderMove = props.onResponderMove,\n    onResponderReject = props.onResponderReject,\n    onResponderRelease = props.onResponderRelease,\n    onResponderStart = props.onResponderStart,\n    onResponderTerminate = props.onResponderTerminate,\n    onResponderTerminationRequest = props.onResponderTerminationRequest,\n    onScrollShouldSetResponder = props.onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture = props.onScrollShouldSetResponderCapture,\n    onSelectionChangeShouldSetResponder = props.onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture = props.onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder = props.onStartShouldSetResponder,\n    onStartShouldSetResponderCapture = props.onStartShouldSetResponderCapture,\n    selectable = props.selectable,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  if (selectable != null) {\n    warnOnce('selectable', 'selectable prop is deprecated. Use styles.userSelect.');\n  }\n  var hasTextAncestor = React.useContext(TextAncestorContext);\n  var hostRef = React.useRef(null);\n  var _useLocaleContext = useLocaleContext(),\n    contextDirection = _useLocaleContext.direction;\n  useElementLayout(hostRef, onLayout);\n  useResponderEvents(hostRef, {\n    onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture,\n    onResponderEnd,\n    onResponderGrant,\n    onResponderMove,\n    onResponderReject,\n    onResponderRelease,\n    onResponderStart,\n    onResponderTerminate,\n    onResponderTerminationRequest,\n    onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture,\n    onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder,\n    onStartShouldSetResponderCapture\n  });\n  var handleClick = React.useCallback(e => {\n    if (onClick != null) {\n      onClick(e);\n    } else if (onPress != null) {\n      e.stopPropagation();\n      onPress(e);\n    }\n  }, [onClick, onPress]);\n  var component = hasTextAncestor ? 'span' : 'div';\n  var langDirection = props.lang != null ? getLocaleDirection(props.lang) : null;\n  var componentDirection = props.dir || langDirection;\n  var writingDirection = componentDirection || contextDirection;\n  var supportedProps = pickProps(rest);\n  supportedProps.dir = componentDirection;\n  // 'auto' by default allows browsers to infer writing direction (root elements only)\n  if (!hasTextAncestor) {\n    supportedProps.dir = componentDirection != null ? componentDirection : 'auto';\n  }\n  if (onClick || onPress) {\n    supportedProps.onClick = handleClick;\n  }\n  supportedProps.style = [numberOfLines != null && numberOfLines > 1 && {\n    WebkitLineClamp: numberOfLines\n  }, hasTextAncestor === true ? styles.textHasAncestor$raw : styles.text$raw, numberOfLines === 1 && styles.textOneLine, numberOfLines != null && numberOfLines > 1 && styles.textMultiLine, props.style, selectable === true && styles.selectable, selectable === false && styles.notSelectable, onPress && styles.pressable];\n  if (props.href != null) {\n    component = 'a';\n    if (hrefAttrs != null) {\n      var download = hrefAttrs.download,\n        rel = hrefAttrs.rel,\n        target = hrefAttrs.target;\n      if (download != null) {\n        supportedProps.download = download;\n      }\n      if (rel != null) {\n        supportedProps.rel = rel;\n      }\n      if (typeof target === 'string') {\n        supportedProps.target = target.charAt(0) !== '_' ? '_' + target : target;\n      }\n    }\n  }\n  var platformMethodsRef = usePlatformMethods(supportedProps);\n  var setRef = useMergeRefs(hostRef, platformMethodsRef, forwardedRef);\n  supportedProps.ref = setRef;\n  var element = createElement(component, supportedProps, {\n    writingDirection\n  });\n  return hasTextAncestor ? element : /*#__PURE__*/React.createElement(TextAncestorContext.Provider, {\n    value: true\n  }, element);\n});\nText.displayName = 'Text';\nvar textStyle = {\n  backgroundColor: 'transparent',\n  border: '0 solid black',\n  boxSizing: 'border-box',\n  color: 'black',\n  display: 'inline',\n  font: '14px System',\n  listStyle: 'none',\n  margin: 0,\n  padding: 0,\n  position: 'relative',\n  textAlign: 'start',\n  textDecoration: 'none',\n  whiteSpace: 'pre-wrap',\n  wordWrap: 'break-word'\n};\nvar styles = StyleSheet.create({\n  text$raw: textStyle,\n  textHasAncestor$raw: _objectSpread(_objectSpread({}, textStyle), {}, {\n    color: 'inherit',\n    font: 'inherit',\n    textAlign: 'inherit',\n    whiteSpace: 'inherit'\n  }),\n  textOneLine: {\n    maxWidth: '100%',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    wordWrap: 'normal'\n  },\n  // See #13\n  textMultiLine: {\n    display: '-webkit-box',\n    maxWidth: '100%',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    WebkitBoxOrient: 'vertical'\n  },\n  notSelectable: {\n    userSelect: 'none'\n  },\n  selectable: {\n    userSelect: 'text'\n  },\n  pressable: {\n    cursor: 'pointer'\n  }\n});\nexport default Text;"],"names":["_excluded","forwardPropsList","forwardedProps.defaultProps","forwardedProps.accessibilityProps","forwardedProps.clickProps","forwardedProps.focusProps","forwardedProps.keyboardProps","forwardedProps.mouseProps","forwardedProps.touchProps","forwardedProps.styleProps","pickProps","props","pick","Text","React.forwardRef","forwardedRef","hrefAttrs","numberOfLines","onClick","onLayout","onPress","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","onResponderEnd","onResponderGrant","onResponderMove","onResponderReject","onResponderRelease","onResponderStart","onResponderTerminate","onResponderTerminationRequest","onScrollShouldSetResponder","onScrollShouldSetResponderCapture","onSelectionChangeShouldSetResponder","onSelectionChangeShouldSetResponderCapture","onStartShouldSetResponder","onStartShouldSetResponderCapture","selectable","rest","_objectWithoutPropertiesLoose","hasTextAncestor","React.useContext","TextAncestorContext","hostRef","React.useRef","_useLocaleContext","useLocaleContext","contextDirection","useElementLayout","useResponderEvents","handleClick","React.useCallback","e","component","langDirection","getLocaleDirection","componentDirection","writingDirection","supportedProps","styles","download","rel","target","platformMethodsRef","usePlatformMethods","setRef","useMergeRefs","element","createElement","React.createElement","textStyle","StyleSheet","_objectSpread","Text$1"],"mappings":"uOAEA,IAAIA,GAAY,CAAC,YAAa,gBAAiB,UAAW,WAAY,UAAW,2BAA4B,kCAAmC,iBAAkB,mBAAoB,kBAAmB,oBAAqB,qBAAsB,mBAAoB,uBAAwB,gCAAiC,6BAA8B,oCAAqC,sCAAuC,6CAA8C,4BAA6B,mCAAoC,YAAY,EAuBliBC,GAAmB,OAAO,OAAO,CAAA,EAAIC,EAA6BC,EAAmCC,EAA2BC,EAA2BC,EAA8BC,EAA2BC,GAA2BC,GAA2B,CAC5Q,KAAM,GACN,KAAM,GACN,cAAe,EACjB,CAAC,EACGC,GAAYC,GAASC,GAAKD,EAAOV,EAAgB,EACjDY,EAAoBC,EAAgB,WAAC,CAACH,EAAOI,IAAiB,CAChE,IAAIC,EAAYL,EAAM,UACpBM,EAAgBN,EAAM,cACtBO,EAAUP,EAAM,QAChBQ,EAAWR,EAAM,SACjBS,EAAUT,EAAM,QAChBU,EAA2BV,EAAM,yBACjCW,EAAkCX,EAAM,gCACxCY,EAAiBZ,EAAM,eACvBa,EAAmBb,EAAM,iBACzBc,EAAkBd,EAAM,gBACxBe,EAAoBf,EAAM,kBAC1BgB,EAAqBhB,EAAM,mBAC3BiB,EAAmBjB,EAAM,iBACzBkB,EAAuBlB,EAAM,qBAC7BmB,EAAgCnB,EAAM,8BACtCoB,EAA6BpB,EAAM,2BACnCqB,EAAoCrB,EAAM,kCAC1CsB,EAAsCtB,EAAM,oCAC5CuB,EAA6CvB,EAAM,2CACnDwB,EAA4BxB,EAAM,0BAClCyB,EAAmCzB,EAAM,iCACzC0B,EAAa1B,EAAM,WACnB2B,EAAOC,GAA8B5B,EAAOX,EAAS,EAInDwC,EAAkBC,aAAiBC,CAAmB,EACtDC,EAAUC,SAAa,IAAI,EAC3BC,EAAoBC,GAAkB,EACxCC,EAAmBF,EAAkB,UACvCG,GAAiBL,EAASxB,CAAQ,EAClC8B,GAAmBN,EAAS,CAC1B,yBAAAtB,EACA,gCAAAC,EACA,eAAAC,EACA,iBAAAC,EACA,gBAAAC,EACA,kBAAAC,EACA,mBAAAC,EACA,iBAAAC,EACA,qBAAAC,EACA,8BAAAC,EACA,2BAAAC,EACA,kCAAAC,EACA,oCAAAC,EACA,2CAAAC,EACA,0BAAAC,EACA,iCAAAC,CACJ,CAAG,EACD,IAAIc,EAAcC,EAAiB,YAACC,GAAK,CACnClC,GAAW,KACbA,EAAQkC,CAAC,EACAhC,GAAW,OACpBgC,EAAE,gBAAe,EACjBhC,EAAQgC,CAAC,EAEf,EAAK,CAAClC,EAASE,CAAO,CAAC,EACjBiC,EAAYb,EAAkB,OAAS,MACvCc,EAAgB3C,EAAM,MAAQ,KAAO4C,GAAmB5C,EAAM,IAAI,EAAI,KACtE6C,EAAqB7C,EAAM,KAAO2C,EAClCG,EAAmBD,GAAsBT,EACzCW,EAAiBhD,GAAU4B,CAAI,EAYnC,GAXAoB,EAAe,IAAMF,EAEhBhB,IACHkB,EAAe,IAAMF,GAAkD,SAErEtC,GAAWE,KACbsC,EAAe,QAAUR,GAE3BQ,EAAe,MAAQ,CAACzC,GAAiB,MAAQA,EAAgB,GAAK,CACpE,gBAAiBA,CAClB,EAAEuB,IAAoB,GAAOmB,EAAO,oBAAsBA,EAAO,SAAU1C,IAAkB,GAAK0C,EAAO,YAAa1C,GAAiB,MAAQA,EAAgB,GAAK0C,EAAO,cAAehD,EAAM,MAAO0B,IAAe,IAAQsB,EAAO,WAAYtB,IAAe,IAASsB,EAAO,cAAevC,GAAWuC,EAAO,SAAS,EACvThD,EAAM,MAAQ,OAChB0C,EAAY,IACRrC,GAAa,MAAM,CACrB,IAAI4C,EAAW5C,EAAU,SACvB6C,EAAM7C,EAAU,IAChB8C,EAAS9C,EAAU,OACjB4C,GAAY,OACdF,EAAe,SAAWE,GAExBC,GAAO,OACTH,EAAe,IAAMG,GAEnB,OAAOC,GAAW,WACpBJ,EAAe,OAASI,EAAO,OAAO,CAAC,IAAM,IAAM,IAAMA,EAASA,EAErE,CAEH,IAAIC,EAAqBC,GAAmBN,CAAc,EACtDO,EAASC,GAAavB,EAASoB,EAAoBhD,CAAY,EACnE2C,EAAe,IAAMO,EACrB,IAAIE,EAAUC,GAAcf,EAAWK,EAAgB,CACrD,iBAAAD,CACJ,CAAG,EACD,OAAOjB,EAAkB2B,EAAuBE,gBAAoB3B,EAAoB,SAAU,CAChG,MAAO,EACR,EAAEyB,CAAO,CACZ,CAAC,EACDtD,EAAK,YAAc,OACnB,IAAIyD,EAAY,CACd,gBAAiB,cACjB,OAAQ,gBACR,UAAW,aACX,MAAO,QACP,QAAS,SACT,KAAM,cACN,UAAW,OACX,OAAQ,EACR,QAAS,EACT,SAAU,WACV,UAAW,QACX,eAAgB,OAChB,WAAY,WACZ,SAAU,YACZ,EACIX,EAASY,GAAW,OAAO,CAC7B,SAAUD,EACV,oBAAqBE,EAAcA,EAAc,CAAE,EAAEF,CAAS,EAAG,CAAA,EAAI,CACnE,MAAO,UACP,KAAM,UACN,UAAW,UACX,WAAY,SAChB,CAAG,EACD,YAAa,CACX,SAAU,OACV,SAAU,SACV,aAAc,WACd,WAAY,SACZ,SAAU,QACX,EAED,cAAe,CACb,QAAS,cACT,SAAU,OACV,SAAU,SACV,aAAc,WACd,gBAAiB,UAClB,EACD,cAAe,CACb,WAAY,MACb,EACD,WAAY,CACV,WAAY,MACb,EACD,UAAW,CACT,OAAQ,SACT,CACH,CAAC,EACD,MAAAG,GAAe5D","x_google_ignoreList":[0]}