import{D as m}from"./useThemable-d55ba667.js";import{a as f}from"./development-5f53618d.js";var p=(e=>(e.default="default",e.internetConnection="internetConnection",e))(p||{}),i=(e=>(e.currentCoordinates="Get current coordinates failed",e.getModulesForAppQuery="Failed to get modules for app",e.hideSplashScreen="Hide splash screen failed",e.isScreenReaderEnabled="Screenreader enabled check failed",e.locationPermission="Check location permission failed",e.notSupportedStoredUrl="Can not use url to open store",e.openMailUrl="Open mail url failed",e.openPhoneUrl="Open phone url failed",e.openStore="Open app store",e.openWebUrl="Open web url failed",e.pickingImageFailed="Picking image from device failed",e.piwikInitialization="Piwik initialization failed",e.registerDevice="Register device for push notifications failed",e.requestLocationPermission="Request location permission failed",e.resetLocationPermissionAndroid="Android: Check location permission on foreground failed",e.sentryMiddleWareError="Sentry middleware logger failed",e.takingPhotoFailed="Taking photo failed",e))(i||{});const g={[i.currentCoordinates]:["code","message"],[i.getModulesForAppQuery]:["error","retriesRemaining","serverModules"],[i.notSupportedStoredUrl]:[],[i.hideSplashScreen]:["error"],[i.isScreenReaderEnabled]:["error"],[i.locationPermission]:["error"],[i.openMailUrl]:[],[i.openPhoneUrl]:[],[i.openWebUrl]:["url"],[i.pickingImageFailed]:["error","code","viaCamera"],[i.piwikInitialization]:["error"],[i.registerDevice]:["error"],[i.requestLocationPermission]:["error"],[i.resetLocationPermissionAndroid]:["error"],[i.sentryMiddleWareError]:["endpoint","status","url"],[i.takingPhotoFailed]:["code","message","viaCamera"],[i.openStore]:["error"]},h=(e,r)=>{var t;if(!(!r||Object.keys(r).length===0))return(t=g[e])==null?void 0:t.reduce((n,o)=>({...n,[o]:r[o]}),{})},k=e=>e?e.split("?")[0]:"",U=e=>(r,t,n=p.default)=>{},v=e=>(r,t,n,o)=>{f("sendSentryErrorLog",o??r,t,n),e&&h(r,n)},b=()=>e=>r=>{var t,n,o,a,s;if(m(r)){let l="Rejected RTK action";(t=r.meta.arg)!=null&&t.endpointName&&(l=`${((n=r.payload)==null?void 0:n.originalStatus)??"Error"} for ${r.meta.arg.endpointName}`);const d=k(((a=(o=r.meta.baseQueryMeta)==null?void 0:o.request)==null?void 0:a.url)??"");if(!d.startsWith("http://localhost")){const c=r.meta.arg.endpointName,u=((s=r.payload)==null?void 0:s.originalStatus)??"unknown";v(!0)(i.sentryMiddleWareError,"processes/logging.ts",{...r,endpoint:c,status:u,url:d},l)}}return e(r)};export{i as S,v as a,U as g,b as s};
