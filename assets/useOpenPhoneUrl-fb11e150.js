import{r as c}from"./index-e67e0a49.js";import{g as v,a as d}from"./sentry-c273a327.js";import{P as m}from"./index-fff9359c.js";import{i}from"./invariant-ea487af3.js";import{c as l}from"./useThemable-7e23fae8.js";class u{static alert(){}}const f=u;var h=l?window.location.href:"";class g{constructor(){this._eventCallbacks={}}_dispatchEvent(e){for(var r=arguments.length,t=new Array(r>1?r-1:0),n=1;n<r;n++)t[n-1]=arguments[n];var s=this._eventCallbacks[e];s!=null&&Array.isArray(s)&&s.map(o=>{o(...t)})}addEventListener(e,r){var t=this;return t._eventCallbacks[e]||(t._eventCallbacks[e]=[r]),t._eventCallbacks[e].push(r),{remove(){var n=t._eventCallbacks[e],s=n.filter(o=>o.toString()!==r.toString());t._eventCallbacks[e]=s}}}removeEventListener(e,r){console.error("Linking.removeEventListener('"+e+"', ...): Method has been deprecated. Please instead use `remove()` on the subscription returned by `Linking.addEventListener`.");var t=this._eventCallbacks[e],n=t.filter(s=>s.toString()!==r.toString());this._eventCallbacks[e]=n}canOpenURL(){return Promise.resolve(!0)}getInitialURL(){return Promise.resolve(h)}openURL(e,r){arguments.length===1&&(r="_blank");try{return p(e,r),this._dispatchEvent("onOpen",e),Promise.resolve()}catch(t){return Promise.reject(t)}}_validateURL(e){i(typeof e=="string","Invalid URL: should be a string. Was: "+e),i(e,"Invalid URL: cannot be empty")}}var p=(a,e)=>{if(l){var r=new URL(a,window.location).toString();r.indexOf("tel:")===0?window.location=r:window.open(r,e,"noopener")}};const L=new g,b=(a=!1,e=!1)=>c.useMemo(()=>({captureSentryBreadcrumb:v(),sendSentryErrorLog:d()}),[!0,a,e]),E=()=>{const{sendSentryErrorLog:a}=b();return e=>{let r="";m.OS!=="android"?r=`telprompt:${e}`:r=`tel:${e}`,L.openURL(r).catch(()=>{f.alert("Sorry, deze functie is niet beschikbaar."),a("useOpenPhoneUrl error","useOpenPhoneUrl.ts",{phoneUrl:r})})}};export{f as A,L,b as a,E as u};
//# sourceMappingURL=useOpenPhoneUrl-fb11e150.js.map
