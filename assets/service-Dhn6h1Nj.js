import{a as P,c as n,b as t}from"./types-Gqi8Uits.js";import{d as S,a as k,M as i}from"./useTrackException-BmEpfZV4.js";import{g as h,S as c,a as y,b as v,c as A,C as p,d,e as l}from"./api-CxBHJK-I.js";const q=async a=>{try{const e=await h(a===P.permitHolder?c.parkingPermitHolder:c.parkingVisitor);return e?JSON.parse(e):void 0}catch(e){return S(e),Promise.reject(e)}},E=async a=>{try{return await y(a.scope===P.permitHolder?c.parkingPermitHolder:c.parkingVisitor,JSON.stringify(a))}catch(e){return e}},f=(a,e,s,u,o)=>{E(a).then(()=>{e(v(a.scope===P.permitHolder?c.parkingPermitHolder:c.parkingVisitor)),S("Token parking account successful refreshed"),s("New token, so old request should fail"),u()},()=>{k("Token parking account save failed"),o(new Error("New token could not be saved"))})},L=(a,e,s)=>new Promise((u,o)=>{if(!a){k("No account type provided"),o(new Error("No account type provided  "));return}q(a).then(g=>{g&&e(m.endpoints[n.login].initiate({pin:g.pin,report_code:g.reportCode})).unwrap().then(({access_token:T})=>f({...g,accessToken:T},e,s,u,o),()=>{k("Token refresh failed, you are now logged out"),s("Session ended"),o(new Error("Token refresh failed"))})})}),r=async({error:a},{dispatch:e,getState:s},u)=>{if((a==null?void 0:a.status)===403){const{currentAccountType:o}=s().parking;return L(o,e,u)}else u("no access")},m=A.injectEndpoints({endpoints:a=>({[n.accountDetails]:a.query({providesTags:["ParkingAccount"],query:e=>({headers:{"SSP-Access-Token":e},method:"GET",slug:i.parking,url:"/account-details",afterError:r})}),[n.addLicensePlate]:a.mutation({invalidatesTags:["ParkingLicensePlates"],query:({accessToken:e,...s})=>({headers:{"SSP-Access-Token":e},body:s,method:"POST",slug:i.parking,url:"/license-plate",afterError:r})}),[n.licensePlates]:a.query({providesTags:["ParkingLicensePlates"],query:({accessToken:e,reportCode:s})=>({headers:{"SSP-Access-Token":e},method:"GET",params:{report_code:s},slug:i.parking,url:"/license-plates",afterError:r})}),[n.login]:a.mutation({query:e=>({body:e,method:"POST",slug:i.parking,url:"/login"})}),[n.parkingSessions]:a.query({providesTags:["ParkingSessions"],query:({accessToken:e,...s})=>({headers:{"SSP-Access-Token":e},method:"GET",params:s,slug:i.parking,url:"/sessions",afterError:r}),keepUnusedDataFor:p.hour}),[n.parkingTransactions]:a.query({providesTags:["ParkingSessions"],query:({accessToken:e,...s})=>({headers:{"SSP-Access-Token":e},method:"GET",params:s,slug:i.parking,url:"/transactions",afterError:r}),keepUnusedDataFor:p.hour}),[n.permits]:a.query({providesTags:["ParkingPermits"],query:({accessToken:e,...s})=>({headers:{"SSP-Access-Token":e},method:"GET",slug:i.parking,url:d({path:"/permits",params:s}),afterError:r})}),[n.sessionReceipt]:a.query({query:({accessToken:e,...s})=>({headers:{"SSP-Access-Token":e},method:"GET",slug:i.parking,url:d({path:"/session/receipt",params:s}),afterError:r})}),[n.startSession]:a.mutation({invalidatesTags:["ParkingSessions"],query:({accessToken:e,...s})=>({headers:{"SSP-Access-Token":e,...l},body:s,method:"POST",slug:i.parking,url:"/session",afterError:r})}),[n.editSession]:a.mutation({invalidatesTags:["ParkingSessions"],query:({accessToken:e,...s})=>({headers:{"SSP-Access-Token":e,...l},body:s,method:"PATCH",slug:i.parking,url:"/session",afterError:r})}),[n.deleteSession]:a.mutation({invalidatesTags:["ParkingSessions"],query:({accessToken:e,...s})=>({headers:{"SSP-Access-Token":e,...l},method:"DELETE",slug:i.parking,url:d({path:"/session",params:s}),afterError:r})}),[n.removeLicensePlate]:a.mutation({invalidatesTags:["ParkingLicensePlates"],query:({accessToken:e,...s})=>({headers:{"SSP-Access-Token":e},method:"DELETE",slug:i.parking,url:d({path:"/license-plate",params:s}),afterError:r})}),[n.increaseBalance]:a.mutation({invalidatesTags:["ParkingAccount"],query:({accessToken:e,...s})=>({headers:{"SSP-Access-Token":e},body:s,method:"POST",slug:i.parking,url:"/balance",afterError:r})}),[n.manageVisitorChangePinCode]:a.mutation({invalidatesTags:["ParkingPermits"],query:({accessToken:e,...s})=>({headers:{"SSP-Access-Token":e},body:s,method:"PUT",slug:i.parking,url:"/visitor/pin-code",afterError:r})}),[n.visitorParkingSessions]:a.query({providesTags:["ParkingSessions"],query:({accessToken:e,...s})=>({headers:{"SSP-Access-Token":e},method:"GET",params:s,slug:i.parking,url:"/visitor/sessions",afterError:r}),keepUnusedDataFor:p.hour,transformResponse:e=>({[t.active]:e.filter(s=>s.status===t.active)||[],[t.completed]:e.filter(s=>s.status===t.completed)||[],[t.cancelled]:e.filter(s=>s.status===t.cancelled)||[],[t.planned]:e.filter(s=>s.status===t.planned)||[]})})}),overrideExisting:!0}),{useAccountDetailsQuery:D,useAddLicensePlateMutation:H,useLicensePlatesQuery:G,useLoginMutation:N,useParkingSessionsQuery:Q,useParkingTransactionsQuery:I,useRemoveLicensePlateMutation:O,usePermitsQuery:U,useSessionReceiptQuery:V,useStartSessionMutation:F,useEditSessionMutation:R,useDeleteSessionMutation:x,useIncreaseBalanceMutation:B,useManageVisitorChangePinCodeMutation:J,useVisitorParkingSessionsQuery:_}=m;export{_ as a,H as b,N as c,Q as u};
