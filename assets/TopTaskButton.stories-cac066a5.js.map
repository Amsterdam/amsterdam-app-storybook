{"version":3,"file":"TopTaskButton.stories-cac066a5.js","sources":["../../src/components/ui/buttons/TopTaskButton.tsx"],"sourcesContent":["import {ReactNode} from 'react'\nimport {PressableProps, StyleSheet, View} from 'react-native'\nimport {Pressable} from '@/components/ui/buttons/Pressable'\nimport {Box} from '@/components/ui/containers/Box'\nimport {Column} from '@/components/ui/layout/Column'\nimport {Row} from '@/components/ui/layout/Row'\nimport {Icon} from '@/components/ui/media/Icon'\nimport {IconName} from '@/components/ui/media/iconPaths'\nimport {Paragraph} from '@/components/ui/text/Paragraph'\nimport {Title} from '@/components/ui/text/Title'\nimport {Theme} from '@/themes/themes'\nimport {useThemable} from '@/themes/useThemable'\nimport {accessibleText} from '@/utils/accessibility/accessibleText'\n\nexport type TopTaskButtonProps = {\n  iconName: IconName\n  isError?: boolean\n  text?: ReactNode\n  title: string\n  titleIconName?: IconName\n} & Omit<PressableProps, 'children'>\n\nexport const TopTaskButton = ({\n  isError = false,\n  iconName,\n  onPress,\n  text,\n  title,\n  titleIconName,\n  testID = '',\n  accessibilityRole = 'button',\n  ...pressableProps\n}: TopTaskButtonProps) => {\n  const styles = useThemable(createStyles)\n\n  return (\n    <Pressable\n      accessibilityLabel={accessibleText(\n        title,\n        typeof text === 'string' ? text : '',\n      )}\n      accessibilityRole={accessibilityRole}\n      grow\n      onPress={onPress}\n      testID={testID}\n      {...pressableProps}>\n      <Box\n        insetHorizontal=\"md\"\n        insetVertical=\"sm\">\n        <Row gutter=\"md\">\n          <View style={styles.height}>\n            <Icon\n              color=\"link\"\n              name={iconName}\n              size=\"xl\"\n            />\n          </View>\n          <Column\n            align=\"center\"\n            grow>\n            <Row\n              gutter=\"sm\"\n              valign=\"center\">\n              <Title\n                color=\"link\"\n                level=\"h5\"\n                testID={`${testID}Title`}\n                text={title}\n              />\n              {!!titleIconName && (\n                <Icon\n                  color=\"link\"\n                  name={titleIconName}\n                />\n              )}\n            </Row>\n            {typeof text === 'string' ? (\n              <Paragraph\n                color={isError ? 'warning' : undefined}\n                testID={`${testID}Text`}\n                variant=\"small\">\n                {text}\n              </Paragraph>\n            ) : (\n              text\n            )}\n          </Column>\n        </Row>\n      </Box>\n    </Pressable>\n  )\n}\n\nconst createStyles = ({text}: Theme) =>\n  StyleSheet.create({\n    height: {\n      justifyContent: 'center',\n      height: text.lineHeight.h5 + text.lineHeight.small,\n    },\n  })\n"],"names":["TopTaskButton","isError","iconName","onPress","text","title","titleIconName","testID","accessibilityRole","pressableProps","styles","useThemable","createStyles","jsx","Pressable","accessibleText","Box","jsxs","Row","View","Icon","Column","Title","Paragraph","StyleSheet"],"mappings":"uiCAsBO,MAAAA,EAAA,CAAA,CAAuB,QAAAC,EAAA,GAClB,SAAAC,EACV,QAAAC,EACA,KAAAC,EACA,MAAAC,EACA,cAAAC,EACA,OAAAC,EAAA,GACS,kBAAAC,EAAA,SACW,GAAAC,CAEtB,IAAA,CACE,MAAAC,EAAAC,EAAAC,CAAA,EAEA,OAAAC,EACEC,EAAC,CAAA,mBAAAC,EACqBV,EAClB,OAAAD,GAAA,SAAAA,EAAA,EACkC,EACpC,kBAAAI,EACA,KAAA,GACI,QAAAL,EACJ,OAAAI,EACA,GAAAE,EACI,SAAAI,EACJG,EAAC,CAAA,gBAAA,KACiB,cAAA,KACF,SAAAC,EAAAC,EAAA,CAAA,OAAA,KAAA,SAAA,CAEZL,EAAAM,EAAA,CAAA,MAAAT,EAAA,OAAA,SAAAG,EACEO,EAAC,CAAA,MAAA,OACO,KAAAlB,EACA,KAAA,IACD,CAAA,EAAA,EAETe,EACAI,EAAC,CAAA,MAAA,SACO,KAAA,GACF,SAAA,CACJJ,EAAAC,EAAC,CAAA,OAAA,KACQ,OAAA,SACA,SAAA,CACPL,EAAAS,EAAC,CAAA,MAAA,OACO,MAAA,KACA,OAAA,GAAAf,CAAA,QACW,KAAAF,CACX,CAAA,EACR,CAAA,CAAAC,GAAAO,EAEEO,EAAC,CAAA,MAAA,OACO,KAAAd,CACA,CAAA,CACR,CAAA,CAAA,EAEJ,OAAAF,GAAA,SAAAS,EAEEU,EAAC,CAAA,MAAAtB,EAAA,UAAA,OAC8B,OAAA,GAAAM,CAAA,OACZ,QAAA,QACT,SAAAH,CACP,CAAA,EAAAA,CAGH,CAAA,CAAA,CAEJ,EAAA,CACF,CAAA,CACF,CAAA,CAGN,EAEAQ,EAAA,CAAA,CAAA,KAAAR,KAAAoB,EAAA,OAAA,CACoB,OAAA,CACR,eAAA,SACU,OAAApB,EAAA,WAAA,GAAAA,EAAA,WAAA,KAC6B,CAEjD,CAAA;;;;;;"}