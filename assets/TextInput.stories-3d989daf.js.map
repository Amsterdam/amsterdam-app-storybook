{"version":3,"file":"TextInput.stories-3d989daf.js","sources":["../../src/components/ui/forms/TextInput.tsx"],"sourcesContent":["import {forwardRef, useEffect, useState} from 'react'\nimport {\n  Platform,\n  StyleSheet,\n  TextInput as TextInputRN,\n  TextInputProps,\n  TextInputProps as TextInputRNProps,\n  View,\n} from 'react-native'\nimport {IconButton} from '@/components/ui/buttons/IconButton'\nimport {Label} from '@/components/ui/forms/Label'\nimport {Column} from '@/components/ui/layout/Column'\nimport {Icon} from '@/components/ui/media/Icon'\nimport {Theme} from '@/themes/themes'\nimport {useThemable} from '@/themes/useThemable'\n\ntype Props = {\n  label: string\n  numberOfLines?: number\n  onChangeText?: (event: string) => void\n  onFocus?: () => void\n  placeholder?: string\n  warning?: boolean\n} & TextInputRNProps\n\nexport const TextInput = forwardRef<TextInputRN, Props>(\n  (\n    {\n      label,\n      numberOfLines,\n      onChangeText,\n      onFocus,\n      placeholder = '',\n      warning,\n      value: valueProp = '',\n      testID = '',\n      accessibilityLanguage = 'nl-NL',\n      ...textInputProps\n    }: Props,\n    ref,\n  ) => {\n    const [hasFocus, setHasFocus] = useState(false)\n    const [value, setValue] = useState(valueProp)\n\n    const styles = useThemable(createStyles({hasFocus, numberOfLines, warning}))\n    const themedTextInputProps = useThemable(createTextInputProps)\n\n    useEffect(() => {\n      setValue(valueProp)\n    }, [valueProp])\n\n    const handleBlur = () => setHasFocus(false)\n\n    const handleChangeText = (text: string) => {\n      setValue(text)\n      onChangeText?.(text)\n    }\n\n    const handleClearText = () => {\n      setValue('')\n      onChangeText?.('')\n    }\n\n    const handleFocus = () => {\n      setHasFocus(true)\n      onFocus?.()\n    }\n\n    return (\n      <Column gutter=\"sm\">\n        <Label\n          isAccessible={!textInputProps.accessibilityLabel}\n          text={label}\n        />\n        <View style={styles.frame}>\n          <TextInputRN\n            {...textInputProps}\n            {...themedTextInputProps}\n            accessibilityLanguage={accessibilityLanguage}\n            numberOfLines={Platform.OS === 'ios' ? undefined : numberOfLines}\n            onBlur={handleBlur}\n            onChangeText={handleChangeText}\n            onFocus={handleFocus}\n            placeholder={placeholder}\n            ref={ref}\n            style={styles.textInput}\n            testID={testID}\n            textAlignVertical=\"top\"\n            value={value}\n          />\n          {value ? (\n            <View>\n              <IconButton\n                accessibilityHint=\"Maak dit tekstveld leeg\"\n                accessibilityLanguage={accessibilityLanguage}\n                icon={\n                  <Icon\n                    name=\"close\"\n                    size=\"lg\"\n                  />\n                }\n                onPress={handleClearText}\n                testID={`${testID}ClearButton`}\n              />\n            </View>\n          ) : null}\n        </View>\n      </Column>\n    )\n  },\n)\n\nconst createStyles =\n  ({hasFocus, numberOfLines, warning}: {hasFocus: boolean} & Partial<Props>) =>\n  ({color, size, text}: Theme) => {\n    const borderWidth = hasFocus || warning ? 2 : 1\n    const paddingHorizontal = size.spacing.md - (borderWidth - 1)\n    const paddingVertical = size.spacing.sm - (borderWidth - 1)\n\n    return StyleSheet.create({\n      frame: {\n        flexDirection: 'row',\n        paddingHorizontal,\n        paddingVertical,\n        backgroundColor: color.box.background.white,\n        borderStyle: 'solid',\n        borderColor: warning\n          ? color.control.warning.border\n          : hasFocus\n          ? color.control.focus.border\n          : color.control.default.border,\n        borderWidth,\n      },\n      textInput: {\n        minHeight:\n          Platform.OS === 'ios' && numberOfLines\n            ? numberOfLines * text.lineHeight.body + 2 * paddingVertical\n            : 'auto',\n        flex: 1,\n        padding: 0, // Override an Android default\n        paddingTop: 0,\n        color: color.text.default,\n        fontFamily: text.fontFamily.regular,\n        fontSize: text.fontSize.body,\n      },\n    })\n  }\n\nconst createTextInputProps = ({color}: Theme): TextInputProps => ({\n  placeholderTextColor: color.text.secondary,\n})\n"],"names":["TextInput","forwardRef","label","numberOfLines","onChangeText","onFocus","placeholder","warning","valueProp","testID","accessibilityLanguage","textInputProps","ref","hasFocus","setHasFocus","useState","value","setValue","styles","useThemable","createStyles","themedTextInputProps","createTextInputProps","useEffect","handleBlur","handleChangeText","text","handleClearText","handleFocus","jsxs","Column","jsx","Label","View","TextInputRN","Platform","IconButton","Icon","color","size","borderWidth","paddingHorizontal","paddingVertical","StyleSheet"],"mappings":"4+BAyBO,MAAAA,EAAAC,EAAA,WAAkB,CAAA,CAErB,MAAAC,EACE,cAAAC,EACA,aAAAC,EACA,QAAAC,EACA,YAAAC,EAAA,GACc,QAAAC,EACd,MAAAC,EAAA,GACmB,OAAAC,EAAA,GACV,sBAAAC,EAAA,QACe,GAAAC,CACrB,EAAAC,IAAA,CAIL,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EACA,CAAAC,EAAAC,CAAA,EAAAF,EAAA,SAAAP,CAAA,EAEAU,EAAAC,EAAAC,EAAA,CAAA,SAAAP,EAAA,cAAAV,EAAA,QAAAI,CAAA,CAAA,CAAA,EACAc,EAAAF,EAAAG,CAAA,EAEAC,EAAAA,UAAA,IAAA,CACEN,EAAAT,CAAA,CAAkB,EAAA,CAAAA,CAAA,CAAA,EAGpB,MAAAgB,EAAA,IAAAV,EAAA,EAAA,EAEAW,EAAAC,GAAA,CACET,EAAAS,CAAA,EACAtB,GAAA,MAAAA,EAAAsB,EAAmB,EAGrBC,EAAA,IAAA,CACEV,EAAA,EAAA,EACAb,GAAA,MAAAA,EAAA,GAAiB,EAGnBwB,EAAA,IAAA,CACEd,EAAA,EAAA,EACAT,GAAA,MAAAA,GAAU,EAGZ,OAAAwB,EAAAC,EAAA,CAAA,OAAA,KAAA,SAAA,CAEIC,EAAAC,EAAC,CAAA,aAAA,CAAArB,EAAA,mBAC+B,KAAAT,CACxB,CAAA,EACR2B,EAAAI,EAAA,CAAA,MAAAf,EAAA,MAAA,SAAA,CAEEa,EAAAG,EAAC,CAAA,GAAAvB,EACK,GAAAU,EACA,sBAAAX,EACJ,cAAAyB,EAAA,KAAA,MAAA,OAAAhC,EACmD,OAAAqB,EAC3C,aAAAC,EACM,QAAAG,EACL,YAAAtB,EACT,IAAAM,EACA,MAAAM,EAAA,UACc,OAAAT,EACd,kBAAA,MACkB,MAAAO,CAClB,CAAA,EACFA,EAAAe,EAAAE,EAAA,CAAA,SAAAF,EAGIK,EAAC,CAAA,kBAAA,0BACmB,sBAAA1B,EAClB,KAAAqB,EAEEM,EAAC,CAAA,KAAA,QACM,KAAA,IACA,CAAA,EACP,QAAAV,EAEO,OAAA,GAAAlB,CAAA,aACQ,CAAA,CAAA,CAAA,EAAA,IAGnB,EAAA,CACN,CAAA,CAAA,CACF,CAGN,EAEAW,EAAA,CAAA,CAAA,SAAAP,EAAA,cAAAV,EAAA,QAAAI,KAAA,CAAA,CAAA,MAAA+B,EAAA,KAAAC,EAAA,KAAAb,KAAA,CAGI,MAAAc,EAAA3B,GAAAN,EAAA,EAAA,EACAkC,EAAAF,EAAA,QAAA,IAAAC,EAAA,GACAE,EAAAH,EAAA,QAAA,IAAAC,EAAA,GAEA,OAAAG,EAAA,OAAA,CAAyB,MAAA,CAChB,cAAA,MACU,kBAAAF,EACf,gBAAAC,EACA,gBAAAJ,EAAA,IAAA,WAAA,MACsC,YAAA,QACzB,YAAA/B,EAAA+B,EAAA,QAAA,QAAA,OAAAzB,EAAAyB,EAAA,QAAA,MAAA,OAAAA,EAAA,QAAA,QAAA,OAKa,YAAAE,CAC1B,EACF,UAAA,CACW,UAAAL,EAAA,KAAA,OAAAhC,EAAAA,EAAAuB,EAAA,WAAA,KAAA,EAAAgB,EAAA,OAIH,KAAA,EACA,QAAA,EACG,WAAA,EACG,MAAAJ,EAAA,KAAA,QACM,WAAAZ,EAAA,WAAA,QACU,SAAAA,EAAA,SAAA,IACJ,CAC1B,CAAA,CAEJ,EAEFJ,EAAA,CAAA,CAAA,MAAAgB,MAAA,CAAkE,qBAAAA,EAAA,KAAA,SAElE;;;;;;;;;;;;;;;;"}