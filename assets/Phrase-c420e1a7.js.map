{"version":3,"file":"Phrase-c420e1a7.js","sources":["../../src/components/ui/text/Phrase.tsx"],"sourcesContent":["import {ReactNode, useMemo} from 'react'\nimport {StyleSheet, Text, TextProps} from 'react-native'\nimport {Theme} from '@/themes/themes'\nimport {Emphasis, ParagraphVariants} from '@/themes/tokens/text'\nimport {useThemable} from '@/themes/useThemable'\n\nexport type PhraseProps = {\n  children: ReactNode\n  /**\n   * Defines the color of the phrase. Maps with the text color tokens.\n   */\n  color?: 'default' | 'inverse' | 'link' | 'secondary'\n  /**\n   * Allows the phrase to convey more emphasis.\n   */\n  emphasis?: keyof typeof Emphasis\n  /**\n   * Whether the phrase is underlined. Use this for a link only.\n   */\n  underline?: boolean\n  /**\n   * Which variation of a phrase to display.\n   */\n  variant?: ParagraphVariants\n} & Omit<TextProps, 'style'>\n\n/**\n * Displays (very) short text phrases.\n * Offers the three sizing variants, and bold text.\n * For sentences, use `Paragraph` instead.\n */\nexport const Phrase = ({\n  children,\n  color = 'default',\n  emphasis = 'default',\n  underline = false,\n  variant = 'body',\n  ...textProps\n}: PhraseProps) => {\n  const createdStyles = useMemo(\n    () => createStyles({color, emphasis, underline, variant}),\n    [color, emphasis, underline, variant],\n  )\n  const styles = useThemable(createdStyles)\n\n  return (\n    <Text\n      accessibilityLanguage=\"nl-NL\"\n      style={styles.text}\n      {...textProps}>\n      {children}\n    </Text>\n  )\n}\n\nconst createStyles =\n  ({\n    color: textColor,\n    emphasis,\n    underline,\n    variant,\n  }: Required<\n    Pick<PhraseProps, 'color' | 'emphasis' | 'underline' | 'variant'>\n  >) =>\n  ({color, text}: Theme) =>\n    StyleSheet.create({\n      text: {\n        flexShrink: 1,\n        color: color.text[textColor],\n        fontFamily:\n          text.fontFamily[emphasis === Emphasis.strong ? 'bold' : 'regular'],\n        fontSize: text.fontSize[variant],\n        lineHeight: text.lineHeight[variant],\n        textDecorationLine: underline ? 'underline' : 'none',\n      },\n    })\n"],"names":["Phrase","children","color","emphasis","underline","variant","textProps","createdStyles","useMemo","createStyles","styles","useThemable","jsx","Text","textColor","text","StyleSheet","Emphasis"],"mappings":"mJA+BO,MAAAA,EAAA,CAAA,CAAgB,SAAAC,EACrB,MAAAC,EAAA,UACQ,SAAAC,EAAA,UACG,UAAAC,EAAA,GACC,QAAAC,EAAA,OACF,GAAAC,CAEZ,IAAA,CACE,MAAAC,EAAAC,EAAA,QAAsB,IAAAC,EAAA,CAAA,MAAAP,EAAA,SAAAC,EAAA,UAAAC,EAAA,QAAAC,CAAA,CAAA,EACoC,CAAAH,EAAAC,EAAAC,EAAAC,CAAA,CACpB,EAEtCK,EAAAC,EAAAJ,CAAA,EAEA,OAAAK,EACEC,EAAC,CAAA,sBAAA,QACuB,MAAAH,EAAA,KACR,GAAAJ,EACV,SAAAL,CACH,CAAA,CAGP,EAEAQ,EAAA,CAAA,CACG,MAAAK,EACQ,SAAAX,EACP,UAAAC,EACA,QAAAC,CAEF,IAAA,CAAA,CAAA,MAAAH,EAAA,KAAAa,CAAA,IAAAC,EAAA,OAAA,CAIoB,KAAA,CACV,WAAA,EACQ,MAAAd,EAAA,KAAAY,CAAA,EACe,WAAAC,EAAA,WAAAZ,IAAAc,EAAA,OAAA,OAAA,SAAA,EAEwC,SAAAF,EAAA,SAAAV,CAAA,EACpC,WAAAU,EAAA,WAAAV,CAAA,EACI,mBAAAD,EAAA,YAAA,MACW,CAElD,CAAA"}