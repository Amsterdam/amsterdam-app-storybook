{"version":3,"file":"Trait.stories-f90b1b3c.js","sources":["../../src/components/ui/feedback/Trait.tsx"],"sourcesContent":["import {ReactNode} from 'react'\nimport {TextProps} from 'react-native'\nimport {Row} from '@/components/ui/layout/Row'\nimport {Icon} from '@/components/ui/media/Icon'\nimport {IconName} from '@/components/ui/media/iconPaths'\nimport {Phrase} from '@/components/ui/text/Phrase'\nimport {TestProps} from '@/components/ui/types'\n\ntype Props = {\n  accessibilityLabel?: TextProps['accessibilityLabel']\n  accessibilityLanguage?: TextProps['accessibilityLanguage']\n  /**\n   * Allows a custom visualization for the trait.\n   * Use a small component here. Not rendered if an icon name is provided.\n   */\n  children?: ReactNode\n  /**\n   * The name of the icon to visually support the trait label.\n   */\n  iconName?: IconName\n  /**\n   * The label identifying the trait.\n   * Should be one or a few words.\n   */\n  label: string\n} & Required<TestProps>\n\nexport const Trait = ({\n  accessibilityLabel,\n  accessibilityLanguage = 'nl-NL',\n  children,\n  iconName,\n  label,\n  testID,\n}: Props) => (\n  <Row\n    gutter=\"sm\"\n    valign=\"center\">\n    {iconName ? (\n      <Icon\n        name={iconName}\n        testID={`${testID}Icon`}\n      />\n    ) : (\n      children\n    )}\n    <Phrase\n      accessibilityLabel={accessibilityLabel}\n      accessibilityLanguage={accessibilityLanguage}\n      testID={`${testID}Label`}\n      variant=\"small\">\n      {label}\n    </Phrase>\n  </Row>\n)\n"],"names":["Trait","accessibilityLabel","accessibilityLanguage","children","iconName","label","testID","jsxs","Row","jsx","Icon","Phrase"],"mappings":"guBA2BO,MAAAA,EAAA,CAAA,CAAe,mBAAAC,EACpB,sBAAAC,EAAA,QACwB,SAAAC,EACxB,SAAAC,EACA,MAAAC,EACA,OAAAC,CAEF,IAAAC,EACEC,EAAC,CAAA,OAAA,KACQ,OAAA,SACA,SAAA,CACNJ,EAAAK,EACCC,EAAC,CAAA,KAAAN,EACO,OAAA,GAAAE,CAAA,MACW,CAAA,EAAAH,EAGnBM,EAEFE,EAAC,CAAA,mBAAAV,EACC,sBAAAC,EACA,OAAA,GAAAI,CAAA,QACiB,QAAA,QACT,SAAAD,CACP,CAAA,CACH,CAAA,CACF;;;;;;;"}