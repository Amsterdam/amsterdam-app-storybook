import{a as v,j as s,S as B}from"./index-1401012c.js";import{r as m}from"./index-76fb7be0.js";import{I as D}from"./IconButton-49dcd77b.js";import{L as F}from"./Label-455d2ccf.js";import{C as z}from"./Column-7bfce985.js";import{I as M}from"./Icon-2c4ef664.js";import{u as I}from"./useThemable-212e8c5a.js";import{V as S}from"./index-e1b95cde.js";import{T as A}from"./index-226d16f2.js";import{P as q}from"./invariant-f1a82cf7.js";import"./_commonjsHelpers-de833af9.js";import"./Pressable-99f17dec.js";import"./PressableBase-69578027.js";import"./usePiwikTrackCustomEventFromProps-e37a7486.js";import"./slugs-89bf83c9.js";import"./index-1ec8836c.js";import"./NativeEventEmitter-7be6cb46.js";import"./index-14cede91.js";import"./TextAncestorContext-63ed7f56.js";import"./development-fba0c344.js";import"./redux-toolkit.esm-1f08def5.js";import"./useSentry-ca9002c4.js";import"./logging-7d8f2fa7.js";import"./callBound-55a1829f.js";import"./index-ed4d3a36.js";import"./extends-98964cd2.js";import"./Box-19c7581a.js";import"./layoutStyles-ee44dbe0.js";import"./config-55b2a55c.js";import"./Badge-1abb201f.js";import"./Row-965466b1.js";import"./mapMainAxisAlignment-e13c2957.js";import"./useDeviceContext-20251673.js";import"./index-5aae214f.js";import"./index-240c6d7a.js";import"./index-e39fa516.js";import"./types-e7c584cc.js";import"./Paragraph-78bc5991.js";import"./index-5844c8dd.js";import"./index-9d475cdf.js";import"./Animated-905ced6c.js";import"./index-759f743a.js";import"./useTheme-f78652d4.js";import"./index-d3ea75b5.js";import"./base-color-0322ee5e.js";const f=m.forwardRef(({label:r,numberOfLines:i,onChangeText:e,onFocus:t,placeholder:p="",warning:a,value:o="",testID:n="",accessibilityLanguage:l="nl-NL",...b},C)=>{const[L,h]=m.useState(!1),[g,u]=m.useState(o),y=I(P({hasFocus:L,numberOfLines:i,warning:a})),O=I(R);m.useEffect(()=>{u(o)},[o]);const E=()=>h(!1),H=x=>{u(x),e==null||e(x)},N=()=>{u(""),e==null||e("")},W=()=>{h(!0),t==null||t()};return v(z,{gutter:"sm",children:[s(F,{isAccessible:!b.accessibilityLabel,text:r}),v(S,{style:y.frame,children:[s(A,{...b,...O,accessibilityLanguage:l,numberOfLines:q.OS==="ios"?void 0:i,onBlur:E,onChangeText:H,onFocus:W,placeholder:p,ref:C,style:y.textInput,testID:n,textAlignVertical:"top",value:g}),g?s(S,{children:s(D,{accessibilityHint:"Maak dit tekstveld leeg",accessibilityLanguage:l,icon:s(M,{name:"close",size:"lg",testID:`${n}ClearIcon`}),onPress:N,testID:`${n}ClearButton`})}):null]})]})}),P=({hasFocus:r,numberOfLines:i,warning:e})=>({color:t,size:p,text:a})=>{const o=r||e?2:1,n=p.spacing.md-(o-1),l=p.spacing.sm-(o-1);return B.create({frame:{flexDirection:"row",paddingHorizontal:n,paddingVertical:l,backgroundColor:t.box.background.white,borderStyle:"solid",borderColor:e?t.control.warning.border:r?t.control.focus.border:t.control.default.border,borderWidth:o},textInput:{minHeight:q.OS==="ios"&&i?i*a.lineHeight.body+2*l:"auto",flex:1,padding:0,paddingTop:0,color:t.text.default,fontFamily:a.fontFamily.regular,fontSize:a.fontSize.body}})},R=({color:r})=>({placeholderTextColor:r.text.secondary});try{f.displayName="TextInput",f.__docgenInfo={description:"",displayName:"TextInput",props:{label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string"}},numberOfLines:{defaultValue:null,description:`Sets the number of lines for a TextInput.
Use it with multiline set to true to be able to fill the lines.`,name:"numberOfLines",required:!1,type:{name:"number"}},onChangeText:{defaultValue:null,description:`Callback that is called when the text input's text changes.
Changed text is passed as an argument to the callback handler.`,name:"onChangeText",required:!1,type:{name:"(((event: string) => void) & ((text: string) => void))"}},onFocus:{defaultValue:null,description:"Callback that is called when the text input is focused",name:"onFocus",required:!1,type:{name:"((() => void) & ((e: NativeSyntheticEvent<TextInputFocusEventData>) => void))"}},placeholder:{defaultValue:{value:""},description:"The string that will be rendered before text input has been entered",name:"placeholder",required:!1,type:{name:"string"}},warning:{defaultValue:null,description:"",name:"warning",required:!1,type:{name:"boolean"}}}}}catch{}const We={component:f},d={args:{label:"Wat is de titel van je bericht?",placeholder:"Voer een titel in...",value:""}},c={args:{label:"Wat is de titel van je bericht?",multiline:!0,numberOfLines:5,placeholder:"Voer een titel in...",value:""}};var V,_,w;d.parameters={...d.parameters,docs:{...(V=d.parameters)==null?void 0:V.docs,source:{originalSource:`{
  args: {
    label: 'Wat is de titel van je bericht?',
    placeholder: 'Voer een titel in...',
    value: ''
  }
}`,...(w=(_=d.parameters)==null?void 0:_.docs)==null?void 0:w.source}}};var T,j,k;c.parameters={...c.parameters,docs:{...(T=c.parameters)==null?void 0:T.docs,source:{originalSource:`{
  args: {
    label: 'Wat is de titel van je bericht?',
    multiline: true,
    numberOfLines: 5,
    placeholder: 'Voer een titel in...',
    value: ''
  }
}`,...(k=(j=c.parameters)==null?void 0:j.docs)==null?void 0:k.source}}};const Be=["Default","Multiline"];export{d as Default,c as Multiline,Be as __namedExportsOrder,We as default};
